@startuml

title "Sequence diagram - Clause Option"

actor developer
actor holder_Alice
actor holder_Bob
collections blockchain

== Deployment of the smart contracts ==

group from developper
developer -> developer : unlock account
activate developer
developer -> blockchain : deploy smart contract ERC20 "token payment"
developer -> blockchain : deploy smart contract ERC1400 "token partitions"
note right
dependencies : ERC20
Can be controlable or not
end note
developer -> blockchain : deploy smart contract Clause Option
note right
dependencies : ERC20, ERC1400
end note
deactivate developer
end

== Register the roles on smart contract ERC1400 ==

group registration Alice

holder_Alice -> holder_Alice : unlock account
activate holder_Alice
holder_Alice -> blockchain : register Alice as ERC1400 holder
deactivate holder_Alice
end

group registration Bob

holder_Bob -> holder_Bob : unlock account#2
activate holder_Bob
holder_Bob -> blockchain : register Bob as ERC1400 holder
deactivate holder_Bob
end

developer -> blockchain : register clause_option.address as ERC1400 escrow

== Acquisition of partitions ==

developer --> blockchain : transfer ERC20 tokens to the holders who bought them

group set up the partitions

activate holder_Alice
holder_Alice -> blockchain : allow ERC1400 to debit n ERC20 tokens
holder_Alice -> blockchain : buy a partition P for n tokens
note right
ERC1400 charges Alice n ERC20 tokens
creation of ERC1400 partition P
end note
deactivate holder_Alice
end

== Clause Option ==

group Option set up : promisor Alice, recipient Bob, partition P, exercise price e > n, option price x, duration d

holder_Bob -> blockchain : allow clause_option to debit x ERC20 tokens
holder_Alice -> blockchain : allow clause_option to confine partition P

holder_Alice -> blockchain : start option on P for Bob
note right
clause_option charges Bob x tokens
clause_option confine P for a duration d
P is still Alice's property (frozen)
end note
end

group option 1 : Bob accepts in time

holder_Bob -> blockchain : allow ERC1400 to debit e ERC20 tokens
holder_Bob -> blockchain : accept offer for P
note right
clause_option transfers P from Alice to Bob
ERC1400 transfers e ERC20 tokens from Bob to Alice
end note
end

group option 2: Bob denies in time

holder_Bob -> blockchain : deny offer for P
note right
clause_option deconfine P
end note
end

group option 3: Option runs out of time

blockchain -> blockchain : stop option
note left
clause_option deconfine P
similar to denial
end note
end

@enduml
