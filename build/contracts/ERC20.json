{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Context.sol",
    "11": "interfaces/my_IERC20.sol",
    "4": "contracts/math/SafeMath.sol",
    "6": "contracts/my_ERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/my_ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        4016
      ]
    },
    "id": 4017,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3468,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "contracts/Context.sol",
        "file": "contracts/Context.sol",
        "id": 3469,
        "nodeType": "ImportDirective",
        "scope": 4017,
        "sourceUnit": 23,
        "src": "58:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/my_IERC20.sol",
        "file": "interfaces/my_IERC20.sol",
        "id": 3470,
        "nodeType": "ImportDirective",
        "scope": 4017,
        "sourceUnit": 4601,
        "src": "90:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/math/SafeMath.sol",
        "file": "contracts/math/SafeMath.sol",
        "id": 3471,
        "nodeType": "ImportDirective",
        "scope": 4017,
        "sourceUnit": 1902,
        "src": "125:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3473,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22,
              "src": "1345:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$22",
                "typeString": "contract Context"
              }
            },
            "id": 3474,
            "nodeType": "InheritanceSpecifier",
            "src": "1345:7:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3475,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4600,
              "src": "1354:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4600",
                "typeString": "contract IERC20"
              }
            },
            "id": 3476,
            "nodeType": "InheritanceSpecifier",
            "src": "1354:6:6"
          }
        ],
        "contractDependencies": [
          22,
          4600
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3472,
          "nodeType": "StructuredDocumentation",
          "src": "164:1162:6",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 4016,
        "linearizedBaseContracts": [
          4016,
          4600,
          22
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3479,
            "libraryName": {
              "contractScope": null,
              "id": 3477,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1901,
              "src": "1373:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1901",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1367:27:6",
            "typeName": {
              "id": 3478,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1386:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3483,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4016,
            "src": "1400:46:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3482,
              "keyType": {
                "id": 3480,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1409:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1400:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3481,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1420:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3489,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4016,
            "src": "1453:69:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 3488,
              "keyType": {
                "id": 3484,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1462:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1453:49:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 3487,
                "keyType": {
                  "id": 3485,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1482:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1473:28:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 3486,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1493:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3491,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4016,
            "src": "1529:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3490,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1529:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3493,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4016,
            "src": "1564:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3492,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1564:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3495,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4016,
            "src": "1590:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3494,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1590:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3497,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4016,
            "src": "1618:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3496,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1618:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3517,
              "nodeType": "Block",
              "src": "2026:79:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3505,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3493,
                      "src": "2036:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3506,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3500,
                      "src": "2044:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2036:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3508,
                  "nodeType": "ExpressionStatement",
                  "src": "2036:12:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3509,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "2058:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3510,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3502,
                      "src": "2068:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2058:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3512,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:16:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3513,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3497,
                      "src": "2084:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 3514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2096:2:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2084:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3516,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:14:6"
                }
              ]
            },
            "documentation": {
              "id": 3498,
              "nodeType": "StructuredDocumentation",
              "src": "1648:311:6",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 3518,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3500,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3518,
                  "src": "1977:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3499,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3502,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3518,
                  "src": "1997:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3501,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1997:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1976:42:6"
            },
            "returnParameters": {
              "id": 3504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2026:0:6"
            },
            "scope": 4016,
            "src": "1964:141:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3526,
              "nodeType": "Block",
              "src": "2222:29:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3524,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3493,
                    "src": "2239:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3523,
                  "id": 3525,
                  "nodeType": "Return",
                  "src": "2232:12:6"
                }
              ]
            },
            "documentation": {
              "id": 3519,
              "nodeType": "StructuredDocumentation",
              "src": "2111:54:6",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 3527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2183:2:6"
            },
            "returnParameters": {
              "id": 3523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3522,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3527,
                  "src": "2207:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2206:15:6"
            },
            "scope": 4016,
            "src": "2170:81:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3535,
              "nodeType": "Block",
              "src": "2418:31:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3533,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3495,
                    "src": "2435:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3532,
                  "id": 3534,
                  "nodeType": "Return",
                  "src": "2428:14:6"
                }
              ]
            },
            "documentation": {
              "id": 3528,
              "nodeType": "StructuredDocumentation",
              "src": "2257:102:6",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 3536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:2:6"
            },
            "returnParameters": {
              "id": 3532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3531,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3536,
                  "src": "2403:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3530,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2402:15:6"
            },
            "scope": 4016,
            "src": "2364:85:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3544,
              "nodeType": "Block",
              "src": "3120:33:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3542,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3497,
                    "src": "3137:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 3541,
                  "id": 3543,
                  "nodeType": "Return",
                  "src": "3130:16:6"
                }
              ]
            },
            "documentation": {
              "id": 3537,
              "nodeType": "StructuredDocumentation",
              "src": "2455:612:6",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 3545,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3089:2:6"
            },
            "returnParameters": {
              "id": 3541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3545,
                  "src": "3113:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3539,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3113:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3112:7:6"
            },
            "scope": 4016,
            "src": "3072:81:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4513
            ],
            "body": {
              "id": 3554,
              "nodeType": "Block",
              "src": "3275:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3552,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3491,
                    "src": "3292:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3551,
                  "id": 3553,
                  "nodeType": "Return",
                  "src": "3285:19:6"
                }
              ]
            },
            "documentation": {
              "id": 3546,
              "nodeType": "StructuredDocumentation",
              "src": "3159:49:6",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 3555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3548,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3248:8:6"
            },
            "parameters": {
              "id": 3547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3233:2:6"
            },
            "returnParameters": {
              "id": 3551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3550,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3555,
                  "src": "3266:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3265:9:6"
            },
            "scope": 4016,
            "src": "3213:98:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4521
            ],
            "body": {
              "id": 3568,
              "nodeType": "Block",
              "src": "3444:42:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3564,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "3461:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3566,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3565,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3558,
                      "src": "3471:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3461:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3563,
                  "id": 3567,
                  "nodeType": "Return",
                  "src": "3454:25:6"
                }
              ]
            },
            "documentation": {
              "id": 3556,
              "nodeType": "StructuredDocumentation",
              "src": "3317:47:6",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 3569,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3560,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3417:8:6"
            },
            "parameters": {
              "id": 3559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3558,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3569,
                  "src": "3388:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3387:17:6"
            },
            "returnParameters": {
              "id": 3563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3562,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3569,
                  "src": "3435:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3434:9:6"
            },
            "scope": 4016,
            "src": "3369:117:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4531
            ],
            "body": {
              "id": 3589,
              "nodeType": "Block",
              "src": "3781:80:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3581,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "3801:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3801:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3583,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3572,
                        "src": "3815:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3584,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3574,
                        "src": "3826:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3580,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3790,
                      "src": "3791:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3791:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3586,
                  "nodeType": "ExpressionStatement",
                  "src": "3791:42:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3850:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3579,
                  "id": 3588,
                  "nodeType": "Return",
                  "src": "3843:11:6"
                }
              ]
            },
            "documentation": {
              "id": 3570,
              "nodeType": "StructuredDocumentation",
              "src": "3492:192:6",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 3590,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3576,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3757:8:6"
            },
            "parameters": {
              "id": 3575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3572,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3590,
                  "src": "3707:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3707:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3574,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3590,
                  "src": "3726:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3726:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3706:35:6"
            },
            "returnParameters": {
              "id": 3579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3578,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3590,
                  "src": "3775:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3577,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3774:6:6"
            },
            "scope": 4016,
            "src": "3689:172:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4541
            ],
            "body": {
              "id": 3607,
              "nodeType": "Block",
              "src": "4017:51:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3601,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3489,
                        "src": "4034:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 3603,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3602,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3593,
                        "src": "4046:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4034:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3605,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3604,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3595,
                      "src": "4053:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4034:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3600,
                  "id": 3606,
                  "nodeType": "Return",
                  "src": "4027:34:6"
                }
              ]
            },
            "documentation": {
              "id": 3591,
              "nodeType": "StructuredDocumentation",
              "src": "3867:47:6",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 3608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3597,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3990:8:6"
            },
            "parameters": {
              "id": 3596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3593,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3608,
                  "src": "3938:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3938:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3595,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3608,
                  "src": "3953:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3953:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3937:32:6"
            },
            "returnParameters": {
              "id": 3600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3599,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3608,
                  "src": "4008:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4007:9:6"
            },
            "scope": 4016,
            "src": "3919:149:6",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4551
            ],
            "body": {
              "id": 3628,
              "nodeType": "Block",
              "src": "4295:77:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3620,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "4314:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4314:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3622,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3611,
                        "src": "4328:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3623,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3613,
                        "src": "4337:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3619,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3946,
                      "src": "4305:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4305:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3625,
                  "nodeType": "ExpressionStatement",
                  "src": "4305:39:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4361:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3618,
                  "id": 3627,
                  "nodeType": "Return",
                  "src": "4354:11:6"
                }
              ]
            },
            "documentation": {
              "id": 3609,
              "nodeType": "StructuredDocumentation",
              "src": "4074:127:6",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 3629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3615,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4271:8:6"
            },
            "parameters": {
              "id": 3614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3611,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3629,
                  "src": "4223:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4223:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3613,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3629,
                  "src": "4240:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4240:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4222:33:6"
            },
            "returnParameters": {
              "id": 3618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3617,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3629,
                  "src": "4289:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3616,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4288:6:6"
            },
            "scope": 4016,
            "src": "4206:166:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4563
            ],
            "body": {
              "id": 3666,
              "nodeType": "Block",
              "src": "4951:205:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3643,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3632,
                        "src": "4971:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3644,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3634,
                        "src": "4979:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3645,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3636,
                        "src": "4990:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3642,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3790,
                      "src": "4961:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4961:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3647,
                  "nodeType": "ExpressionStatement",
                  "src": "4961:36:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3649,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3632,
                        "src": "5016:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3650,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "5024:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5024:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3659,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3636,
                            "src": "5076:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 3660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5084:42:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3652,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3489,
                                "src": "5038:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3654,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3653,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3632,
                                "src": "5050:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5038:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3657,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3655,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "5058:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 3656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5058:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5038:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1779,
                          "src": "5038:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 3661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5038:89:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3648,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3946,
                      "src": "5007:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5007:121:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3663,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:121:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5145:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3641,
                  "id": 3665,
                  "nodeType": "Return",
                  "src": "5138:11:6"
                }
              ]
            },
            "documentation": {
              "id": 3630,
              "nodeType": "StructuredDocumentation",
              "src": "4378:456:6",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 3667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3638,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4927:8:6"
            },
            "parameters": {
              "id": 3637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3632,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3667,
                  "src": "4861:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4861:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3634,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3667,
                  "src": "4877:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4877:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3636,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3667,
                  "src": "4896:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4860:51:6"
            },
            "returnParameters": {
              "id": 3641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3667,
                  "src": "4945:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4945:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4944:6:6"
            },
            "scope": 4016,
            "src": "4839:317:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3694,
              "nodeType": "Block",
              "src": "5645:121:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3678,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "5664:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5664:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3680,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3670,
                        "src": "5678:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3688,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3672,
                            "src": "5726:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3681,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3489,
                                "src": "5687:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3684,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3682,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "5699:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 3683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5699:12:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5687:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3686,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3685,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3670,
                              "src": "5713:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5687:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1734,
                          "src": "5687:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5687:50:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3677,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3946,
                      "src": "5655:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5655:83:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3691,
                  "nodeType": "ExpressionStatement",
                  "src": "5655:83:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5755:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3676,
                  "id": 3693,
                  "nodeType": "Return",
                  "src": "5748:11:6"
                }
              ]
            },
            "documentation": {
              "id": 3668,
              "nodeType": "StructuredDocumentation",
              "src": "5162:384:6",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 3695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3670,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3695,
                  "src": "5578:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5578:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3672,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3695,
                  "src": "5595:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5577:37:6"
            },
            "returnParameters": {
              "id": 3676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3675,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3695,
                  "src": "5639:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5639:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5638:6:6"
            },
            "scope": 4016,
            "src": "5551:215:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3723,
              "nodeType": "Block",
              "src": "6352:167:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3706,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "6371:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6371:12:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3708,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3698,
                        "src": "6385:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3716,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3700,
                            "src": "6433:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 3717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6450:39:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3709,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3489,
                                "src": "6394:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3712,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3710,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "6406:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 3711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6406:12:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6394:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3714,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3713,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3698,
                              "src": "6420:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6394:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1779,
                          "src": "6394:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 3718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6394:96:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3705,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3946,
                      "src": "6362:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6362:129:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3720,
                  "nodeType": "ExpressionStatement",
                  "src": "6362:129:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6508:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3704,
                  "id": 3722,
                  "nodeType": "Return",
                  "src": "6501:11:6"
                }
              ]
            },
            "documentation": {
              "id": 3696,
              "nodeType": "StructuredDocumentation",
              "src": "5772:476:6",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 3724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3698,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3724,
                  "src": "6280:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6280:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3700,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3724,
                  "src": "6297:23:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6297:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6279:42:6"
            },
            "returnParameters": {
              "id": 3704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3703,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3724,
                  "src": "6346:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3702,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6346:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6345:6:6"
            },
            "scope": 4016,
            "src": "6253:266:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3789,
              "nodeType": "Block",
              "src": "7080:443:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3735,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3727,
                          "src": "7098:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7116:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7108:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3736,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7108:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7108:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7098:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 3741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7120:39:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 3734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7090:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7090:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3743,
                  "nodeType": "ExpressionStatement",
                  "src": "7090:70:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3745,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3729,
                          "src": "7178:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7199:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7191:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3746,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7191:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7191:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7178:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 3751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7203:37:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 3744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7170:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7170:71:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3753,
                  "nodeType": "ExpressionStatement",
                  "src": "7170:71:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3755,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "7273:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3756,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3729,
                        "src": "7281:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3757,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "7292:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3754,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3968,
                      "src": "7252:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7252:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3759,
                  "nodeType": "ExpressionStatement",
                  "src": "7252:47:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3760,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3483,
                        "src": "7310:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3762,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3761,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "7320:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7310:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3767,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3731,
                          "src": "7352:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 3768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7360:40:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3763,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3483,
                            "src": "7330:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3765,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3764,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3727,
                            "src": "7340:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7330:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1779,
                        "src": "7330:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 3769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7330:71:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7310:91:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3771,
                  "nodeType": "ExpressionStatement",
                  "src": "7310:91:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3772,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3483,
                        "src": "7411:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3774,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3773,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3729,
                        "src": "7421:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7411:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3779,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3731,
                          "src": "7459:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3775,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3483,
                            "src": "7434:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3777,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3776,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3729,
                            "src": "7444:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7434:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1734,
                        "src": "7434:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7434:32:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7411:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3782,
                  "nodeType": "ExpressionStatement",
                  "src": "7411:55:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3784,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3727,
                        "src": "7490:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3785,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3729,
                        "src": "7498:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3786,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3731,
                        "src": "7509:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3783,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4572,
                      "src": "7481:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7481:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3788,
                  "nodeType": "EmitStatement",
                  "src": "7476:40:6"
                }
              ]
            },
            "documentation": {
              "id": 3725,
              "nodeType": "StructuredDocumentation",
              "src": "6525:463:6",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 3790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3727,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3790,
                  "src": "7012:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7012:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3729,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3790,
                  "src": "7028:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7028:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3731,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3790,
                  "src": "7047:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7011:51:6"
            },
            "returnParameters": {
              "id": 3733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7080:0:6"
            },
            "scope": 4016,
            "src": "6993:530:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3844,
              "nodeType": "Block",
              "src": "7859:305:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3799,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3793,
                          "src": "7877:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7896:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7888:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3800,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7888:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7888:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7877:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 3805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7900:33:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 3798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7869:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7869:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3807,
                  "nodeType": "ExpressionStatement",
                  "src": "7869:65:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7974:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7966:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3809,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7966:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7966:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3813,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "7978:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3795,
                        "src": "7987:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3808,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3968,
                      "src": "7945:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7945:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3816,
                  "nodeType": "ExpressionStatement",
                  "src": "7945:49:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3817,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "8005:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3820,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3795,
                          "src": "8037:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3818,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3491,
                          "src": "8020:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1734,
                        "src": "8020:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8020:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8005:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3823,
                  "nodeType": "ExpressionStatement",
                  "src": "8005:39:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3824,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3483,
                        "src": "8054:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3826,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3825,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "8064:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8054:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3831,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3795,
                          "src": "8098:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3827,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3483,
                            "src": "8075:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3829,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3828,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3793,
                            "src": "8085:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8075:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1734,
                        "src": "8075:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8075:30:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8054:51:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3834,
                  "nodeType": "ExpressionStatement",
                  "src": "8054:51:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8137:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8129:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8129:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8129:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3840,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3793,
                        "src": "8141:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3841,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3795,
                        "src": "8150:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3835,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4572,
                      "src": "8120:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8120:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3843,
                  "nodeType": "EmitStatement",
                  "src": "8115:42:6"
                }
              ]
            },
            "documentation": {
              "id": 3791,
              "nodeType": "StructuredDocumentation",
              "src": "7529:260:6",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
            },
            "id": 3845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3793,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3845,
                  "src": "7809:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7809:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3795,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3845,
                  "src": "7826:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7826:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7808:33:6"
            },
            "returnParameters": {
              "id": 3797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7859:0:6"
            },
            "scope": 4016,
            "src": "7794:370:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3900,
              "nodeType": "Block",
              "src": "8549:345:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3854,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3848,
                          "src": "8567:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8586:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8578:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3855,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8578:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8578:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8567:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 3860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8590:35:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 3853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8559:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8559:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3862,
                  "nodeType": "ExpressionStatement",
                  "src": "8559:67:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3864,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3848,
                        "src": "8658:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8675:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8667:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8667:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8667:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3869,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3850,
                        "src": "8679:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3863,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3968,
                      "src": "8637:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8637:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3871,
                  "nodeType": "ExpressionStatement",
                  "src": "8637:49:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3872,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3483,
                        "src": "8697:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3874,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3873,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3848,
                        "src": "8707:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8697:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3879,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3850,
                          "src": "8741:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8749:36:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3875,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3483,
                            "src": "8718:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3877,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3876,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3848,
                            "src": "8728:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8718:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1779,
                        "src": "8718:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 3881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8718:68:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8697:89:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3883,
                  "nodeType": "ExpressionStatement",
                  "src": "8697:89:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3884,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3491,
                      "src": "8796:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3887,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3850,
                          "src": "8828:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3885,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3491,
                          "src": "8811:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1751,
                        "src": "8811:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8811:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8796:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3890,
                  "nodeType": "ExpressionStatement",
                  "src": "8796:39:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3892,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3848,
                        "src": "8859:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8876:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8868:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3893,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8868:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8868:10:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3897,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3850,
                        "src": "8880:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3891,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4572,
                      "src": "8850:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8850:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3899,
                  "nodeType": "EmitStatement",
                  "src": "8845:42:6"
                }
              ]
            },
            "documentation": {
              "id": 3846,
              "nodeType": "StructuredDocumentation",
              "src": "8170:309:6",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 3901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3848,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3901,
                  "src": "8499:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8499:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3850,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3901,
                  "src": "8516:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8516:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8498:33:6"
            },
            "returnParameters": {
              "id": 3852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8549:0:6"
            },
            "scope": 4016,
            "src": "8484:410:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3945,
              "nodeType": "Block",
              "src": "9400:257:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3912,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3904,
                          "src": "9418:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9435:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9427:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3913,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9427:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9427:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9418:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 3918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9439:38:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 3911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9410:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9410:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3920,
                  "nodeType": "ExpressionStatement",
                  "src": "9410:68:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3922,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3906,
                          "src": "9496:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3925,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9515:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9507:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3923,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9507:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9507:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9496:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 3928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9519:36:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 3921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9488:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9488:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3930,
                  "nodeType": "ExpressionStatement",
                  "src": "9488:68:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3931,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3489,
                          "src": "9567:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 3934,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3932,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3904,
                          "src": "9579:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9567:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3935,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3933,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3906,
                        "src": "9586:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9567:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3936,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3908,
                      "src": "9597:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9567:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3938,
                  "nodeType": "ExpressionStatement",
                  "src": "9567:36:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3940,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3904,
                        "src": "9627:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3941,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3906,
                        "src": "9634:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3942,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3908,
                        "src": "9643:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3939,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4581,
                      "src": "9618:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9618:32:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3944,
                  "nodeType": "EmitStatement",
                  "src": "9613:37:6"
                }
              ]
            },
            "documentation": {
              "id": 3902,
              "nodeType": "StructuredDocumentation",
              "src": "8900:412:6",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 3946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3904,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3946,
                  "src": "9335:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9335:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3906,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3946,
                  "src": "9350:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9350:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3908,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3946,
                  "src": "9367:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9367:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9334:48:6"
            },
            "returnParameters": {
              "id": 3910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9400:0:6"
            },
            "scope": 4016,
            "src": "9317:340:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3956,
              "nodeType": "Block",
              "src": "10030:38:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3952,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3497,
                      "src": "10040:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3953,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3949,
                      "src": "10052:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "10040:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3955,
                  "nodeType": "ExpressionStatement",
                  "src": "10040:21:6"
                }
              ]
            },
            "documentation": {
              "id": 3947,
              "nodeType": "StructuredDocumentation",
              "src": "9663:312:6",
              "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
            },
            "id": 3957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3949,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3957,
                  "src": "10004:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3948,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10004:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10003:17:6"
            },
            "returnParameters": {
              "id": 3951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10030:0:6"
            },
            "scope": 4016,
            "src": "9980:88:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3967,
              "nodeType": "Block",
              "src": "10744:3:6",
              "statements": []
            },
            "documentation": {
              "id": 3958,
              "nodeType": "StructuredDocumentation",
              "src": "10074:576:6",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 3968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3960,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3968,
                  "src": "10685:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10685:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3962,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3968,
                  "src": "10699:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10699:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3964,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3968,
                  "src": "10711:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10711:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10684:42:6"
            },
            "returnParameters": {
              "id": 3966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10744:0:6"
            },
            "scope": 4016,
            "src": "10655:92:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4590
            ],
            "body": {
              "id": 3996,
              "nodeType": "Block",
              "src": "10926:125:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3979,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "10938:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 3981,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3980,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3970,
                              "src": "10950:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10938:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3984,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3982,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10957:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10957:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10938:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3985,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3972,
                          "src": "10972:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10938:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10930:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10930:49:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3988,
                  "nodeType": "ExpressionStatement",
                  "src": "10930:49:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3990,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3970,
                        "src": "11018:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3991,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3972,
                        "src": "11025:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3989,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3901,
                      "src": "11012:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11012:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3993,
                  "nodeType": "ExpressionStatement",
                  "src": "11012:20:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11043:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3977,
                  "id": 3995,
                  "nodeType": "Return",
                  "src": "11036:11:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "79cc6790",
            "id": 3997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10903:8:6"
            },
            "parameters": {
              "id": 3973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3970,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3997,
                  "src": "10857:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10857:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3972,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3997,
                  "src": "10872:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10872:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10856:31:6"
            },
            "returnParameters": {
              "id": 3977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3976,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3997,
                  "src": "10920:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3975,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10920:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10919:6:6"
            },
            "scope": 4016,
            "src": "10839:212:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4599
            ],
            "body": {
              "id": 4014,
              "nodeType": "Block",
              "src": "11141:43:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4008,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3999,
                        "src": "11151:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4009,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4001,
                        "src": "11158:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4007,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3845,
                      "src": "11145:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11145:20:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4011,
                  "nodeType": "ExpressionStatement",
                  "src": "11145:20:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11176:4:6",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4006,
                  "id": 4013,
                  "nodeType": "Return",
                  "src": "11169:11:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1cc74859",
            "id": 4015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4003,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11118:8:6"
            },
            "parameters": {
              "id": 4002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3999,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4015,
                  "src": "11072:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11072:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4001,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4015,
                  "src": "11087:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11087:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11071:31:6"
            },
            "returnParameters": {
              "id": 4006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4005,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4015,
                  "src": "11135:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11135:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11134:6:6"
            },
            "scope": 4016,
            "src": "11054:130:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 4017,
        "src": "1327:9859:6"
      }
    ],
    "src": "33:11154:6"
  },
  "bytecode": "",
  "bytecodeSha1": "79df15815dbd760dc3e8ba19a61572eab5cf7bdd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {},
      "11": {},
      "4": {
        "SafeMath.add": {
          "50": [
            986,
            992,
            true
          ]
        },
        "SafeMath.sub": {
          "49": [
            1859,
            1865,
            true
          ]
        }
      },
      "6": {
        "ERC20._approve": {
          "43": [
            9418,
            9437,
            true
          ],
          "44": [
            9496,
            9517,
            true
          ]
        },
        "ERC20._burn": {
          "48": [
            8567,
            8588,
            true
          ]
        },
        "ERC20._mint": {
          "45": [
            7877,
            7898,
            true
          ]
        },
        "ERC20._transfer": {
          "46": [
            7098,
            7118,
            true
          ],
          "47": [
            7178,
            7201,
            true
          ]
        },
        "ERC20.burnFrom": {
          "42": [
            10938,
            10978,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Context._msgSender": {
          "17": [
            670,
            687
          ]
        }
      },
      "11": {},
      "4": {
        "SafeMath.add": {
          "34": [
            978,
            1024
          ],
          "35": [
            1035,
            1043
          ]
        },
        "SafeMath.sub": {
          "33": [
            1851,
            1880
          ],
          "41": [
            1398,
            1448
          ]
        }
      },
      "6": {
        "ERC20._approve": {
          "18": [
            9410,
            9478
          ],
          "19": [
            9488,
            9556
          ],
          "20": [
            9567,
            9603
          ],
          "21": [
            9613,
            9650
          ]
        },
        "ERC20._burn": {
          "36": [
            8559,
            8626
          ],
          "37": [
            8637,
            8686
          ],
          "38": [
            8697,
            8786
          ],
          "39": [
            8796,
            8835
          ],
          "40": [
            8845,
            8887
          ]
        },
        "ERC20._mint": {
          "22": [
            7869,
            7934
          ],
          "23": [
            7945,
            7994
          ],
          "24": [
            8005,
            8044
          ],
          "25": [
            8054,
            8105
          ],
          "26": [
            8115,
            8157
          ]
        },
        "ERC20._transfer": {
          "27": [
            7090,
            7160
          ],
          "28": [
            7170,
            7241
          ],
          "29": [
            7252,
            7299
          ],
          "30": [
            7310,
            7401
          ],
          "31": [
            7411,
            7466
          ],
          "32": [
            7476,
            7516
          ]
        },
        "ERC20.allowance": {
          "16": [
            4027,
            4061
          ]
        },
        "ERC20.approve": {
          "1": [
            4305,
            4344
          ],
          "2": [
            4354,
            4365
          ]
        },
        "ERC20.balanceOf": {
          "10": [
            3454,
            3479
          ]
        },
        "ERC20.burnFrom": {
          "11": [
            10930,
            10979
          ],
          "12": [
            11012,
            11032
          ]
        },
        "ERC20.decimals": {
          "8": [
            3130,
            3146
          ]
        },
        "ERC20.decreaseAllowance": {
          "14": [
            6362,
            6491
          ]
        },
        "ERC20.increaseAllowance": {
          "9": [
            5655,
            5738
          ]
        },
        "ERC20.mintFrom": {
          "4": [
            11145,
            11165
          ]
        },
        "ERC20.name": {
          "0": [
            2232,
            2244
          ]
        },
        "ERC20.symbol": {
          "13": [
            2428,
            2442
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3285,
            3304
          ]
        },
        "ERC20.transfer": {
          "15": [
            3791,
            3833
          ]
        },
        "ERC20.transferFrom": {
          "5": [
            4961,
            4997
          ],
          "6": [
            5007,
            5128
          ],
          "7": [
            5138,
            5149
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146102a9578063a457c2d7146102b1578063a9059cbb146102dd578063dd62ed3e14610309576100cf565b8063395093511461022b57806370a082311461025757806379cc67901461027d576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd146101915780631cc74859146101ab57806323b872dd146101d7578063313ce5671461020d575b600080fd5b6100dc610337565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b0381351690602001356103cd565b604080519115158252519081900360200190f35b6101996103ea565b60408051918252519081900360200190f35b61017d600480360360408110156101c157600080fd5b506001600160a01b0381351690602001356103f0565b61017d600480360360608110156101ed57600080fd5b506001600160a01b038135811691602081013590911690604001356103fc565b610215610483565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561024157600080fd5b506001600160a01b03813516906020013561048c565b6101996004803603602081101561026d57600080fd5b50356001600160a01b03166104da565b61017d6004803603604081101561029357600080fd5b506001600160a01b0381351690602001356104f5565b6100dc61052f565b61017d600480360360408110156102c757600080fd5b506001600160a01b038135169060200135610590565b61017d600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356105f8565b6101996004803603604081101561031f57600080fd5b506001600160a01b038135811691602001351661060c565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b5050505050905090565b60006103e16103da610637565b848461063b565b50600192915050565b60025490565b60006103e18383610727565b6000610409848484610817565b61047984610415610637565b61047485604051806060016040528060288152602001610c3b602891396001600160a01b038a16600090815260016020526040812090610453610637565b6001600160a01b031681526020810191909152604001600020549190610972565b61063b565b5060019392505050565b60055460ff1690565b60006103e1610499610637565b8461047485600160006104aa610637565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610a09565b6001600160a01b031660009081526020819052604090205490565b6001600160a01b038216600090815260016020908152604080832033845290915281205482111561052557600080fd5b6103e18383610a6a565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103c35780601f10610398576101008083540402835291602001916103c3565b60006103e161059d610637565b8461047485604051806060016040528060258152602001610ccd60259139600160006105c7610637565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610972565b60006103e1610605610637565b8484610817565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166106805760405162461bcd60e51b8152600401808060200182810382526024815260200180610ca96024913960400191505060405180910390fd5b6001600160a01b0382166106c55760405162461bcd60e51b8152600401808060200182810382526022815260200180610bf36022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610782576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61078e60008383610b66565b60025461079b9082610a09565b6002556001600160a01b0382166000908152602081905260409020546107c19082610a09565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03831661085c5760405162461bcd60e51b8152600401808060200182810382526025815260200180610c846025913960400191505060405180910390fd5b6001600160a01b0382166108a15760405162461bcd60e51b8152600401808060200182810382526023815260200180610bae6023913960400191505060405180910390fd5b6108ac838383610b66565b6108e981604051806060016040528060268152602001610c15602691396001600160a01b0386166000908152602081905260409020549190610972565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109189082610a09565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a015760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109c65781810151838201526020016109ae565b50505050905090810190601f1680156109f35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a63576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610aaf5760405162461bcd60e51b8152600401808060200182810382526021815260200180610c636021913960400191505060405180910390fd5b610abb82600083610b66565b610af881604051806060016040528060228152602001610bd1602291396001600160a01b0385166000908152602081905260409020549190610972565b6001600160a01b038316600090815260208190526040902055600254610b1e9082610b6b565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b6000610a6383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061097256fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220ab3cac1f2a80172570e0b8f82ef2c00d34c0447f332ef00f0cf3689e62cce57f64736f6c634300060c0033",
  "deployedSourceMap": "1327:9859:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4206:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4206:166:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3213:98;;;:::i;:::-;;;;;;;;;;;;;;;;11054:130;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11054:130:6;;;;;;;;:::i;4839:317::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4839:317:6;;;;;;;;;;;;;;;;;:::i;3072:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5551:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5551:215:6;;;;;;;;:::i;3369:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3369:117:6;-1:-1:-1;;;;;3369:117:6;;:::i;10839:212::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10839:212:6;;;;;;;;:::i;2364:85::-;;;:::i;6253:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6253:266:6;;;;;;;;:::i;3689:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3689:172:6;;;;;;;;:::i;3919:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3919:149:6;;;;;;;;;;:::i;2170:81::-;2239:5;2232:12;;;;;;;;-1:-1:-1;;2232:12:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:13;;2232:12;;2239:5;;2232:12;;2239:5;2232:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:81;:::o;4206:166::-;4289:4;4305:39;4314:12;:10;:12::i;:::-;4328:7;4337:6;4305:8;:39::i;:::-;-1:-1:-1;4361:4:6;4206:166;;;;:::o;3213:98::-;3292:12;;3213:98;:::o;11054:130::-;11135:4;11145:20;11151:5;11158:6;11145:5;:20::i;4839:317::-;4945:4;4961:36;4971:6;4979:9;4990:6;4961:9;:36::i;:::-;5007:121;5016:6;5024:12;:10;:12::i;:::-;5038:89;5076:6;5038:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5038:19:6;;;;;;:11;:19;;;;;;5058:12;:10;:12::i;:::-;-1:-1:-1;;;;;5038:33:6;;;;;;;;;;;;-1:-1:-1;5038:33:6;;;:89;:37;:89::i;:::-;5007:8;:121::i;:::-;-1:-1:-1;5145:4:6;4839:317;;;;;:::o;3072:81::-;3137:9;;;;3072:81;:::o;5551:215::-;5639:4;5655:83;5664:12;:10;:12::i;:::-;5678:7;5687:50;5726:10;5687:11;:25;5699:12;:10;:12::i;:::-;-1:-1:-1;;;;;5687:25:6;;;;;;;;;;;;;;;;;-1:-1:-1;5687:25:6;;;:34;;;;;;;;;;;:38;:50::i;3369:117::-;-1:-1:-1;;;;;3461:18:6;3435:7;3461:18;;;;;;;;;;;;3369:117::o;10839:212::-;-1:-1:-1;;;;;10938:18:6;;10920:4;10938:18;;;:11;:18;;;;;;;;10957:10;10938:30;;;;;;;;:40;-1:-1:-1;10938:40:6;10930:49;;;;;;11012:20;11018:5;11025:6;11012:5;:20::i;2364:85::-;2435:7;2428:14;;;;;;;;-1:-1:-1;;2428:14:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2403:13;;2428:14;;2435:7;;2428:14;;2435:7;2428:14;;;;;;;;;;;;;;;;;;;;;;;;6253:266;6346:4;6362:129;6371:12;:10;:12::i;:::-;6385:7;6394:96;6433:15;6394:96;;;;;;;;;;;;;;;;;:11;:25;6406:12;:10;:12::i;:::-;-1:-1:-1;;;;;6394:25:6;;;;;;;;;;;;;;;;;-1:-1:-1;6394:25:6;;;:34;;;;;;;;;;;:96;:38;:96::i;3689:172::-;3775:4;3791:42;3801:12;:10;:12::i;:::-;3815:9;3826:6;3791:9;:42::i;3919:149::-;-1:-1:-1;;;;;4034:18:6;;;4008:7;4034:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3919:149::o;590:104:0:-;677:10;590:104;:::o;9317:340:6:-;-1:-1:-1;;;;;9418:19:6;;9410:68;;;;-1:-1:-1;;;9410:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9496:21:6;;9488:68;;;;-1:-1:-1;;;9488:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9567:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9618:32;;;;;;;;;;;;;;;;;9317:340;;;:::o;7794:370::-;-1:-1:-1;;;;;7877:21:6;;7869:65;;;;;-1:-1:-1;;;7869:65:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;7945:49;7974:1;7978:7;7987:6;7945:20;:49::i;:::-;8020:12;;:24;;8037:6;8020:16;:24::i;:::-;8005:12;:39;-1:-1:-1;;;;;8075:18:6;;:9;:18;;;;;;;;;;;:30;;8098:6;8075:22;:30::i;:::-;-1:-1:-1;;;;;8054:18:6;;:9;:18;;;;;;;;;;;:51;;;;8120:37;;;;;;;8054:18;;:9;;8120:37;;;;;;;;;;7794:370;;:::o;6993:530::-;-1:-1:-1;;;;;7098:20:6;;7090:70;;;;-1:-1:-1;;;7090:70:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7178:23:6;;7170:71;;;;-1:-1:-1;;;7170:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7252:47;7273:6;7281:9;7292:6;7252:20;:47::i;:::-;7330:71;7352:6;7330:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7330:17:6;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7310:17:6;;;:9;:17;;;;;;;;;;;:91;;;;7434:20;;;;;;;:32;;7459:6;7434:24;:32::i;:::-;-1:-1:-1;;;;;7411:20:6;;;:9;:20;;;;;;;;;;;;:55;;;;7481:35;;;;;;;7411:20;;7481:35;;;;;;;;;;;;;6993:530;;;:::o;1746:187:4:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:4;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:4:o;8484:410:6:-;-1:-1:-1;;;;;8567:21:6;;8559:67;;;;-1:-1:-1;;;8559:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8637:49;8658:7;8675:1;8679:6;8637:20;:49::i;:::-;8718:68;8741:6;8718:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8718:18:6;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8697:18:6;;:9;:18;;;;;;;;;;:89;8811:12;;:24;;8828:6;8811:16;:24::i;:::-;8796:12;:39;8850:37;;;;;;;;8876:1;;-1:-1:-1;;;;;8850:37:6;;;;;;;;;;;;8484:410;;:::o;10655:92::-;;;;:::o;1321:134:4:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1327,
    11186
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x309 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x27D JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x1CC74859 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x215 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x48C JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x52F JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x590 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x60C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x398 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E1 PUSH2 0x3DA PUSH2 0x637 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E1 DUP4 DUP4 PUSH2 0x727 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x409 DUP5 DUP5 DUP5 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x479 DUP5 PUSH2 0x415 PUSH2 0x637 JUMP JUMPDEST PUSH2 0x474 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x453 PUSH2 0x637 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E1 PUSH2 0x499 PUSH2 0x637 JUMP JUMPDEST DUP5 PUSH2 0x474 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4AA PUSH2 0x637 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E1 DUP4 DUP4 PUSH2 0xA6A JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x398 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E1 PUSH2 0x59D PUSH2 0x637 JUMP JUMPDEST DUP5 PUSH2 0x474 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCCD PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5C7 PUSH2 0x637 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E1 PUSH2 0x605 PUSH2 0x637 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x680 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCA9 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBF3 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x782 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x78E PUSH1 0x0 DUP4 DUP4 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x79B SWAP1 DUP3 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C1 SWAP1 DUP3 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC84 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBAE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AC DUP4 DUP4 DUP4 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0x8E9 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC15 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x918 SWAP1 DUP3 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9C6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9AE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9F3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC63 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABB DUP3 PUSH1 0x0 DUP4 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0xB1E SWAP1 DUP3 PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA63 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x972 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x2066726F6D20746865207A65726F20 PUSH2 0x6464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220AB3C 0xAC 0x1F 0x2A DUP1 OR 0x25 PUSH17 0xE0B8F82EF2C00D34C0447F332EF00F0CF3 PUSH9 0x9E62CCE57F64736F6C PUSH4 0x4300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "GT",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A9"
    },
    "64": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA457C2D7"
    },
    "71": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B1"
    },
    "75": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DD"
    },
    "86": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x309"
    },
    "97": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF"
    },
    "101": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMP",
      "path": "6"
    },
    "102": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "103": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "104": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x39509351"
    },
    "109": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "110": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22B"
    },
    "113": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x257"
    },
    "124": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x79CC6790"
    },
    "131": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x27D"
    },
    "135": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCF"
    },
    "139": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMP",
      "path": "6"
    },
    "140": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "141": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "142": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x6FDDE03"
    },
    "147": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "152": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "153": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x95EA7B3"
    },
    "158": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x151"
    },
    "162": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "163": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "164": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x191"
    },
    "173": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "174": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "175": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x1CC74859"
    },
    "180": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1AB"
    },
    "184": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "185": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "186": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "192": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D7"
    },
    "195": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "196": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "197": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "EQ",
      "path": "6"
    },
    "203": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x20D"
    },
    "206": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "207": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "208": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "DUP1",
      "path": "6"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1327,
        11186
      ],
      "op": "REVERT",
      "path": "6"
    },
    "212": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDC"
    },
    "216": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x337"
    },
    "219": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "220": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "221": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "223": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "224": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "225": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "227": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "228": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP3",
      "path": "6"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "230": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "231": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "232": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP2",
      "path": "6"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "235": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "238": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "242": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "243": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "244": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "245": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "246": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP6",
      "path": "6"
    },
    "247": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "248": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "249": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "250": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "251": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "252": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "254": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "255": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "256": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP2",
      "path": "6"
    },
    "257": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "LT",
      "path": "6"
    },
    "258": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "259": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x116"
    },
    "262": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "263": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP2",
      "path": "6"
    },
    "264": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP2",
      "path": "6"
    },
    "265": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "266": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "267": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "268": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP3",
      "path": "6"
    },
    "269": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "270": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "271": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "273": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "274": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFE"
    },
    "277": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "278": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "279": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "280": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "281": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "282": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "283": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "284": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "285": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "286": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP2",
      "path": "6"
    },
    "287": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "288": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "289": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "291": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "AND",
      "path": "6"
    },
    "292": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "293": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "294": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x143"
    },
    "297": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "298": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "299": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP3",
      "path": "6"
    },
    "300": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SUB",
      "path": "6"
    },
    "301": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "302": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "303": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "305": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP4",
      "path": "6"
    },
    "306": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "308": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SUB",
      "path": "6"
    },
    "309": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "312": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "EXP",
      "path": "6"
    },
    "313": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SUB",
      "path": "6"
    },
    "314": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "NOT",
      "path": "6"
    },
    "315": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "AND",
      "path": "6"
    },
    "316": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP2",
      "path": "6"
    },
    "317": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "318": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "320": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "ADD",
      "path": "6"
    },
    "321": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "322": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "323": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "324": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "325": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "326": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "POP",
      "path": "6"
    },
    "329": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "332": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "DUP1",
      "path": "6"
    },
    "333": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "334": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SUB",
      "path": "6"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "RETURN",
      "path": "6"
    },
    "337": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "338": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "341": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "343": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "DUP1",
      "path": "6"
    },
    "344": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "345": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SUB",
      "path": "6"
    },
    "346": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "348": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "DUP2",
      "path": "6"
    },
    "349": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "LT",
      "path": "6"
    },
    "350": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "351": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x167"
    },
    "354": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "355": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "DUP1",
      "path": "6"
    },
    "358": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "REVERT",
      "path": "6"
    },
    "359": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "367": {
      "op": "SHL"
    },
    "368": {
      "op": "SUB"
    },
    "369": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "DUP2",
      "path": "6"
    },
    "370": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "371": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "AND",
      "path": "6"
    },
    "372": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "373": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "375": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "ADD",
      "path": "6"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "377": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3CD"
    },
    "380": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4206,
        4372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "381": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "382": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "384": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "DUP1",
      "path": "6"
    },
    "385": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "386": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "387": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "389": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "DUP3",
      "path": "6"
    },
    "390": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "391": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "392": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "393": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "DUP2",
      "path": "6"
    },
    "394": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "395": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SUB",
      "path": "6"
    },
    "396": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "398": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "ADD",
      "path": "6"
    },
    "399": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "400": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "RETURN",
      "path": "6"
    },
    "401": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "402": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x199"
    },
    "405": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3EA"
    },
    "408": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3213,
        3311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "409": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "410": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "412": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "DUP1",
      "path": "6"
    },
    "413": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "414": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "415": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "DUP3",
      "path": "6"
    },
    "416": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "417": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "418": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "419": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "DUP2",
      "path": "6"
    },
    "420": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "421": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "SUB",
      "path": "6"
    },
    "422": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "424": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "ADD",
      "path": "6"
    },
    "425": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "426": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "RETURN",
      "path": "6"
    },
    "427": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "428": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "431": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "433": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "DUP1",
      "path": "6"
    },
    "434": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "435": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "SUB",
      "path": "6"
    },
    "436": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "438": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "DUP2",
      "path": "6"
    },
    "439": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "LT",
      "path": "6"
    },
    "440": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "441": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C1"
    },
    "444": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "445": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "447": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "DUP1",
      "path": "6"
    },
    "448": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "REVERT",
      "path": "6"
    },
    "449": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "457": {
      "op": "SHL"
    },
    "458": {
      "op": "SUB"
    },
    "459": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "DUP2",
      "path": "6"
    },
    "460": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "461": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "AND",
      "path": "6"
    },
    "462": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "463": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "465": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "ADD",
      "path": "6"
    },
    "466": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "467": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F0"
    },
    "470": {
      "fn": "ERC20.mintFrom",
      "jump": "i",
      "offset": [
        11054,
        11184
      ],
      "op": "JUMP",
      "path": "6"
    },
    "471": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "472": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "475": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "477": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "DUP1",
      "path": "6"
    },
    "478": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "479": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "SUB",
      "path": "6"
    },
    "480": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "482": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "483": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "LT",
      "path": "6"
    },
    "484": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "485": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ED"
    },
    "488": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "489": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "491": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "DUP1",
      "path": "6"
    },
    "492": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "REVERT",
      "path": "6"
    },
    "493": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "501": {
      "op": "SHL"
    },
    "502": {
      "op": "SUB"
    },
    "503": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "504": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "505": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "506": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "AND",
      "path": "6"
    },
    "507": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "508": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "510": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "DUP2",
      "path": "6"
    },
    "511": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "ADD",
      "path": "6"
    },
    "512": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "513": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "514": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "515": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "AND",
      "path": "6"
    },
    "516": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "517": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "519": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "ADD",
      "path": "6"
    },
    "520": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "521": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3FC"
    },
    "524": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4839,
        5156
      ],
      "op": "JUMP",
      "path": "6"
    },
    "525": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "526": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x215"
    },
    "529": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x483"
    },
    "532": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3072,
        3153
      ],
      "op": "JUMP",
      "path": "6"
    },
    "533": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "534": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "536": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "DUP1",
      "path": "6"
    },
    "537": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "538": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "540": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "541": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "542": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "AND",
      "path": "6"
    },
    "543": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "DUP3",
      "path": "6"
    },
    "544": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "545": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "546": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "547": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "DUP2",
      "path": "6"
    },
    "548": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "549": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "SUB",
      "path": "6"
    },
    "550": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "552": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "ADD",
      "path": "6"
    },
    "553": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "554": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "RETURN",
      "path": "6"
    },
    "555": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "556": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "559": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "561": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "562": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "563": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "SUB",
      "path": "6"
    },
    "564": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "566": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "567": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "LT",
      "path": "6"
    },
    "568": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "569": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x241"
    },
    "572": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "573": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "575": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "DUP1",
      "path": "6"
    },
    "576": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "REVERT",
      "path": "6"
    },
    "577": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "578": {
      "op": "POP"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "op": "SUB"
    },
    "587": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "DUP2",
      "path": "6"
    },
    "588": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "589": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "AND",
      "path": "6"
    },
    "590": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "591": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "593": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "ADD",
      "path": "6"
    },
    "594": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "595": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x48C"
    },
    "598": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5551,
        5766
      ],
      "op": "JUMP",
      "path": "6"
    },
    "599": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "600": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x199"
    },
    "603": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "605": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "606": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "607": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "SUB",
      "path": "6"
    },
    "608": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "610": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "DUP2",
      "path": "6"
    },
    "611": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "LT",
      "path": "6"
    },
    "612": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "613": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x26D"
    },
    "616": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "617": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "619": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "DUP1",
      "path": "6"
    },
    "620": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "REVERT",
      "path": "6"
    },
    "621": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "622": {
      "op": "POP"
    },
    "623": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "op": "SUB"
    },
    "632": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "AND",
      "path": "6"
    },
    "633": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4DA"
    },
    "636": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3369,
        3486
      ],
      "op": "JUMP",
      "path": "6"
    },
    "637": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "638": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "641": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "643": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "644": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "645": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "SUB",
      "path": "6"
    },
    "646": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "648": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "649": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "LT",
      "path": "6"
    },
    "650": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "651": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x293"
    },
    "654": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "655": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "657": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "DUP1",
      "path": "6"
    },
    "658": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "REVERT",
      "path": "6"
    },
    "659": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "660": {
      "op": "POP"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "667": {
      "op": "SHL"
    },
    "668": {
      "op": "SUB"
    },
    "669": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "DUP2",
      "path": "6"
    },
    "670": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "671": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "AND",
      "path": "6"
    },
    "672": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "673": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "675": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "ADD",
      "path": "6"
    },
    "676": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "677": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4F5"
    },
    "680": {
      "fn": "ERC20.burnFrom",
      "jump": "i",
      "offset": [
        10839,
        11051
      ],
      "op": "JUMP",
      "path": "6"
    },
    "681": {
      "fn": "ERC20.symbol",
      "offset": [
        2364,
        2449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "682": {
      "fn": "ERC20.symbol",
      "offset": [
        2364,
        2449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDC"
    },
    "685": {
      "fn": "ERC20.symbol",
      "offset": [
        2364,
        2449
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x52F"
    },
    "688": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2364,
        2449
      ],
      "op": "JUMP",
      "path": "6"
    },
    "689": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "690": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "693": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "695": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "DUP1",
      "path": "6"
    },
    "696": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "697": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "SUB",
      "path": "6"
    },
    "698": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "700": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "DUP2",
      "path": "6"
    },
    "701": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "LT",
      "path": "6"
    },
    "702": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "703": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C7"
    },
    "706": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "707": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "709": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "DUP1",
      "path": "6"
    },
    "710": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "REVERT",
      "path": "6"
    },
    "711": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "712": {
      "op": "POP"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "719": {
      "op": "SHL"
    },
    "720": {
      "op": "SUB"
    },
    "721": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "DUP2",
      "path": "6"
    },
    "722": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "723": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "AND",
      "path": "6"
    },
    "724": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "725": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "727": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "ADD",
      "path": "6"
    },
    "728": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "729": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x590"
    },
    "732": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6253,
        6519
      ],
      "op": "JUMP",
      "path": "6"
    },
    "733": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "734": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17D"
    },
    "737": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "739": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "DUP1",
      "path": "6"
    },
    "740": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "741": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "SUB",
      "path": "6"
    },
    "742": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "744": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "DUP2",
      "path": "6"
    },
    "745": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "LT",
      "path": "6"
    },
    "746": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "747": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F3"
    },
    "750": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "751": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "753": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "DUP1",
      "path": "6"
    },
    "754": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "REVERT",
      "path": "6"
    },
    "755": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "op": "SUB"
    },
    "765": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "DUP2",
      "path": "6"
    },
    "766": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "767": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "AND",
      "path": "6"
    },
    "768": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "769": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "771": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "ADD",
      "path": "6"
    },
    "772": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "773": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5F8"
    },
    "776": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3689,
        3861
      ],
      "op": "JUMP",
      "path": "6"
    },
    "777": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "778": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x199"
    },
    "781": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "783": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "DUP1",
      "path": "6"
    },
    "784": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "785": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "SUB",
      "path": "6"
    },
    "786": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "788": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "789": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "LT",
      "path": "6"
    },
    "790": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "791": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31F"
    },
    "794": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "795": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "797": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "DUP1",
      "path": "6"
    },
    "798": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "REVERT",
      "path": "6"
    },
    "799": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "800": {
      "op": "POP"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "807": {
      "op": "SHL"
    },
    "808": {
      "op": "SUB"
    },
    "809": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "810": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "811": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "DUP2",
      "path": "6"
    },
    "812": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "AND",
      "path": "6"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "814": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "816": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "ADD",
      "path": "6"
    },
    "817": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "818": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "AND",
      "path": "6"
    },
    "819": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x60C"
    },
    "822": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3919,
        4068
      ],
      "op": "JUMP",
      "path": "6"
    },
    "823": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "824": {
      "fn": "ERC20.name",
      "offset": [
        2239,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x3"
    },
    "826": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "827": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "828": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "830": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "831": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "832": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "834": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "836": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "840": {
      "op": "NOT"
    },
    "841": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "844": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "846": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP9",
      "path": "6"
    },
    "847": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "AND",
      "path": "6"
    },
    "848": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "849": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MUL",
      "path": "6"
    },
    "850": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "851": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "852": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "853": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "AND",
      "path": "6"
    },
    "854": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "855": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "856": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DIV",
      "path": "6"
    },
    "858": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "859": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP5",
      "path": "6"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "862": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DIV",
      "path": "6"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MUL",
      "path": "6"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP3",
      "path": "6"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "869": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "872": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "873": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP3",
      "path": "6"
    },
    "874": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "875": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        2207,
        2220
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "878": {
      "fn": "ERC20.name",
      "offset": [
        2207,
        2220
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "879": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "881": {
      "fn": "ERC20.name",
      "offset": [
        2239,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "882": {
      "fn": "ERC20.name",
      "offset": [
        2239,
        2244
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP4",
      "path": "6"
    },
    "884": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "885": {
      "fn": "ERC20.name",
      "offset": [
        2239,
        2244
      ],
      "op": "DUP3",
      "path": "6"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP3",
      "path": "6"
    },
    "887": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "889": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C3"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "893": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "896": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "LT",
      "path": "6"
    },
    "897": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x398"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "901": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP4",
      "path": "6"
    },
    "906": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "907": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DIV",
      "path": "6"
    },
    "908": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MUL",
      "path": "6"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP4",
      "path": "6"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "916": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C3"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "JUMP",
      "path": "6"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP3",
      "path": "6"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "924": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "928": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "932": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP2",
      "path": "6"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "940": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP1",
      "path": "6"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP4",
      "path": "6"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "GT",
      "path": "6"
    },
    "950": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3A6"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP3",
      "path": "6"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SUB",
      "path": "6"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "959": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "AND",
      "path": "6"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "DUP3",
      "path": "6"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "ADD",
      "path": "6"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "POP",
      "path": "6"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "POP",
      "path": "6"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "POP",
      "path": "6"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "POP",
      "path": "6"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "POP",
      "path": "6"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [
        2232,
        2244
      ],
      "op": "POP",
      "path": "6"
    },
    "971": {
      "fn": "ERC20.name",
      "offset": [
        2170,
        2251
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "972": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2170,
        2251
      ],
      "op": "JUMP",
      "path": "6"
    },
    "973": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "974": {
      "fn": "ERC20.approve",
      "offset": [
        4289,
        4293
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "976": {
      "fn": "ERC20.approve",
      "offset": [
        4305,
        4344
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 1,
      "value": "0x3E1"
    },
    "979": {
      "fn": "ERC20.approve",
      "offset": [
        4314,
        4326
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3DA"
    },
    "982": {
      "fn": "ERC20.approve",
      "offset": [
        4314,
        4324
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "985": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4314,
        4326
      ],
      "op": "JUMP",
      "path": "6"
    },
    "986": {
      "fn": "ERC20.approve",
      "offset": [
        4314,
        4326
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "987": {
      "fn": "ERC20.approve",
      "offset": [
        4328,
        4335
      ],
      "op": "DUP5",
      "path": "6"
    },
    "988": {
      "fn": "ERC20.approve",
      "offset": [
        4337,
        4343
      ],
      "op": "DUP5",
      "path": "6"
    },
    "989": {
      "fn": "ERC20.approve",
      "offset": [
        4305,
        4313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63B"
    },
    "992": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4305,
        4344
      ],
      "op": "JUMP",
      "path": "6"
    },
    "993": {
      "fn": "ERC20.approve",
      "offset": [
        4305,
        4344
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "994": {
      "op": "POP"
    },
    "995": {
      "fn": "ERC20.approve",
      "offset": [
        4361,
        4365
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 2,
      "value": "0x1"
    },
    "997": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "998": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "999": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "POP",
      "path": "6"
    },
    "1000": {
      "fn": "ERC20.approve",
      "offset": [
        4206,
        4372
      ],
      "op": "POP",
      "path": "6"
    },
    "1001": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4206,
        4372
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1002": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1003": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3292,
        3304
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x2"
    },
    "1005": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3292,
        3304
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1006": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3213,
        3311
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1007": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3213,
        3311
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1008": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11054,
        11184
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1009": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11135,
        11139
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1011": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11145,
        11165
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 4,
      "value": "0x3E1"
    },
    "1014": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11151,
        11156
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1015": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11158,
        11164
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1016": {
      "fn": "ERC20.mintFrom",
      "offset": [
        11145,
        11150
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x727"
    },
    "1019": {
      "fn": "ERC20.mintFrom",
      "jump": "i",
      "offset": [
        11145,
        11165
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1020": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1021": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4945,
        4949
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1023": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4961,
        4997
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 5,
      "value": "0x409"
    },
    "1026": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4971,
        4977
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1027": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4979,
        4988
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1028": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4990,
        4996
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1029": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4961,
        4970
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x817"
    },
    "1032": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4961,
        4997
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1033": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4961,
        4997
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1034": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5007,
        5128
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 6,
      "value": "0x479"
    },
    "1037": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5016,
        5022
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1038": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5024,
        5036
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x415"
    },
    "1041": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5024,
        5034
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "1044": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5024,
        5036
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1045": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5024,
        5036
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1046": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x474"
    },
    "1049": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5082
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1050": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1052": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1053": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1054": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1056": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "ADD",
      "path": "6"
    },
    "1057": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1059": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1060": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1061": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x28"
    },
    "1063": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1064": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1065": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1067": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "ADD",
      "path": "6"
    },
    "1068": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC3B"
    },
    "1071": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x28"
    },
    "1073": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1074": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "DUP11",
      "path": "6"
    },
    "1084": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "AND",
      "path": "6"
    },
    "1085": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1087": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1088": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1090": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1092": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1094": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1095": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1097": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1098": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1099": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5057
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1100": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5058,
        5070
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x453"
    },
    "1103": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5058,
        5068
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "1106": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5058,
        5070
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1107": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5058,
        5070
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1114": {
      "op": "SHL"
    },
    "1115": {
      "op": "SUB"
    },
    "1116": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "AND",
      "path": "6"
    },
    "1117": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1121": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "ADD",
      "path": "6"
    },
    "1123": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1124": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "ADD",
      "path": "6"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1132": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5071
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1135": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1136": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5075
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x972"
    },
    "1139": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5038,
        5127
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5038,
        5127
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1141": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5007,
        5015
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x63B"
    },
    "1144": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5007,
        5128
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1145": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5007,
        5128
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1146": {
      "op": "POP"
    },
    "1147": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5145,
        5149
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 7,
      "value": "0x1"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1150": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "POP",
      "path": "6"
    },
    "1152": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "POP",
      "path": "6"
    },
    "1153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4839,
        5156
      ],
      "op": "POP",
      "path": "6"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4839,
        5156
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1155": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1156": {
      "fn": "ERC20.decimals",
      "offset": [
        3137,
        3146
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 8,
      "value": "0x5"
    },
    "1158": {
      "fn": "ERC20.decimals",
      "offset": [
        3137,
        3146
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1159": {
      "fn": "ERC20.decimals",
      "offset": [
        3137,
        3146
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1161": {
      "fn": "ERC20.decimals",
      "offset": [
        3137,
        3146
      ],
      "op": "AND",
      "path": "6"
    },
    "1162": {
      "fn": "ERC20.decimals",
      "offset": [
        3072,
        3153
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1163": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3072,
        3153
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1164": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5551,
        5766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1165": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5639,
        5643
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5655,
        5738
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 9,
      "value": "0x3E1"
    },
    "1170": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5664,
        5676
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x499"
    },
    "1173": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5664,
        5674
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "1176": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5664,
        5676
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1177": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5664,
        5676
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1178": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5678,
        5685
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1179": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5737
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x474"
    },
    "1182": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5726,
        5736
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1183": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5698
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1185": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1187": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5699,
        5711
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x4AA"
    },
    "1190": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5699,
        5709
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "1193": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5699,
        5711
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1194": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5699,
        5711
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1201": {
      "op": "SHL"
    },
    "1202": {
      "op": "SUB"
    },
    "1203": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1204": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1205": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "AND",
      "path": "6"
    },
    "1206": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1207": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1208": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1210": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1211": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1212": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "ADD",
      "path": "6"
    },
    "1213": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1214": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1215": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1216": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1217": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1219": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1220": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1221": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "ADD",
      "path": "6"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1224": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1225": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1226": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5712
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1227": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1228": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "DUP13",
      "path": "6"
    },
    "1229": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "AND",
      "path": "6"
    },
    "1230": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1231": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1232": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1233": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1234": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1235": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1236": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1237": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5721
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1238": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5725
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA09"
    },
    "1241": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5687,
        5737
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1242": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3369,
        3486
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1249": {
      "op": "SHL"
    },
    "1250": {
      "op": "SUB"
    },
    "1251": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "AND",
      "path": "6",
      "statement": 10
    },
    "1252": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3435,
        3442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1254": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1255": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1256": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1257": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1259": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1260": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1261": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1262": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1264": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1265": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1266": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1267": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3461,
        3479
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1268": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3369,
        3486
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1269": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10839,
        11051
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "SUB"
    },
    "1278": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 11
    },
    "1279": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "AND",
      "path": "6"
    },
    "1280": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10920,
        10924
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1282": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1283": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1284": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1285": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10949
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1287": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1289": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1290": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1291": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1292": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1294": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1295": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1296": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10956
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1297": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10957,
        10967
      ],
      "op": "CALLER",
      "path": "6"
    },
    "1298": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1299": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1300": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1301": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1302": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1303": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1304": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1305": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10968
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1306": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10978
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1307": {
      "op": "GT"
    },
    "1308": {
      "branch": 42,
      "fn": "ERC20.burnFrom",
      "offset": [
        10938,
        10978
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1309": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10930,
        10979
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x525"
    },
    "1312": {
      "branch": 42,
      "fn": "ERC20.burnFrom",
      "offset": [
        10930,
        10979
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1313": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10930,
        10979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1315": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10930,
        10979
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1316": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10930,
        10979
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1317": {
      "fn": "ERC20.burnFrom",
      "offset": [
        10930,
        10979
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1318": {
      "fn": "ERC20.burnFrom",
      "offset": [
        11012,
        11032
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 12,
      "value": "0x3E1"
    },
    "1321": {
      "fn": "ERC20.burnFrom",
      "offset": [
        11018,
        11023
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1322": {
      "fn": "ERC20.burnFrom",
      "offset": [
        11025,
        11031
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1323": {
      "fn": "ERC20.burnFrom",
      "offset": [
        11012,
        11017
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA6A"
    },
    "1326": {
      "fn": "ERC20.burnFrom",
      "jump": "i",
      "offset": [
        11012,
        11032
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1327": {
      "fn": "ERC20.symbol",
      "offset": [
        2364,
        2449
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1328": {
      "fn": "ERC20.symbol",
      "offset": [
        2435,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 13,
      "value": "0x4"
    },
    "1330": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1331": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1332": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1334": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1335": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1336": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1338": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1340": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1344": {
      "op": "NOT"
    },
    "1345": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1348": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1350": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP9",
      "path": "6"
    },
    "1351": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "AND",
      "path": "6"
    },
    "1352": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1353": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "MUL",
      "path": "6"
    },
    "1354": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ADD",
      "path": "6"
    },
    "1355": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1356": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP6",
      "path": "6"
    },
    "1357": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "AND",
      "path": "6"
    },
    "1358": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1359": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1360": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1361": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DIV",
      "path": "6"
    },
    "1362": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1363": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1364": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ADD",
      "path": "6"
    },
    "1365": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1366": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1367": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DIV",
      "path": "6"
    },
    "1368": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1369": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "MUL",
      "path": "6"
    },
    "1370": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1371": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ADD",
      "path": "6"
    },
    "1372": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1373": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ADD",
      "path": "6"
    },
    "1374": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1375": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1376": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1377": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1378": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1379": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1380": {
      "fn": "ERC20.symbol",
      "offset": [
        2403,
        2416
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1382": {
      "fn": "ERC20.symbol",
      "offset": [
        2403,
        2416
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1383": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1384": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1385": {
      "fn": "ERC20.symbol",
      "offset": [
        2435,
        2442
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1386": {
      "fn": "ERC20.symbol",
      "offset": [
        2435,
        2442
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1387": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1388": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ADD",
      "path": "6"
    },
    "1389": {
      "fn": "ERC20.symbol",
      "offset": [
        2435,
        2442
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1390": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1391": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1392": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1393": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C3"
    },
    "1396": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1397": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1398": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1400": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "LT",
      "path": "6"
    },
    "1401": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x398"
    },
    "1404": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1405": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "1408": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1409": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1410": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1411": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DIV",
      "path": "6"
    },
    "1412": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "MUL",
      "path": "6"
    },
    "1413": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1414": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1415": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1416": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1418": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "ADD",
      "path": "6"
    },
    "1419": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1420": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3C3"
    },
    "1423": {
      "fn": "ERC20.symbol",
      "offset": [
        2428,
        2442
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1424": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6253,
        6519
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1425": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6346,
        6350
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1427": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6362,
        6491
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 14,
      "value": "0x3E1"
    },
    "1430": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6371,
        6383
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x59D"
    },
    "1433": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6371,
        6381
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "1436": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6371,
        6383
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1437": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6371,
        6383
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1438": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6385,
        6392
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1439": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x474"
    },
    "1442": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6433,
        6448
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1443": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1445": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1446": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1447": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "1449": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "ADD",
      "path": "6"
    },
    "1450": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1452": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1453": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1454": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x25"
    },
    "1456": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1457": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1458": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1460": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "ADD",
      "path": "6"
    },
    "1461": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCCD"
    },
    "1464": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x25"
    },
    "1466": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1467": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1468": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1470": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1472": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6406,
        6418
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5C7"
    },
    "1475": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6406,
        6416
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "1478": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6406,
        6418
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1479": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6406,
        6418
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1486": {
      "op": "SHL"
    },
    "1487": {
      "op": "SUB"
    },
    "1488": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1489": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1490": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "AND",
      "path": "6"
    },
    "1491": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1495": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1496": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "ADD",
      "path": "6"
    },
    "1498": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1500": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1501": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1502": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1504": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1505": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "ADD",
      "path": "6"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1509": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1510": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1511": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6419
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1512": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1513": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "DUP14",
      "path": "6"
    },
    "1514": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "AND",
      "path": "6"
    },
    "1515": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1516": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1517": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1518": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1519": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1520": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1521": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1522": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6428
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1523": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6490
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1524": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x972"
    },
    "1527": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6394,
        6490
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1528": {
      "fn": "ERC20.transfer",
      "offset": [
        3689,
        3861
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1529": {
      "fn": "ERC20.transfer",
      "offset": [
        3775,
        3779
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1531": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3833
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 15,
      "value": "0x3E1"
    },
    "1534": {
      "fn": "ERC20.transfer",
      "offset": [
        3801,
        3813
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x605"
    },
    "1537": {
      "fn": "ERC20.transfer",
      "offset": [
        3801,
        3811
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x637"
    },
    "1540": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3801,
        3813
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1541": {
      "fn": "ERC20.transfer",
      "offset": [
        3801,
        3813
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1542": {
      "fn": "ERC20.transfer",
      "offset": [
        3815,
        3824
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1543": {
      "fn": "ERC20.transfer",
      "offset": [
        3826,
        3832
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1544": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3800
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x817"
    },
    "1547": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3791,
        3833
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1548": {
      "fn": "ERC20.allowance",
      "offset": [
        3919,
        4068
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 16
    },
    "1558": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1559": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "AND",
      "path": "6"
    },
    "1560": {
      "fn": "ERC20.allowance",
      "offset": [
        4008,
        4015
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1562": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1563": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1564": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1565": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4045
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1567": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1569": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1570": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1571": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1572": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1574": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1575": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1576": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4052
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1577": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1578": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1579": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1580": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "AND",
      "path": "6"
    },
    "1581": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1582": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1583": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1584": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1585": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1586": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1587": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1588": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1589": {
      "fn": "ERC20.allowance",
      "offset": [
        4034,
        4061
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1590": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3919,
        4068
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1591": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1592": {
      "fn": "Context._msgSender",
      "offset": [
        677,
        687
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 17
    },
    "1593": {
      "fn": "Context._msgSender",
      "offset": [
        590,
        694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1594": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        590,
        694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1595": {
      "fn": "ERC20._approve",
      "offset": [
        9317,
        9657
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1602": {
      "op": "SHL"
    },
    "1603": {
      "op": "SUB"
    },
    "1604": {
      "fn": "ERC20._approve",
      "offset": [
        9418,
        9437
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 18
    },
    "1605": {
      "branch": 43,
      "fn": "ERC20._approve",
      "offset": [
        9418,
        9437
      ],
      "op": "AND",
      "path": "6"
    },
    "1606": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x680"
    },
    "1609": {
      "branch": 43,
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1610": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1612": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1621": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1622": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1624": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "ADD",
      "path": "6"
    },
    "1625": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1626": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1627": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1629": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "ADD",
      "path": "6"
    },
    "1630": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1631": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1632": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "SUB",
      "path": "6"
    },
    "1633": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1634": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1635": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1637": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1638": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1639": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1641": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "ADD",
      "path": "6"
    },
    "1642": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1643": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCA9"
    },
    "1646": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1648": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1649": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1650": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1652": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "ADD",
      "path": "6"
    },
    "1653": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1654": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "POP",
      "path": "6"
    },
    "1655": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "POP",
      "path": "6"
    },
    "1656": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1658": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1659": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1660": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1661": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "SUB",
      "path": "6"
    },
    "1662": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1663": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1664": {
      "fn": "ERC20._approve",
      "offset": [
        9410,
        9478
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1671": {
      "op": "SHL"
    },
    "1672": {
      "op": "SUB"
    },
    "1673": {
      "fn": "ERC20._approve",
      "offset": [
        9496,
        9517
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 19
    },
    "1674": {
      "branch": 44,
      "fn": "ERC20._approve",
      "offset": [
        9496,
        9517
      ],
      "op": "AND",
      "path": "6"
    },
    "1675": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6C5"
    },
    "1678": {
      "branch": 44,
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1679": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1681": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1690": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1691": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1693": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "ADD",
      "path": "6"
    },
    "1694": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1695": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1696": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1698": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "ADD",
      "path": "6"
    },
    "1699": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1700": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1701": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "SUB",
      "path": "6"
    },
    "1702": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1703": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1704": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x22"
    },
    "1706": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1707": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1708": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1710": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "ADD",
      "path": "6"
    },
    "1711": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1712": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBF3"
    },
    "1715": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x22"
    },
    "1717": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1718": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "1719": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1721": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "ADD",
      "path": "6"
    },
    "1722": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1723": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "POP",
      "path": "6"
    },
    "1724": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "POP",
      "path": "6"
    },
    "1725": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1727": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1728": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1729": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1730": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "SUB",
      "path": "6"
    },
    "1731": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1732": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1733": {
      "fn": "ERC20._approve",
      "offset": [
        9488,
        9556
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 20
    },
    "1743": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1744": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "AND",
      "path": "6"
    },
    "1745": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1747": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1748": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1749": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1750": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9578
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "1752": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1754": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1755": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1756": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1757": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1759": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1760": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1761": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9585
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1762": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1763": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "DUP8",
      "path": "6"
    },
    "1764": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "AND",
      "path": "6"
    },
    "1765": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1766": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "DUP5",
      "path": "6"
    },
    "1767": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1768": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1769": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1770": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1771": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1772": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1773": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1774": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9594
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1775": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9603
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1776": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9603
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1777": {
      "fn": "ERC20._approve",
      "offset": [
        9567,
        9603
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1778": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 21
    },
    "1779": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1780": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "DUP6",
      "path": "6"
    },
    "1781": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1782": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1783": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1784": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1785": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1818": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "1819": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1820": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1821": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "SUB",
      "path": "6"
    },
    "1822": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1823": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1824": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "ADD",
      "path": "6"
    },
    "1825": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1826": {
      "fn": "ERC20._approve",
      "offset": [
        9618,
        9650
      ],
      "op": "LOG3",
      "path": "6"
    },
    "1827": {
      "fn": "ERC20._approve",
      "offset": [
        9317,
        9657
      ],
      "op": "POP",
      "path": "6"
    },
    "1828": {
      "fn": "ERC20._approve",
      "offset": [
        9317,
        9657
      ],
      "op": "POP",
      "path": "6"
    },
    "1829": {
      "fn": "ERC20._approve",
      "offset": [
        9317,
        9657
      ],
      "op": "POP",
      "path": "6"
    },
    "1830": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9317,
        9657
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1831": {
      "fn": "ERC20._mint",
      "offset": [
        7794,
        8164
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "op": "SUB"
    },
    "1840": {
      "fn": "ERC20._mint",
      "offset": [
        7877,
        7898
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 22
    },
    "1841": {
      "branch": 45,
      "fn": "ERC20._mint",
      "offset": [
        7877,
        7898
      ],
      "op": "AND",
      "path": "6"
    },
    "1842": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x782"
    },
    "1845": {
      "branch": 45,
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1846": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1848": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1849": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1858": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1859": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1861": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1863": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1864": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "ADD",
      "path": "6"
    },
    "1865": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1866": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "1868": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "1870": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1871": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "ADD",
      "path": "6"
    },
    "1872": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1873": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "1906": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "1908": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1909": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "ADD",
      "path": "6"
    },
    "1910": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1911": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1912": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "1913": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1914": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1915": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1916": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "SUB",
      "path": "6"
    },
    "1917": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "1919": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "ADD",
      "path": "6"
    },
    "1920": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1921": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1922": {
      "fn": "ERC20._mint",
      "offset": [
        7869,
        7934
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1923": {
      "fn": "ERC20._mint",
      "offset": [
        7945,
        7994
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 23,
      "value": "0x78E"
    },
    "1926": {
      "fn": "ERC20._mint",
      "offset": [
        7974,
        7975
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1928": {
      "fn": "ERC20._mint",
      "offset": [
        7978,
        7985
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1929": {
      "fn": "ERC20._mint",
      "offset": [
        7987,
        7993
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1930": {
      "fn": "ERC20._mint",
      "offset": [
        7945,
        7965
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB66"
    },
    "1933": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7945,
        7994
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1934": {
      "fn": "ERC20._mint",
      "offset": [
        7945,
        7994
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1935": {
      "fn": "ERC20._mint",
      "offset": [
        8020,
        8032
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x2"
    },
    "1937": {
      "fn": "ERC20._mint",
      "offset": [
        8020,
        8032
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1938": {
      "fn": "ERC20._mint",
      "offset": [
        8020,
        8044
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x79B"
    },
    "1941": {
      "fn": "ERC20._mint",
      "offset": [
        8020,
        8044
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1942": {
      "fn": "ERC20._mint",
      "offset": [
        8037,
        8043
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1943": {
      "fn": "ERC20._mint",
      "offset": [
        8020,
        8036
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA09"
    },
    "1946": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8020,
        8044
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1947": {
      "fn": "ERC20._mint",
      "offset": [
        8020,
        8044
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1948": {
      "fn": "ERC20._mint",
      "offset": [
        8005,
        8017
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "1950": {
      "fn": "ERC20._mint",
      "offset": [
        8005,
        8044
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1957": {
      "op": "SHL"
    },
    "1958": {
      "op": "SUB"
    },
    "1959": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 25
    },
    "1960": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "AND",
      "path": "6"
    },
    "1961": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8084
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1963": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1964": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1965": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1966": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1968": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1969": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1970": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1971": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1973": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1974": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1975": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8093
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1976": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8105
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C1"
    },
    "1979": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8105
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1980": {
      "fn": "ERC20._mint",
      "offset": [
        8098,
        8104
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1981": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8097
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA09"
    },
    "1984": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8075,
        8105
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1985": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8105
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "op": "SUB"
    },
    "1994": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1995": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "AND",
      "path": "6"
    },
    "1996": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8063
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1998": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1999": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2000": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2001": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2003": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2004": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2005": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2006": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2008": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2009": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2010": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2011": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8105
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2012": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8105
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2013": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8105
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2014": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8105
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2015": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 26
    },
    "2016": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2017": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2018": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2019": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2020": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2021": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2022": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2023": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8072
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2024": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8063
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2025": {
      "fn": "ERC20._mint",
      "offset": [
        8054,
        8063
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2026": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2059": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2060": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2061": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2062": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "SUB",
      "path": "6"
    },
    "2063": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2064": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2065": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "ADD",
      "path": "6"
    },
    "2066": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2067": {
      "fn": "ERC20._mint",
      "offset": [
        8120,
        8157
      ],
      "op": "LOG3",
      "path": "6"
    },
    "2068": {
      "fn": "ERC20._mint",
      "offset": [
        7794,
        8164
      ],
      "op": "POP",
      "path": "6"
    },
    "2069": {
      "fn": "ERC20._mint",
      "offset": [
        7794,
        8164
      ],
      "op": "POP",
      "path": "6"
    },
    "2070": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7794,
        8164
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2071": {
      "fn": "ERC20._transfer",
      "offset": [
        6993,
        7523
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2078": {
      "op": "SHL"
    },
    "2079": {
      "op": "SUB"
    },
    "2080": {
      "fn": "ERC20._transfer",
      "offset": [
        7098,
        7118
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 27
    },
    "2081": {
      "branch": 46,
      "fn": "ERC20._transfer",
      "offset": [
        7098,
        7118
      ],
      "op": "AND",
      "path": "6"
    },
    "2082": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x85C"
    },
    "2085": {
      "branch": 46,
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2086": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2088": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2095": {
      "op": "SHL"
    },
    "2096": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2097": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2098": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2100": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "ADD",
      "path": "6"
    },
    "2101": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2102": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2103": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2105": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "ADD",
      "path": "6"
    },
    "2106": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2107": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2108": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "SUB",
      "path": "6"
    },
    "2109": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2110": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2111": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x25"
    },
    "2113": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2114": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2115": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2117": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "ADD",
      "path": "6"
    },
    "2118": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2119": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC84"
    },
    "2122": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x25"
    },
    "2124": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2125": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2126": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2128": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "ADD",
      "path": "6"
    },
    "2129": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2130": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "POP",
      "path": "6"
    },
    "2131": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "POP",
      "path": "6"
    },
    "2132": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2134": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2135": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2136": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2137": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "SUB",
      "path": "6"
    },
    "2138": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2139": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2140": {
      "fn": "ERC20._transfer",
      "offset": [
        7090,
        7160
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2147": {
      "op": "SHL"
    },
    "2148": {
      "op": "SUB"
    },
    "2149": {
      "fn": "ERC20._transfer",
      "offset": [
        7178,
        7201
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 28
    },
    "2150": {
      "branch": 47,
      "fn": "ERC20._transfer",
      "offset": [
        7178,
        7201
      ],
      "op": "AND",
      "path": "6"
    },
    "2151": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8A1"
    },
    "2154": {
      "branch": 47,
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2155": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2157": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2164": {
      "op": "SHL"
    },
    "2165": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2166": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2167": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2169": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "ADD",
      "path": "6"
    },
    "2170": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2171": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2172": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2174": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "ADD",
      "path": "6"
    },
    "2175": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2176": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2177": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "SUB",
      "path": "6"
    },
    "2178": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2179": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2180": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x23"
    },
    "2182": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2183": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2184": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2186": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "ADD",
      "path": "6"
    },
    "2187": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2188": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBAE"
    },
    "2191": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x23"
    },
    "2193": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2194": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2195": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2197": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "ADD",
      "path": "6"
    },
    "2198": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2199": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "POP",
      "path": "6"
    },
    "2200": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "POP",
      "path": "6"
    },
    "2201": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2203": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2204": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2205": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2206": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "SUB",
      "path": "6"
    },
    "2207": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2208": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2209": {
      "fn": "ERC20._transfer",
      "offset": [
        7170,
        7241
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2210": {
      "fn": "ERC20._transfer",
      "offset": [
        7252,
        7299
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 29,
      "value": "0x8AC"
    },
    "2213": {
      "fn": "ERC20._transfer",
      "offset": [
        7273,
        7279
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2214": {
      "fn": "ERC20._transfer",
      "offset": [
        7281,
        7290
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2215": {
      "fn": "ERC20._transfer",
      "offset": [
        7292,
        7298
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2216": {
      "fn": "ERC20._transfer",
      "offset": [
        7252,
        7272
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB66"
    },
    "2219": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7252,
        7299
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2220": {
      "fn": "ERC20._transfer",
      "offset": [
        7252,
        7299
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2221": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 30,
      "value": "0x8E9"
    },
    "2224": {
      "fn": "ERC20._transfer",
      "offset": [
        7352,
        7358
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2225": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2227": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2228": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2229": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2231": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "ADD",
      "path": "6"
    },
    "2232": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2234": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2235": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2236": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "2238": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2239": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2240": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2242": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "ADD",
      "path": "6"
    },
    "2243": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC15"
    },
    "2246": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x26"
    },
    "2248": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2249": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2256": {
      "op": "SHL"
    },
    "2257": {
      "op": "SUB"
    },
    "2258": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "DUP7",
      "path": "6"
    },
    "2259": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "AND",
      "path": "6"
    },
    "2260": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7339
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2262": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2263": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2264": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2265": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2267": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2268": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2269": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2270": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2272": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2273": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2274": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2275": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7347
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2276": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2277": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7351
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x972"
    },
    "2280": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7330,
        7401
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2281": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7401
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2291": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2292": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "AND",
      "path": "6"
    },
    "2293": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7319
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2295": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2296": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2297": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2298": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2300": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2301": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2302": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2303": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2305": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2306": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2307": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7327
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2308": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7401
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2309": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7401
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2310": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7401
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2311": {
      "fn": "ERC20._transfer",
      "offset": [
        7310,
        7401
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2312": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7454
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 31
    },
    "2313": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7454
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2314": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7454
      ],
      "op": "AND",
      "path": "6"
    },
    "2315": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7454
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2316": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7454
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2317": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7454
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2318": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7454
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2319": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7466
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x918"
    },
    "2322": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2323": {
      "fn": "ERC20._transfer",
      "offset": [
        7459,
        7465
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2324": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA09"
    },
    "2327": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7434,
        7466
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2328": {
      "fn": "ERC20._transfer",
      "offset": [
        7434,
        7466
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2335": {
      "op": "SHL"
    },
    "2336": {
      "op": "SUB"
    },
    "2337": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2338": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "DUP5",
      "path": "6"
    },
    "2339": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "AND",
      "path": "6"
    },
    "2340": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7420
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2342": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2343": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2344": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2345": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2347": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2348": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2349": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2350": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2352": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2353": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2354": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2355": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2356": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7466
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2357": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2358": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7466
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "2359": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7466
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2360": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 32
    },
    "2361": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2362": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2363": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2364": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2365": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2366": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2367": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2368": {
      "fn": "ERC20._transfer",
      "offset": [
        7411,
        7431
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "2369": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2370": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "DUP8",
      "path": "6"
    },
    "2371": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "AND",
      "path": "6"
    },
    "2372": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2373": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2406": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2407": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2408": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2409": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2410": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SUB",
      "path": "6"
    },
    "2411": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "ADD",
      "path": "6"
    },
    "2412": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2413": {
      "fn": "ERC20._transfer",
      "offset": [
        7481,
        7516
      ],
      "op": "LOG3",
      "path": "6"
    },
    "2414": {
      "fn": "ERC20._transfer",
      "offset": [
        6993,
        7523
      ],
      "op": "POP",
      "path": "6"
    },
    "2415": {
      "fn": "ERC20._transfer",
      "offset": [
        6993,
        7523
      ],
      "op": "POP",
      "path": "6"
    },
    "2416": {
      "fn": "ERC20._transfer",
      "offset": [
        6993,
        7523
      ],
      "op": "POP",
      "path": "6"
    },
    "2417": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        6993,
        7523
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2418": {
      "fn": "SafeMath.sub",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2419": {
      "fn": "SafeMath.sub",
      "offset": [
        1832,
        1839
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2421": {
      "fn": "SafeMath.sub",
      "offset": [
        1867,
        1879
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 33
    },
    "2422": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2423": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2424": {
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "GT",
      "path": "4"
    },
    "2425": {
      "branch": 49,
      "fn": "SafeMath.sub",
      "offset": [
        1859,
        1865
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2426": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA01"
    },
    "2429": {
      "branch": 49,
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2430": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2432": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2441": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2442": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2444": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2445": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2446": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2447": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2449": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2450": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2451": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2452": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "4"
    },
    "2453": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2454": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2455": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2456": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2457": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2458": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2459": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2460": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2461": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2463": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2464": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2465": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2466": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2467": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2468": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2469": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2471": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2472": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2473": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2474": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2475": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2476": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2478": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2479": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2480": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2481": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "LT",
      "path": "4"
    },
    "2482": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2483": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C6"
    },
    "2486": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2487": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2488": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2489": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2490": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2491": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2492": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2493": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2494": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2495": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2497": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2498": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9AE"
    },
    "2501": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2502": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2503": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2504": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2505": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2506": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2507": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2508": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2509": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2510": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2511": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2512": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2513": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2515": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "4"
    },
    "2516": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2517": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2518": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F3"
    },
    "2521": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2522": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2523": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2524": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "4"
    },
    "2525": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2526": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2527": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "2529": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2530": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2532": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "4"
    },
    "2533": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "2536": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "EXP",
      "path": "4"
    },
    "2537": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "4"
    },
    "2538": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "NOT",
      "path": "4"
    },
    "2539": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "AND",
      "path": "4"
    },
    "2540": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2541": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2542": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2544": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "ADD",
      "path": "4"
    },
    "2545": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2546": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2547": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2548": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2549": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2550": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2551": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2552": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "POP",
      "path": "4"
    },
    "2553": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2555": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2556": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2557": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2558": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SUB",
      "path": "4"
    },
    "2559": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2560": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2561": {
      "fn": "SafeMath.sub",
      "offset": [
        1851,
        1880
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "op": "POP"
    },
    "2565": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2566": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SUB",
      "path": "4"
    },
    "2567": {
      "fn": "SafeMath.sub",
      "offset": [
        1902,
        1907
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2568": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1746,
        1933
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2569": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2570": {
      "fn": "SafeMath.add",
      "offset": [
        932,
        939
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2572": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2573": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2574": {
      "fn": "SafeMath.add",
      "offset": [
        963,
        968
      ],
      "op": "ADD",
      "path": "4"
    },
    "2575": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 34
    },
    "2576": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2577": {
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "LT",
      "path": "4"
    },
    "2578": {
      "branch": 50,
      "fn": "SafeMath.add",
      "offset": [
        986,
        992
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2579": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA63"
    },
    "2582": {
      "branch": 50,
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2583": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2585": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2586": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2593": {
      "op": "SHL"
    },
    "2594": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2595": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2596": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2598": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2600": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2601": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "4"
    },
    "2602": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2603": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1B"
    },
    "2605": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "2607": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2608": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "4"
    },
    "2609": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2610": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2643": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "2645": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2646": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "4"
    },
    "2647": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2648": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2649": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2650": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2651": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2652": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2653": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SUB",
      "path": "4"
    },
    "2654": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "2656": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "ADD",
      "path": "4"
    },
    "2657": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2658": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2659": {
      "fn": "SafeMath.add",
      "offset": [
        978,
        1024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2660": {
      "fn": "SafeMath.add",
      "offset": [
        1042,
        1043
      ],
      "op": "SWAP4",
      "path": "4",
      "statement": 35
    },
    "2661": {
      "fn": "SafeMath.add",
      "offset": [
        874,
        1050
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2662": {
      "op": "POP"
    },
    "2663": {
      "op": "POP"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        874,
        1050
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2666": {
      "fn": "ERC20._burn",
      "offset": [
        8484,
        8894
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2673": {
      "op": "SHL"
    },
    "2674": {
      "op": "SUB"
    },
    "2675": {
      "fn": "ERC20._burn",
      "offset": [
        8567,
        8588
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 36
    },
    "2676": {
      "branch": 48,
      "fn": "ERC20._burn",
      "offset": [
        8567,
        8588
      ],
      "op": "AND",
      "path": "6"
    },
    "2677": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAAF"
    },
    "2680": {
      "branch": 48,
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2681": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2683": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2692": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2693": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2695": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "ADD",
      "path": "6"
    },
    "2696": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2697": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2698": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2700": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "ADD",
      "path": "6"
    },
    "2701": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2702": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2703": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "SUB",
      "path": "6"
    },
    "2704": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2705": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2706": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "2708": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2709": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2710": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2712": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "ADD",
      "path": "6"
    },
    "2713": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2714": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC63"
    },
    "2717": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x21"
    },
    "2719": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2720": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2721": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2723": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "ADD",
      "path": "6"
    },
    "2724": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2725": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "POP",
      "path": "6"
    },
    "2726": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "POP",
      "path": "6"
    },
    "2727": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2729": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2730": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2731": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2732": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "SUB",
      "path": "6"
    },
    "2733": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2734": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "REVERT",
      "path": "6"
    },
    "2735": {
      "fn": "ERC20._burn",
      "offset": [
        8559,
        8626
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2736": {
      "fn": "ERC20._burn",
      "offset": [
        8637,
        8686
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 37,
      "value": "0xABB"
    },
    "2739": {
      "fn": "ERC20._burn",
      "offset": [
        8658,
        8665
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2740": {
      "fn": "ERC20._burn",
      "offset": [
        8675,
        8676
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2742": {
      "fn": "ERC20._burn",
      "offset": [
        8679,
        8685
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2743": {
      "fn": "ERC20._burn",
      "offset": [
        8637,
        8657
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB66"
    },
    "2746": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8637,
        8686
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2747": {
      "fn": "ERC20._burn",
      "offset": [
        8637,
        8686
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2748": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 38,
      "value": "0xAF8"
    },
    "2751": {
      "fn": "ERC20._burn",
      "offset": [
        8741,
        8747
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2752": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2754": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2755": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2756": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2758": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "ADD",
      "path": "6"
    },
    "2759": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2761": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2762": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2763": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x22"
    },
    "2765": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2766": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2767": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2769": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "ADD",
      "path": "6"
    },
    "2770": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD1"
    },
    "2773": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x22"
    },
    "2775": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2776": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2783": {
      "op": "SHL"
    },
    "2784": {
      "op": "SUB"
    },
    "2785": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2786": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "AND",
      "path": "6"
    },
    "2787": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8727
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2789": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2790": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2791": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2792": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2794": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2795": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2796": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2797": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2799": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2800": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2801": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2802": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8736
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2803": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2804": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8740
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x972"
    },
    "2807": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8718,
        8786
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2808": {
      "fn": "ERC20._burn",
      "offset": [
        8718,
        8786
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2815": {
      "op": "SHL"
    },
    "2816": {
      "op": "SUB"
    },
    "2817": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2818": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "AND",
      "path": "6"
    },
    "2819": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8706
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2821": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2822": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2823": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2824": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2826": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2827": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2828": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2829": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2831": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2832": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8715
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2833": {
      "fn": "ERC20._burn",
      "offset": [
        8697,
        8786
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2834": {
      "fn": "ERC20._burn",
      "offset": [
        8811,
        8823
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 39,
      "value": "0x2"
    },
    "2836": {
      "fn": "ERC20._burn",
      "offset": [
        8811,
        8823
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2837": {
      "fn": "ERC20._burn",
      "offset": [
        8811,
        8835
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB1E"
    },
    "2840": {
      "fn": "ERC20._burn",
      "offset": [
        8811,
        8835
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2841": {
      "fn": "ERC20._burn",
      "offset": [
        8828,
        8834
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2842": {
      "fn": "ERC20._burn",
      "offset": [
        8811,
        8827
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB6B"
    },
    "2845": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8811,
        8835
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2846": {
      "fn": "ERC20._burn",
      "offset": [
        8811,
        8835
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2847": {
      "fn": "ERC20._burn",
      "offset": [
        8796,
        8808
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2849": {
      "fn": "ERC20._burn",
      "offset": [
        8796,
        8835
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2850": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 40,
      "value": "0x40"
    },
    "2852": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2853": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2854": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2855": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2856": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2857": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2858": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2859": {
      "fn": "ERC20._burn",
      "offset": [
        8876,
        8877
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2861": {
      "fn": "ERC20._burn",
      "offset": [
        8876,
        8877
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2868": {
      "op": "SHL"
    },
    "2869": {
      "op": "SUB"
    },
    "2870": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "DUP6",
      "path": "6"
    },
    "2871": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "AND",
      "path": "6"
    },
    "2872": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2873": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2906": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2907": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2908": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2909": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "SUB",
      "path": "6"
    },
    "2910": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2912": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "ADD",
      "path": "6"
    },
    "2913": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2914": {
      "fn": "ERC20._burn",
      "offset": [
        8850,
        8887
      ],
      "op": "LOG3",
      "path": "6"
    },
    "2915": {
      "fn": "ERC20._burn",
      "offset": [
        8484,
        8894
      ],
      "op": "POP",
      "path": "6"
    },
    "2916": {
      "fn": "ERC20._burn",
      "offset": [
        8484,
        8894
      ],
      "op": "POP",
      "path": "6"
    },
    "2917": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        8484,
        8894
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2918": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10655,
        10747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2919": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10655,
        10747
      ],
      "op": "POP",
      "path": "6"
    },
    "2920": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10655,
        10747
      ],
      "op": "POP",
      "path": "6"
    },
    "2921": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10655,
        10747
      ],
      "op": "POP",
      "path": "6"
    },
    "2922": {
      "fn": "ERC20._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        10655,
        10747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2923": {
      "fn": "SafeMath.sub",
      "offset": [
        1321,
        1455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2924": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2926": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 41,
      "value": "0xA63"
    },
    "2929": {
      "fn": "SafeMath.sub",
      "offset": [
        1409,
        1410
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2930": {
      "fn": "SafeMath.sub",
      "offset": [
        1412,
        1413
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2931": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2933": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2934": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2935": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2937": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "4"
    },
    "2938": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2940": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2941": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2942": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1E"
    },
    "2944": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2945": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2946": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2948": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "ADD",
      "path": "4"
    },
    "2949": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2982": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2983": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2984": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1448
      ],
      "op": "POP",
      "path": "4"
    },
    "2985": {
      "fn": "SafeMath.sub",
      "offset": [
        1405,
        1408
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x972"
    },
    "2988": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1405,
        1448
      ],
      "op": "JUMP",
      "path": "4"
    }
  },
  "sha1": "e203532697b363d47c2c8da2927d8df6fb769e97",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"contracts/Context.sol\";\nimport \"interfaces/my_IERC20.sol\";\nimport \"contracts/math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n\n\t/*-------------------------\n\t * ADDITION to the standard\n\t --------------------------*/\n\tfunction burnFrom(address owner, uint256 amount) public virtual override returns(bool) {\n\t\trequire(_allowances[owner][msg.sender] >= amount);  // msg.sender is a contract\n\t\t_burn(owner, amount);\n\t\treturn true;\n\t}\n\n\tfunction mintFrom(address owner, uint256 amount) public virtual override returns(bool) {\n\t\t_mint(owner, amount);\n\t\treturn true;\n\t}\n}\n",
  "sourceMap": "1327:9859:6:-:0;;;1964:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1964:141:6;;;;;;;;;;-1:-1:-1;1964:141:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1964:141:6;;;;;;;;;;-1:-1:-1;1964:141:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1964:141:6;;-1:-1:-1;;2036:12:6;;;;-1:-1:-1;2036:5:6;;:12;;;;;:::i;:::-;-1:-1:-1;2058:16:6;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2084:9:6;:14;;-1:-1:-1;;2084:14:6;2096:2;2084:14;;;-1:-1:-1;1327:9859:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1327:9859:6;;;-1:-1:-1;1327:9859:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/my_ERC20.sol",
  "type": "contract"
}