{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenStockAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenPaymentAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_promisor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_partitionUid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_priceExercise",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_priceOption",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_expirationDate",
          "type": "uint256"
        }
      ],
      "name": "StartOption",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "isOrigin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "options",
      "outputs": [
        {
          "internalType": "address",
          "name": "promisor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "priceOption",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceExercise",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        },
        {
          "internalType": "enum clauseOption.optionStates",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "recipientAccept",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "recipientDeny",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceExercise",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceOption",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "startOption",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "stopOption",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPayment",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenStock",
      "outputs": [
        {
          "internalType": "contract IERC1400",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/clause_option.sol",
    "10": "interfaces/my_IERC1400.sol",
    "11": "interfaces/my_IERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/clause_option.sol",
    "exportedSymbols": {
      "clauseOption": [
        532
      ]
    },
    "id": 533,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "interfaces/my_IERC20.sol",
        "file": "interfaces/my_IERC20.sol",
        "id": 25,
        "nodeType": "ImportDirective",
        "scope": 533,
        "sourceUnit": 4601,
        "src": "25:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/my_IERC1400.sol",
        "file": "interfaces/my_IERC1400.sol",
        "id": 26,
        "nodeType": "ImportDirective",
        "scope": 533,
        "sourceUnit": 4505,
        "src": "60:36:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 532,
        "linearizedBaseContracts": [
          532
        ],
        "name": "clauseOption",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "clauseOption.optionStates",
            "id": 30,
            "members": [
              {
                "id": 27,
                "name": "STATUS_UNUSED",
                "nodeType": "EnumValue",
                "src": "205:13:1"
              },
              {
                "id": 28,
                "name": "STATUS_PENDING",
                "nodeType": "EnumValue",
                "src": "244:14:1"
              },
              {
                "id": 29,
                "name": "STATUS_CLOSED",
                "nodeType": "EnumValue",
                "src": "264:13:1"
              }
            ],
            "name": "optionStates",
            "nodeType": "EnumDefinition",
            "src": "183:98:1"
          },
          {
            "canonicalName": "clauseOption.OptionRight",
            "id": 43,
            "members": [
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "promisor",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 43,
                "src": "346:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 31,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "346:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "recipient",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 43,
                "src": "366:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "366:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "priceOption",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 43,
                "src": "393:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 35,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "393:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "priceExercise",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 43,
                "src": "416:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "416:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "expirationDate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 43,
                "src": "441:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 43,
                "src": "467:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_optionStates_$30",
                  "typeString": "enum clauseOption.optionStates"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 41,
                  "name": "optionStates",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 30,
                  "src": "467:12:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_optionStates_$30",
                    "typeString": "enum clauseOption.optionStates"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "OptionRight",
            "nodeType": "StructDefinition",
            "scope": 532,
            "src": "323:170:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "409e2205",
            "id": 47,
            "mutability": "mutable",
            "name": "options",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 532,
            "src": "543:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
              "typeString": "mapping(uint256 => struct clauseOption.OptionRight)"
            },
            "typeName": {
              "id": 46,
              "keyType": {
                "id": 44,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "553:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "543:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                "typeString": "mapping(uint256 => struct clauseOption.OptionRight)"
              },
              "valueType": {
                "contractScope": null,
                "id": 45,
                "name": "OptionRight",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 43,
                "src": "564:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OptionRight_$43_storage_ptr",
                  "typeString": "struct clauseOption.OptionRight"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c55c0583",
            "id": 49,
            "mutability": "mutable",
            "name": "tokenStock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 532,
            "src": "595:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1400_$4504",
              "typeString": "contract IERC1400"
            },
            "typeName": {
              "contractScope": null,
              "id": 48,
              "name": "IERC1400",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4504,
              "src": "595:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1400_$4504",
                "typeString": "contract IERC1400"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a4f3a7c7",
            "id": 51,
            "mutability": "mutable",
            "name": "tokenPayment",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 532,
            "src": "676:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4600",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 50,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4600,
              "src": "676:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4600",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1270:192:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 59,
                          "name": "_tokenStockAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1285:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1315:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1307:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 60,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1307:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1307:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1285:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1277:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "_tokenPaymentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1330:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 71,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1362:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 70,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1354:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 69,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1354:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1354:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1330:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1322:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1322:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "tokenStock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1370:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1400_$4504",
                        "typeString": "contract IERC1400"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "_tokenStockAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1392:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 77,
                        "name": "IERC1400",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4504,
                        "src": "1383:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC1400_$4504_$",
                          "typeString": "type(contract IERC1400)"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1383:28:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1400_$4504",
                        "typeString": "contract IERC1400"
                      }
                    },
                    "src": "1370:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1400_$4504",
                      "typeString": "contract IERC1400"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "tokenPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "1415:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "_tokenPaymentAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1437:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 83,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4600,
                        "src": "1430:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4600_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1430:28:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1415:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4600",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:43:1"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_tokenStockAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 89,
                  "src": "1205:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_tokenPaymentAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 89,
                  "src": "1233:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1204:58:1"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1270:0:1"
            },
            "scope": 532,
            "src": "1193:269:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 105,
            "name": "StartOption",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_promisor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1637:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1664:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1692:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1708:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_priceExercise",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1731:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_priceOption",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1755:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_expirationDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1777:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1636:165:1"
            },
            "src": "1619:183:1"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "2312:2216:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_optionStates_$30",
                          "typeString": "enum clauseOption.optionStates"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 121,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "2324:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 123,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "2332:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2324:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "2324:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_optionStates_$30",
                            "typeString": "enum clauseOption.optionStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "optionStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "2356:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_optionStates_$30_$",
                              "typeString": "type(enum clauseOption.optionStates)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2356:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_optionStates_$30",
                            "typeString": "enum clauseOption.optionStates"
                          }
                        },
                        "src": "2324:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e6520706172746974696f6e207065757420c383c2aa747265206c276f626a657420646520706c75736965757273206f7074696f6e73206d616973207061732073696d756c74616ec383c2a96d656e74",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2385:83:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e39dac54aeb95f30df53cee5af8b7d938f8dc10e04600367773dc5d2fce1c5bb",
                          "typeString": "literal_string \"Une partition peut \u00c3\u00aatre l'objet de plusieurs options mais pas simultan\u00c3\u00a9ment\""
                        },
                        "value": "Une partition peut \u00c3\u00aatre l'objet de plusieurs options mais pas simultan\u00c3\u00a9ment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e39dac54aeb95f30df53cee5af8b7d938f8dc10e04600367773dc5d2fce1c5bb",
                          "typeString": "literal_string \"Une partition peut \u00c3\u00aatre l'objet de plusieurs options mais pas simultan\u00c3\u00a9ment\""
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2316:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2316:153:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "2316:153:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 134,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "2510:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 132,
                              "name": "tokenStock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "2481:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1400_$4504",
                                "typeString": "contract IERC1400"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPartitionOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4301,
                            "src": "2481:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2481:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2527:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2527:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2481:56:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5365756c206c652070726f6d657474616e74207065757420696e697469657220756e65206f7074696f6e",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2539:44:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e86002aa8e031ee7a52ac28ca2dc1f6b376a565354a1916c740bf2b854a9ae2",
                          "typeString": "literal_string \"Seul le promettant peut initier une option\""
                        },
                        "value": "Seul le promettant peut initier une option"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e86002aa8e031ee7a52ac28ca2dc1f6b376a565354a1916c740bf2b854a9ae2",
                          "typeString": "literal_string \"Seul le promettant peut initier une option\""
                        }
                      ],
                      "id": 131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2473:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2473:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:111:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 145,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "2626:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 143,
                              "name": "tokenStock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "2596:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1400_$4504",
                                "typeString": "contract IERC1400"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPartitionStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4308,
                            "src": "2596:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2596:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2643:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2596:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6120706172746974696f6e206369626c65206465206c276f7074696f6e20646f697420c383c2aa74726520616374697665202d205354415455535f4143544956452069732030",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2646:73:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f013205a85eee7ff097117ec64b4c95b5a19acb37d6bbe88b405e84af0a0f8a",
                          "typeString": "literal_string \"la partition cible de l'option doit \u00c3\u00aatre active - STATUS_ACTIVE is 0\""
                        },
                        "value": "la partition cible de l'option doit \u00c3\u00aatre active - STATUS_ACTIVE is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f013205a85eee7ff097117ec64b4c95b5a19acb37d6bbe88b405e84af0a0f8a",
                          "typeString": "literal_string \"la partition cible de l'option doit \u00c3\u00aatre active - STATUS_ACTIVE is 0\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2588:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:132:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2588:132:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "priceExercise",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "2732:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2748:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2732:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2724:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 159,
                          "name": "priceOption",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2762:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2776:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2762:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 158,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2754:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 165,
                          "name": "duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "2790:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2801:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2790:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6120647572c383c2a965206427756e65206f7074696f6e206573742065787072696dc383c2a96520656e206a6f757273",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2804:51:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d42773cebcd825977e7f32b92e0438c90545c231ddda961ac79c4b0a0f58288",
                          "typeString": "literal_string \"la dur\u00c3\u00a9e d'une option est exprim\u00c3\u00a9e en jours\""
                        },
                        "value": "la dur\u00c3\u00a9e d'une option est exprim\u00c3\u00a9e en jours"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d42773cebcd825977e7f32b92e0438c90545c231ddda961ac79c4b0a0f58288",
                          "typeString": "literal_string \"la dur\u00c3\u00a9e d'une option est exprim\u00c3\u00a9e en jours\""
                        }
                      ],
                      "id": 164,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2782:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:74:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 174,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "2891:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 172,
                              "name": "tokenPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "2868:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4521,
                            "src": "2868:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2868:33:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 176,
                            "name": "priceOption",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2905:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 177,
                            "name": "priceExercise",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 111,
                            "src": "2919:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2905:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2868:64:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2860:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2860:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:73:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 185,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "2968:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 188,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2987:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_clauseOption_$532",
                                    "typeString": "contract clauseOption"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_clauseOption_$532",
                                    "typeString": "contract clauseOption"
                                  }
                                ],
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2979:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 186,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2979:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2979:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 183,
                              "name": "tokenPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "2945:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4541,
                            "src": "2945:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2945:48:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 191,
                          "name": "priceOption",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "2997:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2945:63:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2937:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2937:72:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2937:72:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 195,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3014:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 197,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 196,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "3022:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3014:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "promisor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "3014:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 199,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3047:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3047:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3014:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3014:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 203,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3061:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 205,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 204,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "3069:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3061:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "3061:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 207,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 107,
                      "src": "3095:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3061:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "3061:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3114:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 212,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 211,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "3122:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3114:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceOption",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "3114:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 214,
                      "name": "priceOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "3150:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3114:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 217,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3165:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 219,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 218,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "3173:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3165:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceExercise",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "3165:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 221,
                      "name": "priceExercise",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "3203:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3165:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3220:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 226,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "3228:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3220:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expirationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "3220:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 228,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -17,
                        "src": "3259:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 229,
                          "name": "duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 115,
                          "src": "3265:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3276:6:1",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          },
                          "value": "1"
                        },
                        "src": "3265:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3259:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3220:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:62:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 235,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "3286:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 237,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 236,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "3294:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3286:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "3286:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 239,
                        "name": "optionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "3317:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_optionStates_$30_$",
                          "typeString": "type(enum clauseOption.optionStates)"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_PENDING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3317:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "src": "3286:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_optionStates_$30",
                      "typeString": "enum clauseOption.optionStates"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 246,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3498:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3498:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 250,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3518:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_clauseOption_$532",
                                    "typeString": "contract clauseOption"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_clauseOption_$532",
                                    "typeString": "contract clauseOption"
                                  }
                                ],
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3510:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 248,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3510:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3510:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 252,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 109,
                              "src": "3525:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 244,
                              "name": "tokenStock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "3471:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1400_$4504",
                                "typeString": "contract IERC1400"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowanceEscrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4437,
                            "src": "3471:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:67:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 254,
                          "name": "priceExercise",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "3542:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3471:84:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6520636f6e74726163742064652073c383c2a97175657374726520646f697420c383c2aa747265206175746f726973c383c2a920c383c2a0206d6f646966696572206c6520737461747573206465206c6120706172746974696f6e",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3557:94:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f915ff84e0920fc3abb1533a11b4b89de61816d4e0016f0481d6993cb33c7f4e",
                          "typeString": "literal_string \"le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition\""
                        },
                        "value": "le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f915ff84e0920fc3abb1533a11b4b89de61816d4e0016f0481d6993cb33c7f4e",
                          "typeString": "literal_string \"le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition\""
                        }
                      ],
                      "id": 243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3463:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3463:189:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3463:189:1"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "endDate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 301,
                      "src": "3905:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3905:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 261,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "3923:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 262,
                        "name": "duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "3929:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3940:6:1",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      },
                      "src": "3929:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3923:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3905:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 270,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "4142:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 271,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "4153:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 272,
                        "name": "endDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "4167:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 273,
                        "name": "priceExercise",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "4176:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "tokenStock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "4114:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1400_$4504",
                          "typeString": "contract IERC1400"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "confinePartition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4455,
                      "src": "4114:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,uint256) external returns (bool)"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4114:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:76:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 279,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "4272:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 280,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4283:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4283:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 282,
                        "name": "priceOption",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "4295:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 276,
                        "name": "tokenPayment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "4246:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4600",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4563,
                      "src": "4246:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4246:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "4246:61:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4421:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4421:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 288,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "4433:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 291,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4452:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_clauseOption_$532",
                              "typeString": "contract clauseOption"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_clauseOption_$532",
                              "typeString": "contract clauseOption"
                            }
                          ],
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4444:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4444:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4444:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 109,
                        "src": "4459:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "priceExercise",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "4473:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "priceOption",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "4488:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "endDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "4501:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 285,
                      "name": "StartOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "4409:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4409:100:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "EmitStatement",
                  "src": "4404:105:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4520:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 119,
                  "id": 300,
                  "nodeType": "Return",
                  "src": "4513:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3d0d6aab",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "2188:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "2207:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "priceExercise",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "2229:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "priceOption",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "2252:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "duration",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "2273:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2187:103:1"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "2307:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2307:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2306:6:1"
            },
            "scope": 532,
            "src": "2167:2361:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "4663:989:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4675:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4675:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 312,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4689:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 314,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 313,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "4697:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4689:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "4689:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4675:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4667:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4667:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4667:54:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 322,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4756:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4756:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 320,
                              "name": "tokenPayment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "4733:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4521,
                            "src": "4733:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4733:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 325,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4771:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 327,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 326,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "4779:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4771:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "priceExercise",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "4771:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4733:73:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4725:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4725:82:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "4725:82:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 333,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "4819:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 334,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4826:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 336,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 335,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "4834:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4826:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "4826:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4819:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4811:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4811:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "4811:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_optionStates_$30",
                          "typeString": "enum clauseOption.optionStates"
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 342,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "4875:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 344,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 343,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "4883:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4875:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "4875:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_optionStates_$30",
                            "typeString": "enum clauseOption.optionStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 346,
                            "name": "optionStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "4907:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_optionStates_$30_$",
                              "typeString": "type(enum clauseOption.optionStates)"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4907:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_optionStates_$30",
                            "typeString": "enum clauseOption.optionStates"
                          }
                        },
                        "src": "4875:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4867:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4867:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 350,
                  "nodeType": "ExpressionStatement",
                  "src": "4867:68:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 354,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "4977:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 352,
                              "name": "tokenStock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "4947:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1400_$4504",
                                "typeString": "contract IERC1400"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPartitionStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4308,
                            "src": "4947:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4994:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4947:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6120706172746974696f6e206369626c65206465206c276f7074696f6e20646f697420c383c2aa74726520656e2073c383c2a971756573747265202d205354415455535f434f4e46494e45442069732031",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4997:84:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a8153f9b3a017b121d2ad5ce365c6a47e5c01908cabf31930645116a673a6c1",
                          "typeString": "literal_string \"la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1\""
                        },
                        "value": "la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a8153f9b3a017b121d2ad5ce365c6a47e5c01908cabf31930645116a673a6c1",
                          "typeString": "literal_string \"la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1\""
                        }
                      ],
                      "id": 351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4939:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4939:143:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "4939:143:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 364,
                                  "name": "options",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47,
                                  "src": "5180:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                    "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                                  }
                                },
                                "id": 366,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 365,
                                  "name": "partitionUid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 304,
                                  "src": "5188:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5180:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                                  "typeString": "struct clauseOption.OptionRight storage ref"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "promisor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32,
                              "src": "5180:30:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 370,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5220:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_clauseOption_$532",
                                    "typeString": "contract clauseOption"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_clauseOption_$532",
                                    "typeString": "contract clauseOption"
                                  }
                                ],
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5212:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 368,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5212:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5212:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 372,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "5227:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 362,
                              "name": "tokenStock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "5153:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1400_$4504",
                                "typeString": "contract IERC1400"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowanceEscrow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4437,
                            "src": "5153:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5153:87:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 374,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "5244:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 376,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 375,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 304,
                              "src": "5252:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5244:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "priceExercise",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38,
                          "src": "5244:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5153:126:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5145:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5145:135:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "5145:135:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 384,
                            "name": "options",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "5381:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                              "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                            }
                          },
                          "id": 386,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "5389:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5381:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                            "typeString": "struct clauseOption.OptionRight storage ref"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "promisor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "5381:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 388,
                            "name": "options",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "5413:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                              "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                            }
                          },
                          "id": 390,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 389,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "5421:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5413:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                            "typeString": "struct clauseOption.OptionRight storage ref"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "priceExercise",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38,
                        "src": "5413:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 304,
                        "src": "5450:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 381,
                        "name": "tokenStock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "5355:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1400_$4504",
                          "typeString": "contract IERC1400"
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "escrowTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4487,
                      "src": "5355:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256) external"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5355:108:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "5355:108:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "5558:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 396,
                            "name": "tokenStock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "5525:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1400_$4504",
                              "typeString": "contract IERC1400"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stopOptionByRecipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4478,
                          "src": "5525:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) external returns (bool)"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5525:46:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5517:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5517:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "5517:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 402,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "5576:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 404,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 403,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "5584:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5576:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "5576:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "optionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "5607:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_optionStates_$30_$",
                          "typeString": "type(enum clauseOption.optionStates)"
                        }
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5607:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "src": "5576:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_optionStates_$30",
                      "typeString": "enum clauseOption.optionStates"
                    }
                  },
                  "id": 409,
                  "nodeType": "ExpressionStatement",
                  "src": "5576:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5644:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 308,
                  "id": 411,
                  "nodeType": "Return",
                  "src": "5637:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "30a6ef72",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientAccept",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 413,
                  "src": "4620:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4620:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4619:22:1"
            },
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 413,
                  "src": "4658:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4658:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4657:6:1"
            },
            "scope": 532,
            "src": "4595:1057:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "5784:519:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 421,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5796:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5796:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 423,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "5810:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 425,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 424,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5818:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5810:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34,
                          "src": "5810:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5796:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5788:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5788:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5788:54:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 431,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "5854:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 432,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "5861:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 434,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 433,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5869:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5861:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "5861:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5854:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5846:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5846:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "5846:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_optionStates_$30",
                          "typeString": "enum clauseOption.optionStates"
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 440,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "5910:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 442,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 441,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5918:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5910:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "5910:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_optionStates_$30",
                            "typeString": "enum clauseOption.optionStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 444,
                            "name": "optionStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "5942:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_optionStates_$30_$",
                              "typeString": "type(enum clauseOption.optionStates)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_PENDING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5942:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_optionStates_$30",
                            "typeString": "enum clauseOption.optionStates"
                          }
                        },
                        "src": "5910:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5902:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5902:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "5902:68:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 452,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "6012:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 450,
                              "name": "tokenStock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "5982:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1400_$4504",
                                "typeString": "contract IERC1400"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPartitionStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4308,
                            "src": "5982:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5982:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6029:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5982:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6120706172746974696f6e206369626c65206465206c276f7074696f6e20646f697420c383c2aa74726520656e2073c383c2a971756573747265202d205354415455535f434f4e46494e45442069732031",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6032:84:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a8153f9b3a017b121d2ad5ce365c6a47e5c01908cabf31930645116a673a6c1",
                          "typeString": "literal_string \"la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1\""
                        },
                        "value": "la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a8153f9b3a017b121d2ad5ce365c6a47e5c01908cabf31930645116a673a6c1",
                          "typeString": "literal_string \"la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1\""
                        }
                      ],
                      "id": 449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5974:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5974:143:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "5974:143:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 462,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "6209:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 460,
                            "name": "tokenStock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6176:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1400_$4504",
                              "typeString": "contract IERC1400"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stopOptionByRecipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4478,
                          "src": "6176:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) external returns (bool)"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6176:46:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6168:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6168:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "6168:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 466,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "6227:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 468,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 467,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "6235:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6227:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "6227:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 470,
                        "name": "optionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "6258:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_optionStates_$30_$",
                          "typeString": "type(enum clauseOption.optionStates)"
                        }
                      },
                      "id": 471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6258:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "src": "6227:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_optionStates_$30",
                      "typeString": "enum clauseOption.optionStates"
                    }
                  },
                  "id": 473,
                  "nodeType": "ExpressionStatement",
                  "src": "6227:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6295:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 419,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "6288:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "807327f0",
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientDeny",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 477,
                  "src": "5741:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5741:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5740:22:1"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 477,
                  "src": "5779:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5779:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5778:6:1"
            },
            "scope": 532,
            "src": "5718:585:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "6439:251:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 485,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6451:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6451:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 487,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6465:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 489,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 488,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "6473:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6465:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "promisor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "6465:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6451:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6443:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6443:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 493,
                  "nodeType": "ExpressionStatement",
                  "src": "6443:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 495,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "6508:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 496,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "6514:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                                "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                              }
                            },
                            "id": 498,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 497,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "6522:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6514:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                              "typeString": "struct clauseOption.OptionRight storage ref"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40,
                          "src": "6514:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6508:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6500:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6500:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "6500:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 506,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "6596:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 504,
                            "name": "tokenStock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6564:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC1400_$4504",
                              "typeString": "contract IERC1400"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stopOptionByPromisor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4471,
                          "src": "6564:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) external returns (bool)"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6564:45:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6556:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6556:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "6556:54:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "options",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "6614:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OptionRight_$43_storage_$",
                            "typeString": "mapping(uint256 => struct clauseOption.OptionRight storage ref)"
                          }
                        },
                        "id": 512,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 511,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "6622:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6614:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptionRight_$43_storage",
                          "typeString": "struct clauseOption.OptionRight storage ref"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "6614:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 514,
                        "name": "optionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "6645:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_optionStates_$30_$",
                          "typeString": "type(enum clauseOption.optionStates)"
                        }
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6645:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_optionStates_$30",
                        "typeString": "enum clauseOption.optionStates"
                      }
                    },
                    "src": "6614:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_optionStates_$30",
                      "typeString": "enum clauseOption.optionStates"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "6614:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6682:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 483,
                  "id": 519,
                  "nodeType": "Return",
                  "src": "6675:11:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "06fdb363",
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stopOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 521,
                  "src": "6396:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6396:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6395:22:1"
            },
            "returnParameters": {
              "id": 483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 482,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 521,
                  "src": "6434:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6434:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6433:6:1"
            },
            "scope": 532,
            "src": "6376:314:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "6755:39:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 526,
                        "name": "tokenStock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "6766:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1400_$4504",
                          "typeString": "contract IERC1400"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "whoIsOrigin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4503,
                      "src": "6766:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                        "typeString": "function () external returns (address)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6766:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 525,
                  "id": 529,
                  "nodeType": "Return",
                  "src": "6759:31:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "b40643a9",
            "id": 531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOrigin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6728:2:1"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 524,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 531,
                  "src": "6747:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6747:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6746:9:1"
            },
            "scope": 532,
            "src": "6711:83:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 533,
        "src": "98:6698:1"
      }
    ],
    "src": "0:6798:1"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161109d38038061109d8339818101604052604081101561003357600080fd5b5080516020909101516001600160a01b03821661004f57600080fd5b6001600160a01b03811661006257600080fd5b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556110008061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063807327f01161005b578063807327f01461018c578063a4f3a7c7146101a9578063b40643a9146101cd578063c55c0583146101d557610088565b806306fdb3631461008d57806330a6ef72146100be5780633d0d6aab146100db578063409e220514610119575b600080fd5b6100aa600480360360208110156100a357600080fd5b50356101dd565b604080519115158252519081900360200190f35b6100aa600480360360208110156100d457600080fd5b50356102c2565b6100aa600480360360a08110156100f157600080fd5b506001600160a01b0381351690602081013590604081013590606081013590608001356105ee565b6101366004803603602081101561012f57600080fd5b5035610bdb565b60405180876001600160a01b03168152602001866001600160a01b0316815260200185815260200184815260200183815260200182600281111561017657fe5b8152602001965050505050505060405180910390f35b6100aa600480360360208110156101a257600080fd5b5035610c20565b6101b1610d94565b604080516001600160a01b039092168252519081900360200190f35b6101b1610da3565b6101b1610e1a565b6000818152602081905260408120546001600160a01b0316331461020057600080fd5b600082815260208190526040902060040154421161021d57600080fd5b60015460408051637e622d0560e11b81526004810185905290516001600160a01b039092169163fcc45a0a916024808201926020929091908290030181600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b505050506040513d602081101561029557600080fd5b50516102a057600080fd5b506000908152602081905260409020600501805460ff19166002179055600190565b6000818152602081905260408120600101546001600160a01b031633146102e857600080fd5b600082815260208181526040918290206003015460025483516370a0823160e01b8152336004820152935191936001600160a01b03909116926370a0823192602480840193829003018186803b15801561034157600080fd5b505afa158015610355573d6000803e3d6000fd5b505050506040513d602081101561036b57600080fd5b5051101561037857600080fd5b60008281526020819052604090206004015442111561039657600080fd5b600160008381526020819052604090206005015460ff1660028111156103b857fe5b146103c257600080fd5b600154604080516376c657c960e01b81526004810185905290516001600160a01b03909216916376c657c991602480820192602092909190829003018186803b15801561040e57600080fd5b505afa158015610422573d6000803e3d6000fd5b505050506040513d602081101561043857600080fd5b50516001146104785760405162461bcd60e51b8152600401808060200182810382526052815260200180610e9b6052913960600191505060405180910390fd5b600082815260208181526040918290206003810154600154915484516305ca3bfb60e31b81526001600160a01b0391821660048201523060248201526044810188905294519194921692632e51dfd89260648082019391829003018186803b1580156104e357600080fd5b505afa1580156104f7573d6000803e3d6000fd5b505050506040513d602081101561050d57600080fd5b5051101561051a57600080fd5b600154600083815260208190526040808220805460039091015482516321c08ad160e11b81526001600160a01b039283166004820152602481019190915260448101879052915193169263438115a29260648084019391929182900301818387803b15801561058857600080fd5b505af115801561059c573d6000803e3d6000fd5b50506001546040805163f90d771760e01b81526004810187905290516001600160a01b03909216935063f90d771792506024808201926020929091908290030181600087803b15801561026b57600080fd5b6000600160008681526020819052604090206005015460ff16600281111561061257fe5b141561064f5760405162461bcd60e51b8152600401808060200182810382526051815260200180610f1e6051913960600191505060405180910390fd5b600154604080516363857a7b60e01b815260048101889052905133926001600160a01b0316916363857a7b916024808301926020929190829003018186803b15801561069a57600080fd5b505afa1580156106ae573d6000803e3d6000fd5b505050506040513d60208110156106c457600080fd5b50516001600160a01b03161461070b5760405162461bcd60e51b815260040180806020018281038252602a815260200180610e2a602a913960400191505060405180910390fd5b600154604080516376c657c960e01b81526004810188905290516001600160a01b03909216916376c657c991602480820192602092909190829003018186803b15801561075757600080fd5b505afa15801561076b573d6000803e3d6000fd5b505050506040513d602081101561078157600080fd5b5051156107bf5760405162461bcd60e51b8152600401808060200182810382526047815260200180610e546047913960600191505060405180910390fd5b600084116107cc57600080fd5b600083116107d957600080fd5b600082116108185760405162461bcd60e51b8152600401808060200182810382526031815260200180610eed6031913960400191505060405180910390fd5b600254604080516370a0823160e01b81526001600160a01b03898116600483015291518688019392909216916370a0823191602480820192602092909190829003018186803b15801561086a57600080fd5b505afa15801561087e573d6000803e3d6000fd5b505050506040513d602081101561089457600080fd5b505110156108a157600080fd5b60025460408051636eb1769f60e11b81526001600160a01b03898116600483015230602483015291518693929092169163dd62ed3e91604480820192602092909190829003018186803b1580156108f757600080fd5b505afa15801561090b573d6000803e3d6000fd5b505050506040513d602081101561092157600080fd5b5051101561092e57600080fd5b60008581526020819052604090208054336001600160a01b0319918216178255600180830180549092166001600160a01b038a16179091556002820185905560038201869055620151808402420160048301556005909101805460ff191682800217905550600154604080516305ca3bfb60e31b815233600482015230602482015260448101889052905186926001600160a01b031691632e51dfd8916064808301926020929190829003018186803b1580156109ea57600080fd5b505afa1580156109fe573d6000803e3d6000fd5b505050506040513d6020811015610a1457600080fd5b50511015610a535760405162461bcd60e51b815260040180806020018281038252605c815260200180610f6f605c913960600191505060405180910390fd5b600154604080516368aa16ff60e01b81526001600160a01b03898116600483015260248201899052426201518087020160448301819052606483018990529251929316916368aa16ff916084808201926020929091908290030181600087803b158015610abf57600080fd5b505af1158015610ad3573d6000803e3d6000fd5b505050506040513d6020811015610ae957600080fd5b5050600254604080516323b872dd60e01b81526001600160a01b038a8116600483015233602483015260448201889052915191909216916323b872dd9160648083019260209291908290030181600087803b158015610b4757600080fd5b505af1158015610b5b573d6000803e3d6000fd5b505050506040513d6020811015610b7157600080fd5b50506040805130815260208101889052808201879052606081018690526080810183905290516001600160a01b0389169133917fd2b44aeb51c25f153082768c524fb7002726ea22630322ef25e116d2a0bdad819181900360a00190a35060019695505050505050565b6000602081905290815260409020805460018201546002830154600384015460048501546005909501546001600160a01b039485169593909416939192909160ff1686565b6000818152602081905260408120600101546001600160a01b03163314610c4657600080fd5b600082815260208190526040902060040154421115610c6457600080fd5b600160008381526020819052604090206005015460ff166002811115610c8657fe5b14610c9057600080fd5b600154604080516376c657c960e01b81526004810185905290516001600160a01b03909216916376c657c991602480820192602092909190829003018186803b158015610cdc57600080fd5b505afa158015610cf0573d6000803e3d6000fd5b505050506040513d6020811015610d0657600080fd5b5051600114610d465760405162461bcd60e51b8152600401808060200182810382526052815260200180610e9b6052913960600191505060405180910390fd5b6001546040805163f90d771760e01b81526004810185905290516001600160a01b039092169163f90d7717916024808201926020929091908290030181600087803b15801561026b57600080fd5b6002546001600160a01b031681565b6001546040805163ca1a35cf60e01b815290516000926001600160a01b03169163ca1a35cf91600480830192602092919082900301818787803b158015610de957600080fd5b505af1158015610dfd573d6000803e3d6000fd5b505050506040513d6020811015610e1357600080fd5b5051905090565b6001546001600160a01b03168156fe5365756c206c652070726f6d657474616e74207065757420696e697469657220756e65206f7074696f6e6c6120706172746974696f6e206369626c65206465206c276f7074696f6e20646f697420c383c2aa74726520616374697665202d205354415455535f41435449564520697320306c6120706172746974696f6e206369626c65206465206c276f7074696f6e20646f697420c383c2aa74726520656e2073c383c2a971756573747265202d205354415455535f434f4e46494e454420697320316c6120647572c383c2a965206427756e65206f7074696f6e206573742065787072696dc383c2a96520656e206a6f757273556e6520706172746974696f6e207065757420c383c2aa747265206c276f626a657420646520706c75736965757273206f7074696f6e73206d616973207061732073696d756c74616ec383c2a96d656e746c6520636f6e74726163742064652073c383c2a97175657374726520646f697420c383c2aa747265206175746f726973c383c2a920c383c2a0206d6f646966696572206c6520737461747573206465206c6120706172746974696f6ea2646970667358221220ffc627303eab3c596cf18c5e9cc67ccf915befb111d53f17a14e52a11c9d4b6064736f6c634300060c0033",
  "bytecodeSha1": "1fc5c9e32401559f5c5f7b398af5f093189c5575",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "clauseOption",
  "coverageMap": {
    "branches": {
      "1": {
        "clauseOption.recipientAccept": {
          "40": [
            4675,
            4720,
            true
          ],
          "41": [
            4733,
            4806,
            true
          ],
          "42": [
            4819,
            4862,
            true
          ],
          "43": [
            4875,
            4934,
            true
          ],
          "44": [
            4947,
            4995,
            true
          ],
          "45": [
            5153,
            5279,
            true
          ],
          "46": [
            5525,
            5571,
            true
          ]
        },
        "clauseOption.recipientDeny": {
          "56": [
            5796,
            5841,
            true
          ],
          "57": [
            5854,
            5897,
            true
          ],
          "58": [
            5910,
            5969,
            true
          ],
          "59": [
            5982,
            6030,
            true
          ],
          "60": [
            6176,
            6222,
            true
          ]
        },
        "clauseOption.startOption": {
          "47": [
            2324,
            2383,
            true
          ],
          "48": [
            2481,
            2537,
            true
          ],
          "49": [
            2596,
            2644,
            true
          ],
          "50": [
            2732,
            2749,
            true
          ],
          "51": [
            2762,
            2777,
            true
          ],
          "52": [
            2790,
            2802,
            true
          ],
          "53": [
            2868,
            2932,
            true
          ],
          "54": [
            2945,
            3008,
            true
          ],
          "55": [
            3471,
            3555,
            true
          ]
        },
        "clauseOption.stopOption": {
          "37": [
            6451,
            6495,
            true
          ],
          "38": [
            6508,
            6550,
            true
          ],
          "39": [
            6564,
            6609,
            true
          ]
        }
      },
      "10": {},
      "11": {}
    },
    "statements": {
      "1": {
        "clauseOption.isOrigin": {
          "36": [
            6759,
            6790
          ]
        },
        "clauseOption.recipientAccept": {
          "4": [
            4667,
            4721
          ],
          "5": [
            4725,
            4807
          ],
          "6": [
            4811,
            4863
          ],
          "7": [
            4867,
            4935
          ],
          "8": [
            4939,
            5082
          ],
          "9": [
            5145,
            5280
          ],
          "10": [
            5355,
            5463
          ],
          "11": [
            5517,
            5572
          ]
        },
        "clauseOption.recipientDeny": {
          "31": [
            5788,
            5842
          ],
          "32": [
            5846,
            5898
          ],
          "33": [
            5902,
            5970
          ],
          "34": [
            5974,
            6117
          ],
          "35": [
            6168,
            6223
          ]
        },
        "clauseOption.startOption": {
          "12": [
            2316,
            2469
          ],
          "13": [
            2473,
            2584
          ],
          "14": [
            2588,
            2720
          ],
          "15": [
            2724,
            2750
          ],
          "16": [
            2754,
            2778
          ],
          "17": [
            2782,
            2856
          ],
          "18": [
            2860,
            2933
          ],
          "19": [
            2937,
            3009
          ],
          "20": [
            3014,
            3057
          ],
          "21": [
            3061,
            3104
          ],
          "22": [
            3114,
            3161
          ],
          "23": [
            3165,
            3216
          ],
          "24": [
            3220,
            3282
          ],
          "25": [
            3286,
            3344
          ],
          "26": [
            3463,
            3652
          ],
          "27": [
            4114,
            4190
          ],
          "28": [
            4246,
            4307
          ],
          "29": [
            4404,
            4509
          ],
          "30": [
            4513,
            4524
          ]
        },
        "clauseOption.stopOption": {
          "0": [
            6443,
            6496
          ],
          "1": [
            6500,
            6551
          ],
          "2": [
            6556,
            6610
          ],
          "3": [
            6614,
            6671
          ]
        }
      },
      "10": {},
      "11": {}
    }
  },
  "dependencies": [
    "IERC1400",
    "IERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "98:6698:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6376:314;;;;;;;;;;;;;;;;-1:-1:-1;6376:314:1;;:::i;:::-;;;;;;;;;;;;;;;;;;4595:1057;;;;;;;;;;;;;;;;-1:-1:-1;4595:1057:1;;:::i;2167:2361::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2167:2361:1;;;;;;;;;;;;;;;;;;;;;;;:::i;543:48::-;;;;;;;;;;;;;;;;-1:-1:-1;543:48:1;;:::i;:::-;;;;;-1:-1:-1;;;;;543:48:1;;;;;;-1:-1:-1;;;;;543:48:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5718:585;;;;;;;;;;;;;;;;-1:-1:-1;5718:585:1;;:::i;676:26::-;;;:::i;:::-;;;;-1:-1:-1;;;;;676:26:1;;;;;;;;;;;;;;6711:83;;;:::i;595:26::-;;;:::i;6376:314::-;6434:4;6465:21;;;;;;;;;;:30;-1:-1:-1;;;;;6465:30:1;6451:10;:44;6443:53;;;;;;6514:7;:21;;;;;;;;;;:36;;;6508:3;:42;6500:51;;;;;;6564:10;;:45;;;-1:-1:-1;;;6564:45:1;;;;;;;;;;-1:-1:-1;;;;;6564:10:1;;;;:31;;:45;;;;;;;;;;;;;;;:10;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6564:45:1;6556:54;;;;;;-1:-1:-1;6614:7:1;:21;;;;;;;;;;:28;;:57;;-1:-1:-1;;6614:57:1;6645:26;6614:57;;;;;6376:314::o;4595:1057::-;4658:4;4689:21;;;;;;;;;;:31;;;-1:-1:-1;;;;;4689:31:1;4675:10;:45;4667:54;;;;;;4771:7;:21;;;;;;;;;;;;:35;;;4733:12;;:34;;-1:-1:-1;;;4733:34:1;;4756:10;4733:34;;;;;;4771:35;;-1:-1:-1;;;;;4733:12:1;;;;:22;;:34;;;;;;;;;;:12;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4733:34:1;:73;;4725:82;;;;;;4826:7;:21;;;;;;;;;;:36;;;4819:3;:43;;4811:52;;;;;;4907:27;4875:7;:21;;;;;;;;;;:28;;;;;:59;;;;;;;;;4867:68;;;;;;4947:10;;:43;;;-1:-1:-1;;;4947:43:1;;;;;;;;;;-1:-1:-1;;;;;4947:10:1;;;;:29;;:43;;;;;;;;;;;;;;;:10;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4947:43:1;4994:1;4947:48;4939:143;;;;-1:-1:-1;;;4939:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5244:7;:21;;;;;;;;;;;;:35;;;;5153:10;;5180:30;;5153:87;;-1:-1:-1;;;5153:87:1;;-1:-1:-1;;;;;5180:30:1;;;5153:87;;;;5220:4;5153:87;;;;;;;;;;;;5244:35;;5153:10;;;:26;;:87;;;;;;;;;;;:10;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5153:87:1;:126;;5145:135;;;;;;5355:10;;;5381:21;;;;;;;;;;;:30;;5413:35;;;;;5355:108;;-1:-1:-1;;;5355:108:1;;-1:-1:-1;;;;;5381:30:1;;;5355:108;;;;;;;;;;;;;;;;;;;:10;;;:25;;:108;;;;;:10;;:108;;;;;;:10;;:108;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5525:10:1;;:46;;;-1:-1:-1;;;5525:46:1;;;;;;;;;;-1:-1:-1;;;;;5525:10:1;;;;-1:-1:-1;5525:32:1;;-1:-1:-1;5525:46:1;;;;;;;;;;;;;;;:10;;:46;;;;;;;;;;2167:2361;2307:4;2356:27;2324:7;:21;;;;;;;;;;:28;;;;;:59;;;;;;;;;;2316:153;;;;-1:-1:-1;;;2316:153:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2481:10;;:42;;;-1:-1:-1;;;2481:42:1;;;;;;;;;;2527:10;;-1:-1:-1;;;;;2481:10:1;;:28;;:42;;;;;;;;;;;;;;:10;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2481:42:1;-1:-1:-1;;;;;2481:56:1;;2473:111;;;;-1:-1:-1;;;2473:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2596:10;;:43;;;-1:-1:-1;;;2596:43:1;;;;;;;;;;-1:-1:-1;;;;;2596:10:1;;;;:29;;:43;;;;;;;;;;;;;;;:10;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2596:43:1;:48;2588:132;;;;-1:-1:-1;;;2588:132:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:1;2732:13;:17;2724:26;;;;;;2776:1;2762:11;:15;2754:24;;;;;;2801:1;2790:8;:12;2782:74;;;;-1:-1:-1;;;2782:74:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:12;;:33;;;-1:-1:-1;;;2868:33:1;;-1:-1:-1;;;;;2868:33:1;;;;;;;;;2905:27;;;;2868:12;;;;;:22;;:33;;;;;;;;;;;;;;;:12;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2868:33:1;:64;;2860:73;;;;;;2945:12;;:48;;;-1:-1:-1;;;2945:48:1;;-1:-1:-1;;;;;2945:48:1;;;;;;;2987:4;2945:48;;;;;;2997:11;;2945:12;;;;;:22;;:48;;;;;;;;;;;;;;;:12;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2945:48:1;:63;;2937:72;;;;;;3014:7;:21;;;;;;;;;;:43;;3047:10;-1:-1:-1;;;;;;3014:43:1;;;;;;-1:-1:-1;3061:31:1;;;:43;;;;;-1:-1:-1;;;;;3061:43:1;;;;;;3114:33;;;:47;;;3165:35;;;:51;;;3276:6;3265:17;;3259:3;:23;3220:36;;;:62;3286:28;;;;:58;;-1:-1:-1;;3286:58:1;-1:-1:-1;;3286:58:1;;;;-1:-1:-1;3471:10:1;;:67;;;-1:-1:-1;;;3471:67:1;;3498:10;3471:67;;;;3518:4;3471:67;;;;;;;;;;;;3542:13;;-1:-1:-1;;;;;3471:10:1;;:26;;:67;;;;;;;;;;;;;;:10;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3471:67:1;:84;;3463:189;;;;-1:-1:-1;;;3463:189:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4114:10;;:76;;;-1:-1:-1;;;4114:76:1;;-1:-1:-1;;;;;4114:76:1;;;;;;;;;;;;;3923:3;3940:6;3929:17;;3923:23;4114:76;;;;;;;;;;;;;;3923:23;;4114:10;;:27;;:76;;;;;;;;;;;;;;;3905:15;4114:10;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4246:12:1;;:61;;;-1:-1:-1;;;4246:61:1;;-1:-1:-1;;;;;4246:61:1;;;;;;;4283:10;4246:61;;;;;;;;;;;;:12;;;;;:25;;:61;;;;;4114:76;;4246:61;;;;;;;:12;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4409:100:1;;;4452:4;4409:100;;4246:61;4409:100;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4409:100:1;;;4421:10;;4409:100;;;;;;;;;-1:-1:-1;4520:4:1;;2167:2361;-1:-1:-1;;;;;;2167:2361:1:o;543:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:48:1;;;;;;;;;;;;;;;;:::o;5718:585::-;5779:4;5810:21;;;;;;;;;;:31;;;-1:-1:-1;;;;;5810:31:1;5796:10;:45;5788:54;;;;;;5861:7;:21;;;;;;;;;;:36;;;5854:3;:43;;5846:52;;;;;;5942:27;5910:7;:21;;;;;;;;;;:28;;;;;:59;;;;;;;;;5902:68;;;;;;5982:10;;:43;;;-1:-1:-1;;;5982:43:1;;;;;;;;;;-1:-1:-1;;;;;5982:10:1;;;;:29;;:43;;;;;;;;;;;;;;;:10;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5982:43:1;6029:1;5982:48;5974:143;;;;-1:-1:-1;;;5974:143:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6176:10;;:46;;;-1:-1:-1;;;6176:46:1;;;;;;;;;;-1:-1:-1;;;;;6176:10:1;;;;:32;;:46;;;;;;;;;;;;;;;:10;;:46;;;;;;;;;;676:26;;;-1:-1:-1;;;;;676:26:1;;:::o;6711:83::-;6766:10;;:24;;;-1:-1:-1;;;6766:24:1;;;;6747:7;;-1:-1:-1;;;;;6766:10:1;;:22;;:24;;;;;;;;;;;;;;6747:7;6766:10;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6766:24:1;;-1:-1:-1;6711:83:1;:::o;595:26::-;;;-1:-1:-1;;;;;595:26:1;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    98,
    6796
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x807327F0 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x807327F0 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xA4F3A7C7 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0xB40643A9 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xC55C0583 EQ PUSH2 0x1D5 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x6FDB363 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x30A6EF72 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x3D0D6AAB EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x409E2205 EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x176 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC20 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E622D05 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xFCC45A0A SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x2 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x355 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B8 JUMPI INVALID JUMPDEST EQ PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x76C657C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x76C657C9 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x422 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 EQ PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x52 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE9B PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 SLOAD SWAP2 SLOAD DUP5 MLOAD PUSH4 0x5CA3BFB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP5 MLOAD SWAP2 SWAP5 SWAP3 AND SWAP3 PUSH4 0x2E51DFD8 SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD DUP3 MLOAD PUSH4 0x21C08AD1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP4 AND SWAP3 PUSH4 0x438115A2 SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF90D7717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0xF90D7717 SWAP3 POP PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x612 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x64F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF1E PUSH1 0x51 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x63857A7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x63857A7B SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE2A PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x76C657C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x76C657C9 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x757 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x76B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x47 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE54 PUSH1 0x47 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xEED PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD DUP7 DUP9 ADD SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP7 SWAP1 SSTORE PUSH3 0x15180 DUP5 MUL TIMESTAMP ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 DUP1 MUL OR SWAP1 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5CA3BFB PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD DUP7 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2E51DFD8 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x5C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xF6F PUSH1 0x5C SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x68AA16FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE TIMESTAMP PUSH3 0x15180 DUP8 MUL ADD PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP10 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH4 0x68AA16FF SWAP2 PUSH1 0x84 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD ADDRESS DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE DUP1 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 CALLER SWAP2 PUSH32 0xD2B44AEB51C25F153082768C524FB7002726EA22630322EF25E116D2A0BDAD81 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC86 JUMPI INVALID JUMPDEST EQ PUSH2 0xC90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x76C657C9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x76C657C9 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 EQ PUSH2 0xD46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x52 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE9B PUSH1 0x52 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xF90D7717 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF90D7717 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCA1A35CF PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xCA1A35CF SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID MSTORE8 PUSH6 0x756C206C6520 PUSH17 0x726F6D657474616E74207065757420696E PUSH10 0x7469657220756E65206F PUSH17 0x74696F6E6C6120706172746974696F6E20 PUSH4 0x69626C65 KECCAK256 PUSH5 0x65206C276F PUSH17 0x74696F6E20646F697420C383C2AA747265 KECCAK256 PUSH2 0x6374 PUSH10 0x7665202D205354415455 MSTORE8 0x5F COINBASE NUMBER SLOAD 0x49 JUMP GASLIMIT KECCAK256 PUSH10 0x7320306C612070617274 PUSH10 0x74696F6E206369626C65 KECCAK256 PUSH5 0x65206C276F PUSH17 0x74696F6E20646F697420C383C2AA747265 KECCAK256 PUSH6 0x6E2073C383C2 0xA9 PUSH18 0x756573747265202D205354415455535F434F 0x4E CHAINID 0x49 0x4E GASLIMIT DIFFICULTY KECCAK256 PUSH10 0x7320316C6120647572C3 DUP4 0xC2 0xA9 PUSH6 0x206427756E65 KECCAK256 PUSH16 0x7074696F6E206573742065787072696D 0xC3 DUP4 0xC2 0xA9 PUSH6 0x20656E206A6F PUSH22 0x7273556E6520706172746974696F6E207065757420C3 DUP4 0xC2 0xAA PUSH21 0x7265206C276F626A657420646520706C7573696575 PUSH19 0x73206F7074696F6E73206D6169732070617320 PUSH20 0x696D756C74616EC383C2A96D656E746C6520636F PUSH15 0x74726163742064652073C383C2A971 PUSH22 0x657374726520646F697420C383C2AA74726520617574 PUSH16 0x726973C383C2A920C383C2A0206D6F64 PUSH10 0x66696572206C65207374 PUSH2 0x7475 PUSH20 0x206465206C6120706172746974696F6EA2646970 PUSH7 0x7358221220FFC6 0x27 ADDRESS RETURNDATACOPY 0xAB EXTCODECOPY MSIZE PUSH13 0xF18C5E9CC67CCF915BEFB111D5 EXTCODEHASH OR LOG1 0x4E MSTORE LOG1 SHR SWAP14 0x4B PUSH1 0x64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        98,
        6796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x807327F0"
    },
    "38": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x807327F0"
    },
    "49": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18C"
    },
    "53": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA4F3A7C7"
    },
    "60": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A9"
    },
    "64": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB40643A9"
    },
    "71": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CD"
    },
    "75": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC55C0583"
    },
    "82": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D5"
    },
    "86": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88"
    },
    "90": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMP",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDB363"
    },
    "98": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x30A6EF72"
    },
    "109": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBE"
    },
    "113": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3D0D6AAB"
    },
    "120": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB"
    },
    "124": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x409E2205"
    },
    "131": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x119"
    },
    "135": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        98,
        6796
      ],
      "op": "REVERT",
      "path": "1"
    },
    "141": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "142": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "145": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "147": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "149": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "SUB",
      "path": "1"
    },
    "150": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "152": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "DUP2",
      "path": "1"
    },
    "153": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "LT",
      "path": "1"
    },
    "154": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "155": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3"
    },
    "158": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "159": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "161": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "DUP1",
      "path": "1"
    },
    "162": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "REVERT",
      "path": "1"
    },
    "163": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "164": {
      "op": "POP"
    },
    "165": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "166": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DD"
    },
    "169": {
      "fn": "clauseOption.stopOption",
      "jump": "i",
      "offset": [
        6376,
        6690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "170": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "171": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "173": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "DUP1",
      "path": "1"
    },
    "174": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "175": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "176": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "177": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "178": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "DUP3",
      "path": "1"
    },
    "179": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "180": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "181": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "182": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "DUP2",
      "path": "1"
    },
    "183": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "184": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "SUB",
      "path": "1"
    },
    "185": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "187": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "ADD",
      "path": "1"
    },
    "188": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "189": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "RETURN",
      "path": "1"
    },
    "190": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "191": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "194": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "196": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "198": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "SUB",
      "path": "1"
    },
    "199": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "201": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "202": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "LT",
      "path": "1"
    },
    "203": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "204": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "207": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "208": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "210": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "REVERT",
      "path": "1"
    },
    "212": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "op": "POP"
    },
    "214": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "215": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C2"
    },
    "218": {
      "fn": "clauseOption.recipientAccept",
      "jump": "i",
      "offset": [
        4595,
        5652
      ],
      "op": "JUMP",
      "path": "1"
    },
    "219": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "220": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "223": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "225": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "DUP1",
      "path": "1"
    },
    "226": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "227": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "SUB",
      "path": "1"
    },
    "228": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "230": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "231": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "LT",
      "path": "1"
    },
    "232": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "233": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1"
    },
    "236": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "237": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "239": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "DUP1",
      "path": "1"
    },
    "240": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "REVERT",
      "path": "1"
    },
    "241": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "242": {
      "op": "POP"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "249": {
      "op": "SHL"
    },
    "250": {
      "op": "SUB"
    },
    "251": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "252": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "253": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "AND",
      "path": "1"
    },
    "254": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "255": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "257": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "258": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "ADD",
      "path": "1"
    },
    "259": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "260": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "261": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "264": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "ADD",
      "path": "1"
    },
    "265": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "266": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "267": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "269": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "270": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "ADD",
      "path": "1"
    },
    "271": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "272": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "273": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "275": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "ADD",
      "path": "1"
    },
    "276": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "277": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5EE"
    },
    "280": {
      "fn": "clauseOption.startOption",
      "jump": "i",
      "offset": [
        2167,
        4528
      ],
      "op": "JUMP",
      "path": "1"
    },
    "281": {
      "offset": [
        543,
        591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "282": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x136"
    },
    "285": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "287": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "288": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "289": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SUB",
      "path": "1"
    },
    "290": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "292": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "293": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "LT",
      "path": "1"
    },
    "294": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "295": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F"
    },
    "298": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "299": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "301": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "302": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "REVERT",
      "path": "1"
    },
    "303": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "304": {
      "op": "POP"
    },
    "305": {
      "offset": [
        543,
        591
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "306": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBDB"
    },
    "309": {
      "fn": "clauseOption.startOption",
      "jump": "i",
      "offset": [
        543,
        591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "310": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "311": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "313": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "314": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "315": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP8",
      "path": "1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "322": {
      "op": "SHL"
    },
    "323": {
      "op": "SUB"
    },
    "324": {
      "offset": [
        543,
        591
      ],
      "op": "AND",
      "path": "1"
    },
    "325": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "326": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "327": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "329": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "330": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP7",
      "path": "1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "337": {
      "op": "SHL"
    },
    "338": {
      "op": "SUB"
    },
    "339": {
      "offset": [
        543,
        591
      ],
      "op": "AND",
      "path": "1"
    },
    "340": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "341": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "342": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "344": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "345": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP6",
      "path": "1"
    },
    "346": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "347": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "348": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "350": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "351": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP5",
      "path": "1"
    },
    "352": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "353": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "354": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "356": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "357": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "358": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "359": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "360": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "362": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "363": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "364": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "366": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "367": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "GT",
      "path": "1"
    },
    "368": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "369": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x176"
    },
    "372": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "373": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "INVALID",
      "path": "1"
    },
    "374": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "375": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "376": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "377": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "379": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "380": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "381": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "POP",
      "path": "1"
    },
    "382": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "POP",
      "path": "1"
    },
    "383": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "POP",
      "path": "1"
    },
    "384": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "POP",
      "path": "1"
    },
    "385": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "POP",
      "path": "1"
    },
    "386": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "POP",
      "path": "1"
    },
    "387": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "POP",
      "path": "1"
    },
    "388": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "390": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "391": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "392": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "393": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SUB",
      "path": "1"
    },
    "394": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "395": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "RETURN",
      "path": "1"
    },
    "396": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "397": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA"
    },
    "400": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "402": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "403": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "404": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "SUB",
      "path": "1"
    },
    "405": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "407": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "DUP2",
      "path": "1"
    },
    "408": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "LT",
      "path": "1"
    },
    "409": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "410": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A2"
    },
    "413": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "414": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "416": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "DUP1",
      "path": "1"
    },
    "417": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "REVERT",
      "path": "1"
    },
    "418": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "419": {
      "op": "POP"
    },
    "420": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "421": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC20"
    },
    "424": {
      "fn": "clauseOption.recipientDeny",
      "jump": "i",
      "offset": [
        5718,
        6303
      ],
      "op": "JUMP",
      "path": "1"
    },
    "425": {
      "offset": [
        676,
        702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "426": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "429": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD94"
    },
    "432": {
      "fn": "clauseOption.recipientDeny",
      "jump": "i",
      "offset": [
        676,
        702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "433": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "434": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "436": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "DUP1",
      "path": "1"
    },
    "437": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "444": {
      "op": "SHL"
    },
    "445": {
      "op": "SUB"
    },
    "446": {
      "offset": [
        676,
        702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "447": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "448": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "AND",
      "path": "1"
    },
    "449": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "DUP3",
      "path": "1"
    },
    "450": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "451": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "452": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "453": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "DUP2",
      "path": "1"
    },
    "454": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "455": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "SUB",
      "path": "1"
    },
    "456": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "458": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "ADD",
      "path": "1"
    },
    "459": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "460": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "RETURN",
      "path": "1"
    },
    "461": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6711,
        6794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "462": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6711,
        6794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "465": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6711,
        6794
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDA3"
    },
    "468": {
      "fn": "clauseOption.isOrigin",
      "jump": "i",
      "offset": [
        6711,
        6794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "469": {
      "offset": [
        595,
        621
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "470": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        595,
        621
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "473": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        595,
        621
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1A"
    },
    "476": {
      "fn": "clauseOption.isOrigin",
      "jump": "i",
      "offset": [
        595,
        621
      ],
      "op": "JUMP",
      "path": "1"
    },
    "477": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6376,
        6690
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "478": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6434,
        6438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "480": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 0
    },
    "481": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "DUP2",
      "path": "1"
    },
    "482": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "483": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "485": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "DUP2",
      "path": "1"
    },
    "486": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "487": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "488": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "490": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "DUP2",
      "path": "1"
    },
    "491": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6486
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "492": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6495
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "499": {
      "op": "SHL"
    },
    "500": {
      "op": "SUB"
    },
    "501": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6465,
        6495
      ],
      "op": "AND",
      "path": "1"
    },
    "502": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6451,
        6461
      ],
      "op": "CALLER",
      "path": "1"
    },
    "503": {
      "branch": 37,
      "fn": "clauseOption.stopOption",
      "offset": [
        6451,
        6495
      ],
      "op": "EQ",
      "path": "1"
    },
    "504": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6443,
        6496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x200"
    },
    "507": {
      "branch": 37,
      "fn": "clauseOption.stopOption",
      "offset": [
        6443,
        6496
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "508": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6443,
        6496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "510": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6443,
        6496
      ],
      "op": "DUP1",
      "path": "1"
    },
    "511": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6443,
        6496
      ],
      "op": "REVERT",
      "path": "1"
    },
    "512": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6443,
        6496
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "513": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6521
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x0"
    },
    "515": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "DUP3",
      "path": "1"
    },
    "516": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "DUP2",
      "path": "1"
    },
    "517": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "518": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "520": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "DUP2",
      "path": "1"
    },
    "521": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "522": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "525": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "526": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6535
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "527": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "529": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6550
      ],
      "op": "ADD",
      "path": "1"
    },
    "530": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6514,
        6550
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "531": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6508,
        6511
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "532": {
      "branch": 38,
      "fn": "clauseOption.stopOption",
      "offset": [
        6508,
        6550
      ],
      "op": "GT",
      "path": "1"
    },
    "533": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6500,
        6551
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21D"
    },
    "536": {
      "branch": 38,
      "fn": "clauseOption.stopOption",
      "offset": [
        6500,
        6551
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "537": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6500,
        6551
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "539": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6500,
        6551
      ],
      "op": "DUP1",
      "path": "1"
    },
    "540": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6500,
        6551
      ],
      "op": "REVERT",
      "path": "1"
    },
    "541": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6500,
        6551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "542": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 2,
      "value": "0x1"
    },
    "544": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "545": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "547": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "548": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "549": {
      "op": "PUSH4",
      "value": "0x7E622D05"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP2",
      "path": "1"
    },
    "558": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "559": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "561": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP2",
      "path": "1"
    },
    "562": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ADD",
      "path": "1"
    },
    "563": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP6",
      "path": "1"
    },
    "564": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "565": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "566": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "567": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "574": {
      "op": "SHL"
    },
    "575": {
      "op": "SUB"
    },
    "576": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "577": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "578": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "AND",
      "path": "1"
    },
    "579": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "580": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6595
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFCC45A0A"
    },
    "585": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6595
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "586": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "588": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "589": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP3",
      "path": "1"
    },
    "590": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ADD",
      "path": "1"
    },
    "591": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "592": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "594": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "595": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "596": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "597": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "598": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP3",
      "path": "1"
    },
    "599": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "600": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "SUB",
      "path": "1"
    },
    "601": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ADD",
      "path": "1"
    },
    "602": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP2",
      "path": "1"
    },
    "603": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "605": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6574
      ],
      "op": "DUP8",
      "path": "1"
    },
    "606": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "607": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "608": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "609": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "610": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "611": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "614": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "615": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "617": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "618": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "REVERT",
      "path": "1"
    },
    "619": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "620": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "POP",
      "path": "1"
    },
    "621": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "GAS",
      "path": "1"
    },
    "622": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "CALL",
      "path": "1"
    },
    "623": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "624": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "625": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "626": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27F"
    },
    "629": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "630": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "631": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "633": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "634": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "635": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "636": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "638": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "REVERT",
      "path": "1"
    },
    "639": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "640": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "POP",
      "path": "1"
    },
    "641": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "POP",
      "path": "1"
    },
    "642": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "POP",
      "path": "1"
    },
    "643": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "POP",
      "path": "1"
    },
    "644": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "646": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "647": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "648": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "650": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP2",
      "path": "1"
    },
    "651": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "LT",
      "path": "1"
    },
    "652": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "653": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "656": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "657": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "659": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "DUP1",
      "path": "1"
    },
    "660": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "REVERT",
      "path": "1"
    },
    "661": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "branch": 39,
      "fn": "clauseOption.stopOption",
      "offset": [
        6564,
        6609
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "664": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6556,
        6610
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A0"
    },
    "667": {
      "branch": 39,
      "fn": "clauseOption.stopOption",
      "offset": [
        6556,
        6610
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "668": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6556,
        6610
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "670": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6556,
        6610
      ],
      "op": "DUP1",
      "path": "1"
    },
    "671": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6556,
        6610
      ],
      "op": "REVERT",
      "path": "1"
    },
    "672": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6556,
        6610
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x0"
    },
    "676": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "677": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "DUP2",
      "path": "1"
    },
    "678": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "679": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "681": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "DUP2",
      "path": "1"
    },
    "682": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "683": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "684": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "686": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "687": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6635
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "688": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "690": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6642
      ],
      "op": "ADD",
      "path": "1"
    },
    "691": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "DUP1",
      "path": "1"
    },
    "692": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "693": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "695": {
      "op": "NOT"
    },
    "696": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "AND",
      "path": "1"
    },
    "697": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6645,
        6671
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "699": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "OR",
      "path": "1"
    },
    "700": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "701": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "702": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "704": {
      "fn": "clauseOption.stopOption",
      "offset": [
        6614,
        6671
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "705": {
      "fn": "clauseOption.stopOption",
      "jump": "o",
      "offset": [
        6376,
        6690
      ],
      "op": "JUMP",
      "path": "1"
    },
    "706": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4595,
        5652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "707": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4658,
        4662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "709": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 4
    },
    "710": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "711": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "712": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "714": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "715": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "716": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "717": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "719": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "DUP2",
      "path": "1"
    },
    "720": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4710
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "721": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "723": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4720
      ],
      "op": "ADD",
      "path": "1"
    },
    "724": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4720
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "731": {
      "op": "SHL"
    },
    "732": {
      "op": "SUB"
    },
    "733": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4689,
        4720
      ],
      "op": "AND",
      "path": "1"
    },
    "734": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4675,
        4685
      ],
      "op": "CALLER",
      "path": "1"
    },
    "735": {
      "branch": 40,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4675,
        4720
      ],
      "op": "EQ",
      "path": "1"
    },
    "736": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4667,
        4721
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E8"
    },
    "739": {
      "branch": 40,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4667,
        4721
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "740": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4667,
        4721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "742": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4667,
        4721
      ],
      "op": "DUP1",
      "path": "1"
    },
    "743": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4667,
        4721
      ],
      "op": "REVERT",
      "path": "1"
    },
    "744": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4667,
        4721
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "745": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4778
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x0"
    },
    "747": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "DUP3",
      "path": "1"
    },
    "748": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "DUP2",
      "path": "1"
    },
    "749": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "750": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "752": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "DUP2",
      "path": "1"
    },
    "753": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "DUP2",
      "path": "1"
    },
    "754": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "755": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "757": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "758": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "DUP3",
      "path": "1"
    },
    "759": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "760": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4792
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "761": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "763": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4806
      ],
      "op": "ADD",
      "path": "1"
    },
    "764": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4806
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "765": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "767": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4745
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "768": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP4",
      "path": "1"
    },
    "769": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "770": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP2",
      "path": "1"
    },
    "779": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "780": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4756,
        4766
      ],
      "op": "CALLER",
      "path": "1"
    },
    "781": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "783": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "784": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ADD",
      "path": "1"
    },
    "785": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "786": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "787": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "788": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4806
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "789": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4771,
        4806
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "op": "SUB"
    },
    "798": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4745
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "799": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4745
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "800": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4745
      ],
      "op": "AND",
      "path": "1"
    },
    "801": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4745
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "802": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4755
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "807": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4755
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "808": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "810": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "811": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP5",
      "path": "1"
    },
    "812": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ADD",
      "path": "1"
    },
    "813": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "814": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP3",
      "path": "1"
    },
    "815": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "816": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "SUB",
      "path": "1"
    },
    "817": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ADD",
      "path": "1"
    },
    "818": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP2",
      "path": "1"
    },
    "819": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP7",
      "path": "1"
    },
    "820": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "821": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "822": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "823": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "824": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "825": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x341"
    },
    "828": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "829": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "831": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "832": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "REVERT",
      "path": "1"
    },
    "833": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "834": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "POP",
      "path": "1"
    },
    "835": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "GAS",
      "path": "1"
    },
    "836": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "837": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "838": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "839": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "840": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x355"
    },
    "843": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "844": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "845": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "847": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "848": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "849": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "850": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "852": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "REVERT",
      "path": "1"
    },
    "853": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "854": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "POP",
      "path": "1"
    },
    "855": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "POP",
      "path": "1"
    },
    "856": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "POP",
      "path": "1"
    },
    "857": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "POP",
      "path": "1"
    },
    "858": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "860": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "861": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "862": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "864": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP2",
      "path": "1"
    },
    "865": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "LT",
      "path": "1"
    },
    "866": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "867": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36B"
    },
    "870": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "871": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "873": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "DUP1",
      "path": "1"
    },
    "874": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "REVERT",
      "path": "1"
    },
    "875": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "876": {
      "op": "POP"
    },
    "877": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4767
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "878": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4806
      ],
      "op": "LT",
      "path": "1"
    },
    "879": {
      "branch": 41,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4733,
        4806
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "880": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4725,
        4807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x378"
    },
    "883": {
      "branch": 41,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4725,
        4807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "884": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4725,
        4807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "886": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4725,
        4807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "887": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4725,
        4807
      ],
      "op": "REVERT",
      "path": "1"
    },
    "888": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4725,
        4807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "889": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "891": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "DUP3",
      "path": "1"
    },
    "892": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "893": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "894": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "896": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "897": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "898": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "899": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "901": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "902": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4847
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "903": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4862
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "905": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4862
      ],
      "op": "ADD",
      "path": "1"
    },
    "906": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4826,
        4862
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "907": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4819,
        4822
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "908": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4819,
        4862
      ],
      "op": "GT",
      "path": "1"
    },
    "909": {
      "branch": 42,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4819,
        4862
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "910": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4811,
        4863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x396"
    },
    "913": {
      "branch": 42,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4811,
        4863
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "914": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4811,
        4863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "916": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4811,
        4863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "917": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4811,
        4863
      ],
      "op": "REVERT",
      "path": "1"
    },
    "918": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4811,
        4863
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "919": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4907,
        4934
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x1"
    },
    "921": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "923": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "DUP4",
      "path": "1"
    },
    "924": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "DUP2",
      "path": "1"
    },
    "925": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "926": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "928": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "DUP2",
      "path": "1"
    },
    "929": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "930": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "931": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "933": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "934": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4896
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "935": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "937": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4903
      ],
      "op": "ADD",
      "path": "1"
    },
    "938": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4903
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "939": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "941": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4903
      ],
      "op": "AND",
      "path": "1"
    },
    "942": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "944": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "DUP2",
      "path": "1"
    },
    "945": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "GT",
      "path": "1"
    },
    "946": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "947": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B8"
    },
    "950": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "951": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "INVALID",
      "path": "1"
    },
    "952": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "953": {
      "branch": 43,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4875,
        4934
      ],
      "op": "EQ",
      "path": "1"
    },
    "954": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4867,
        4935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C2"
    },
    "957": {
      "branch": 43,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4867,
        4935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "958": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4867,
        4935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "960": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4867,
        4935
      ],
      "op": "DUP1",
      "path": "1"
    },
    "961": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4867,
        4935
      ],
      "op": "REVERT",
      "path": "1"
    },
    "962": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4867,
        4935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "963": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4957
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x1"
    },
    "965": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4957
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "966": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "968": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "969": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "970": {
      "op": "PUSH4",
      "value": "0x76C657C9"
    },
    "975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "977": {
      "op": "SHL"
    },
    "978": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP2",
      "path": "1"
    },
    "979": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "980": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "982": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP2",
      "path": "1"
    },
    "983": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ADD",
      "path": "1"
    },
    "984": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP6",
      "path": "1"
    },
    "985": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "986": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "987": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "988": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "998": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4957
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "999": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4957
      ],
      "op": "AND",
      "path": "1"
    },
    "1000": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4957
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1001": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4976
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x76C657C9"
    },
    "1006": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4976
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1007": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1009": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1010": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1011": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ADD",
      "path": "1"
    },
    "1012": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1013": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1015": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1016": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1017": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1018": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1019": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1020": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1021": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "SUB",
      "path": "1"
    },
    "1022": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ADD",
      "path": "1"
    },
    "1023": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1024": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4957
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1025": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1026": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1027": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1028": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1029": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1030": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40E"
    },
    "1033": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1034": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1036": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1037": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1038": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1039": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "POP",
      "path": "1"
    },
    "1040": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "GAS",
      "path": "1"
    },
    "1041": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1042": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1043": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1044": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1045": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x422"
    },
    "1048": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1049": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1050": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1052": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1053": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1054": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1055": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1057": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1058": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1059": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "POP",
      "path": "1"
    },
    "1060": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "POP",
      "path": "1"
    },
    "1061": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "POP",
      "path": "1"
    },
    "1062": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "POP",
      "path": "1"
    },
    "1063": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1065": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1066": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1067": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1069": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1070": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "LT",
      "path": "1"
    },
    "1071": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1072": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x438"
    },
    "1075": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1076": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1078": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1079": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1080": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4990
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1083": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4994,
        4995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1085": {
      "branch": 44,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4947,
        4995
      ],
      "op": "EQ",
      "path": "1"
    },
    "1086": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x478"
    },
    "1089": {
      "branch": 44,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1090": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1092": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1099": {
      "op": "SHL"
    },
    "1100": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1101": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1102": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1104": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "ADD",
      "path": "1"
    },
    "1105": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1106": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1107": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1109": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "ADD",
      "path": "1"
    },
    "1110": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1111": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1112": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "SUB",
      "path": "1"
    },
    "1113": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1114": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1115": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x52"
    },
    "1117": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1118": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1119": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1121": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "ADD",
      "path": "1"
    },
    "1122": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1123": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9B"
    },
    "1126": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x52"
    },
    "1128": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1129": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "1130": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1132": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "ADD",
      "path": "1"
    },
    "1133": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1134": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "POP",
      "path": "1"
    },
    "1135": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "POP",
      "path": "1"
    },
    "1136": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1138": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1139": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1140": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1141": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "SUB",
      "path": "1"
    },
    "1142": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1143": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1144": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        4939,
        5082
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1145": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5251
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x0"
    },
    "1147": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1148": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1149": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1150": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1152": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1153": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1154": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1155": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1157": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1158": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1159": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1160": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5265
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1161": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1163": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1164": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5279
      ],
      "op": "ADD",
      "path": "1"
    },
    "1165": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5279
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1166": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1168": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5163
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1169": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5180,
        5210
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1170": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5180,
        5210
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1171": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1172": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1173": {
      "op": "PUSH4",
      "value": "0x5CA3BFB"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1182": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1189": {
      "op": "SHL"
    },
    "1190": {
      "op": "SUB"
    },
    "1191": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5180,
        5210
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1192": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5180,
        5210
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1193": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5180,
        5210
      ],
      "op": "AND",
      "path": "1"
    },
    "1194": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1196": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1197": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ADD",
      "path": "1"
    },
    "1198": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1199": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5220,
        5224
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1200": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1202": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1203": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ADD",
      "path": "1"
    },
    "1204": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1205": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1207": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1208": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ADD",
      "path": "1"
    },
    "1209": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1210": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1211": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1212": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1213": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1214": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5279
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1215": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5244,
        5279
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1216": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5163
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1217": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5163
      ],
      "op": "AND",
      "path": "1"
    },
    "1218": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5163
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1219": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5179
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2E51DFD8"
    },
    "1224": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5179
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1225": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1227": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1228": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1229": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ADD",
      "path": "1"
    },
    "1230": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1231": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1232": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1233": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1234": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "SUB",
      "path": "1"
    },
    "1235": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ADD",
      "path": "1"
    },
    "1236": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1237": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5163
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1238": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1239": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1240": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1241": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1242": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1243": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E3"
    },
    "1246": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1247": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1249": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1250": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1251": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1252": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "POP",
      "path": "1"
    },
    "1253": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "GAS",
      "path": "1"
    },
    "1254": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1255": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1256": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1257": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1258": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F7"
    },
    "1261": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1262": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1263": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1265": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1266": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1267": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1268": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1270": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1271": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1272": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "POP",
      "path": "1"
    },
    "1273": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "POP",
      "path": "1"
    },
    "1274": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "POP",
      "path": "1"
    },
    "1275": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "POP",
      "path": "1"
    },
    "1276": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1278": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1279": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1280": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1282": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1283": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "LT",
      "path": "1"
    },
    "1284": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1285": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50D"
    },
    "1288": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1289": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1291": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1292": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1293": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1294": {
      "op": "POP"
    },
    "1295": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5240
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1296": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5279
      ],
      "op": "LT",
      "path": "1"
    },
    "1297": {
      "branch": 45,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5153,
        5279
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1298": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5145,
        5280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x51A"
    },
    "1301": {
      "branch": 45,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5145,
        5280
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1302": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5145,
        5280
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1304": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5145,
        5280
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1305": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5145,
        5280
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1306": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5145,
        5280
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1307": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x1"
    },
    "1309": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1310": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1312": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1313": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1314": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1315": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1317": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1318": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1319": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1320": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1322": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1323": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1324": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5402
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1325": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5411
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1326": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5411
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1327": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5413,
        5448
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1329": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5413,
        5448
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1330": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5413,
        5448
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1331": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5413,
        5448
      ],
      "op": "ADD",
      "path": "1"
    },
    "1332": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5413,
        5448
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1333": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1334": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1335": {
      "op": "PUSH4",
      "value": "0x21C08AD1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1342": {
      "op": "SHL"
    },
    "1343": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1344": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1351": {
      "op": "SHL"
    },
    "1352": {
      "op": "SUB"
    },
    "1353": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5411
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1354": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5411
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1355": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5381,
        5411
      ],
      "op": "AND",
      "path": "1"
    },
    "1356": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1358": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1359": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ADD",
      "path": "1"
    },
    "1360": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1361": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1363": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1364": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ADD",
      "path": "1"
    },
    "1365": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1366": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1367": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1368": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1369": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1371": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1372": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ADD",
      "path": "1"
    },
    "1373": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1374": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1375": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1376": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1377": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1378": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1379": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "AND",
      "path": "1"
    },
    "1380": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1381": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5380
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x438115A2"
    },
    "1386": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5380
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1387": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1389": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1390": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1391": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ADD",
      "path": "1"
    },
    "1392": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1393": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1394": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1395": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1396": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1397": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1398": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "SUB",
      "path": "1"
    },
    "1399": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ADD",
      "path": "1"
    },
    "1400": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1401": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1402": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5365
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1403": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1404": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1405": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1406": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1407": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1408": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x588"
    },
    "1411": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1412": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1414": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1415": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1416": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1417": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "POP",
      "path": "1"
    },
    "1418": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "GAS",
      "path": "1"
    },
    "1419": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "CALL",
      "path": "1"
    },
    "1420": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1421": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1422": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1423": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x59C"
    },
    "1426": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1427": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1428": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1430": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1431": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1432": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1433": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1435": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1436": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5355,
        5463
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x1"
    },
    "1441": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1442": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1444": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1445": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1446": {
      "op": "PUSH4",
      "value": "0xF90D7717"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1453": {
      "op": "SHL"
    },
    "1454": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1455": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1456": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1458": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1459": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "ADD",
      "path": "1"
    },
    "1460": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1461": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1462": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1463": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1464": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "op": "SUB"
    },
    "1473": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1474": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1475": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "AND",
      "path": "1"
    },
    "1476": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5557
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF90D7717"
    },
    "1483": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5557
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1484": {
      "op": "POP"
    },
    "1485": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1487": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1488": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1489": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "ADD",
      "path": "1"
    },
    "1490": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1491": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1493": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1494": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1495": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1496": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1497": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1498": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1499": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "SUB",
      "path": "1"
    },
    "1500": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "ADD",
      "path": "1"
    },
    "1501": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1502": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1504": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5535
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1505": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1506": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1507": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1508": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1509": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1510": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "1513": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1514": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1516": {
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1517": {
      "branch": 46,
      "fn": "clauseOption.recipientAccept",
      "offset": [
        5525,
        5571
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1518": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1519": {
      "fn": "clauseOption.startOption",
      "offset": [
        2307,
        2311
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1521": {
      "fn": "clauseOption.startOption",
      "offset": [
        2356,
        2383
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x1"
    },
    "1523": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2331
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1525": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1526": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1527": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1528": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1530": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1531": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1532": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1533": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1535": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1536": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2345
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1537": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1539": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2352
      ],
      "op": "ADD",
      "path": "1"
    },
    "1540": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2352
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1541": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2352
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1543": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2352
      ],
      "op": "AND",
      "path": "1"
    },
    "1544": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1546": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1547": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "GT",
      "path": "1"
    },
    "1548": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1549": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x612"
    },
    "1552": {
      "branch": 46,
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1553": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1554": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1555": {
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "EQ",
      "path": "1"
    },
    "1556": {
      "branch": 47,
      "fn": "clauseOption.startOption",
      "offset": [
        2324,
        2383
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1557": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64F"
    },
    "1560": {
      "branch": 47,
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1561": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1563": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1572": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1573": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1575": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "ADD",
      "path": "1"
    },
    "1576": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1577": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1578": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1580": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "ADD",
      "path": "1"
    },
    "1581": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1582": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1583": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "SUB",
      "path": "1"
    },
    "1584": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1585": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1586": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x51"
    },
    "1588": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1589": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1590": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1592": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "ADD",
      "path": "1"
    },
    "1593": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1594": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1E"
    },
    "1597": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x51"
    },
    "1599": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1600": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "1601": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1603": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "ADD",
      "path": "1"
    },
    "1604": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1605": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "POP",
      "path": "1"
    },
    "1606": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "POP",
      "path": "1"
    },
    "1607": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1609": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1610": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1611": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1612": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "SUB",
      "path": "1"
    },
    "1613": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1614": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1615": {
      "fn": "clauseOption.startOption",
      "offset": [
        2316,
        2469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1616": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2491
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x1"
    },
    "1618": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2491
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1619": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1621": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1622": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1623": {
      "op": "PUSH4",
      "value": "0x63857A7B"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1632": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1633": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1635": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1636": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ADD",
      "path": "1"
    },
    "1637": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1638": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1639": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1640": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1641": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1642": {
      "fn": "clauseOption.startOption",
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1643": {
      "fn": "clauseOption.startOption",
      "offset": [
        2527,
        2537
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "op": "SUB"
    },
    "1652": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2491
      ],
      "op": "AND",
      "path": "1"
    },
    "1653": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2491
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1654": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2509
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x63857A7B"
    },
    "1659": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2509
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1660": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1662": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1663": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1664": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ADD",
      "path": "1"
    },
    "1665": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1666": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1668": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1669": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1670": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1671": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1672": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1673": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "SUB",
      "path": "1"
    },
    "1674": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ADD",
      "path": "1"
    },
    "1675": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1676": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2491
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1677": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1678": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1679": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1680": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1681": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1682": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x69A"
    },
    "1685": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1686": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1688": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1689": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1690": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1691": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "POP",
      "path": "1"
    },
    "1692": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "GAS",
      "path": "1"
    },
    "1693": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1694": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1695": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1696": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1697": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6AE"
    },
    "1700": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1701": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1702": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1704": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1705": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1706": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1707": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1709": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1710": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1711": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "POP",
      "path": "1"
    },
    "1712": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "POP",
      "path": "1"
    },
    "1713": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "POP",
      "path": "1"
    },
    "1714": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "POP",
      "path": "1"
    },
    "1715": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1717": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1718": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1719": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1721": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1722": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "LT",
      "path": "1"
    },
    "1723": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1724": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C4"
    },
    "1727": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1728": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1730": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1731": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1732": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1733": {
      "op": "POP"
    },
    "1734": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2523
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "SUB"
    },
    "1743": {
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2537
      ],
      "op": "AND",
      "path": "1"
    },
    "1744": {
      "branch": 48,
      "fn": "clauseOption.startOption",
      "offset": [
        2481,
        2537
      ],
      "op": "EQ",
      "path": "1"
    },
    "1745": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70B"
    },
    "1748": {
      "branch": 48,
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1749": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1751": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1760": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1761": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1763": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1764": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1765": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1766": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1768": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1769": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1770": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1771": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "SUB",
      "path": "1"
    },
    "1772": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1773": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1774": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2A"
    },
    "1776": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1777": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1778": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1780": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1781": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1782": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2A"
    },
    "1785": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2A"
    },
    "1787": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1788": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "1789": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1791": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "ADD",
      "path": "1"
    },
    "1792": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1793": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1794": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "POP",
      "path": "1"
    },
    "1795": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1797": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1798": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1799": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1800": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "SUB",
      "path": "1"
    },
    "1801": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1802": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1803": {
      "fn": "clauseOption.startOption",
      "offset": [
        2473,
        2584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1804": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2606
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x1"
    },
    "1806": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2606
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1807": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1809": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1810": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1811": {
      "op": "PUSH4",
      "value": "0x76C657C9"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1818": {
      "op": "SHL"
    },
    "1819": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1820": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1821": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1823": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1824": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ADD",
      "path": "1"
    },
    "1825": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1826": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1827": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1828": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1829": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "op": "SUB"
    },
    "1838": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2606
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1839": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2606
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1840": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2606
      ],
      "op": "AND",
      "path": "1"
    },
    "1841": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2606
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1842": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2625
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x76C657C9"
    },
    "1847": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2625
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1848": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1850": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1851": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1852": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ADD",
      "path": "1"
    },
    "1853": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1854": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1856": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1857": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1858": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1859": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1860": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1861": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1862": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "SUB",
      "path": "1"
    },
    "1863": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ADD",
      "path": "1"
    },
    "1864": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1865": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2606
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1866": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1867": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1868": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1869": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1870": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1871": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x757"
    },
    "1874": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1875": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1877": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1878": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1879": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1880": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "POP",
      "path": "1"
    },
    "1881": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "GAS",
      "path": "1"
    },
    "1882": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1883": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1884": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1885": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1886": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76B"
    },
    "1889": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1890": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1891": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1893": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1894": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1895": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1896": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1898": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1899": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1900": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "POP",
      "path": "1"
    },
    "1901": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "POP",
      "path": "1"
    },
    "1902": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "POP",
      "path": "1"
    },
    "1903": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "POP",
      "path": "1"
    },
    "1904": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1906": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1907": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1908": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1910": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1911": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "LT",
      "path": "1"
    },
    "1912": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1913": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x781"
    },
    "1916": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1917": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1919": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1920": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1921": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1922": {
      "op": "POP"
    },
    "1923": {
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2639
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1924": {
      "branch": 49,
      "fn": "clauseOption.startOption",
      "offset": [
        2596,
        2644
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1925": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BF"
    },
    "1928": {
      "branch": 49,
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1929": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1931": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1932": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1938": {
      "op": "SHL"
    },
    "1939": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1940": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1941": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1943": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "ADD",
      "path": "1"
    },
    "1944": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1945": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1946": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1948": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "ADD",
      "path": "1"
    },
    "1949": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1950": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1951": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "SUB",
      "path": "1"
    },
    "1952": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1953": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1954": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x47"
    },
    "1956": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1957": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1958": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1960": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "ADD",
      "path": "1"
    },
    "1961": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1962": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE54"
    },
    "1965": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x47"
    },
    "1967": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1968": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "1969": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1971": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "ADD",
      "path": "1"
    },
    "1972": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1973": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "POP",
      "path": "1"
    },
    "1974": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "POP",
      "path": "1"
    },
    "1975": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1977": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1978": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1979": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1980": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "SUB",
      "path": "1"
    },
    "1981": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1982": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1983": {
      "fn": "clauseOption.startOption",
      "offset": [
        2588,
        2720
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1984": {
      "fn": "clauseOption.startOption",
      "offset": [
        2748,
        2749
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0x0"
    },
    "1986": {
      "fn": "clauseOption.startOption",
      "offset": [
        2732,
        2745
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1987": {
      "branch": 50,
      "fn": "clauseOption.startOption",
      "offset": [
        2732,
        2749
      ],
      "op": "GT",
      "path": "1"
    },
    "1988": {
      "fn": "clauseOption.startOption",
      "offset": [
        2724,
        2750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7CC"
    },
    "1991": {
      "branch": 50,
      "fn": "clauseOption.startOption",
      "offset": [
        2724,
        2750
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1992": {
      "fn": "clauseOption.startOption",
      "offset": [
        2724,
        2750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1994": {
      "fn": "clauseOption.startOption",
      "offset": [
        2724,
        2750
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1995": {
      "fn": "clauseOption.startOption",
      "offset": [
        2724,
        2750
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1996": {
      "fn": "clauseOption.startOption",
      "offset": [
        2724,
        2750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1997": {
      "fn": "clauseOption.startOption",
      "offset": [
        2776,
        2777
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0x0"
    },
    "1999": {
      "fn": "clauseOption.startOption",
      "offset": [
        2762,
        2773
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2000": {
      "branch": 51,
      "fn": "clauseOption.startOption",
      "offset": [
        2762,
        2777
      ],
      "op": "GT",
      "path": "1"
    },
    "2001": {
      "fn": "clauseOption.startOption",
      "offset": [
        2754,
        2778
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D9"
    },
    "2004": {
      "branch": 51,
      "fn": "clauseOption.startOption",
      "offset": [
        2754,
        2778
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2005": {
      "fn": "clauseOption.startOption",
      "offset": [
        2754,
        2778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2007": {
      "fn": "clauseOption.startOption",
      "offset": [
        2754,
        2778
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2008": {
      "fn": "clauseOption.startOption",
      "offset": [
        2754,
        2778
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2009": {
      "fn": "clauseOption.startOption",
      "offset": [
        2754,
        2778
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2010": {
      "fn": "clauseOption.startOption",
      "offset": [
        2801,
        2802
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x0"
    },
    "2012": {
      "fn": "clauseOption.startOption",
      "offset": [
        2790,
        2798
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2013": {
      "branch": 52,
      "fn": "clauseOption.startOption",
      "offset": [
        2790,
        2802
      ],
      "op": "GT",
      "path": "1"
    },
    "2014": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x818"
    },
    "2017": {
      "branch": 52,
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2018": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2020": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2027": {
      "op": "SHL"
    },
    "2028": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2029": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2030": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2032": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "ADD",
      "path": "1"
    },
    "2033": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2034": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2035": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2037": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "ADD",
      "path": "1"
    },
    "2038": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2039": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2040": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "SUB",
      "path": "1"
    },
    "2041": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2042": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2043": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x31"
    },
    "2045": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2046": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2047": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2049": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "ADD",
      "path": "1"
    },
    "2050": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2051": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEED"
    },
    "2054": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x31"
    },
    "2056": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2057": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2058": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2060": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "ADD",
      "path": "1"
    },
    "2061": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2062": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "POP",
      "path": "1"
    },
    "2063": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "POP",
      "path": "1"
    },
    "2064": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2066": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2067": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2068": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2069": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "SUB",
      "path": "1"
    },
    "2070": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2071": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2072": {
      "fn": "clauseOption.startOption",
      "offset": [
        2782,
        2856
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2073": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x2"
    },
    "2075": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2076": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2078": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2079": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2080": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2089": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "op": "SUB"
    },
    "2098": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2099": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2100": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "AND",
      "path": "1"
    },
    "2101": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2103": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2104": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ADD",
      "path": "1"
    },
    "2105": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2106": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2107": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2108": {
      "fn": "clauseOption.startOption",
      "offset": [
        2905,
        2932
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2109": {
      "fn": "clauseOption.startOption",
      "offset": [
        2905,
        2932
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2110": {
      "fn": "clauseOption.startOption",
      "offset": [
        2905,
        2932
      ],
      "op": "ADD",
      "path": "1"
    },
    "2111": {
      "fn": "clauseOption.startOption",
      "offset": [
        2905,
        2932
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2112": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2113": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2114": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2115": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "AND",
      "path": "1"
    },
    "2116": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2117": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2890
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "2122": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2890
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2123": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2125": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2126": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2127": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ADD",
      "path": "1"
    },
    "2128": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2129": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2131": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2132": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2133": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2134": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2135": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2136": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2137": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "SUB",
      "path": "1"
    },
    "2138": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ADD",
      "path": "1"
    },
    "2139": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2140": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2880
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2141": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2142": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2143": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2144": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2145": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2146": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86A"
    },
    "2149": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2150": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2152": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2153": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2154": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2155": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "POP",
      "path": "1"
    },
    "2156": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "GAS",
      "path": "1"
    },
    "2157": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2158": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2159": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2160": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2161": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x87E"
    },
    "2164": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2165": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2166": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2168": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2169": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2170": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2171": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2173": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2174": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2175": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "POP",
      "path": "1"
    },
    "2176": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "POP",
      "path": "1"
    },
    "2177": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "POP",
      "path": "1"
    },
    "2178": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "POP",
      "path": "1"
    },
    "2179": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2181": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2182": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2183": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2185": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2186": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "LT",
      "path": "1"
    },
    "2187": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2188": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x894"
    },
    "2191": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2192": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2194": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2195": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2196": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2901
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2199": {
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2932
      ],
      "op": "LT",
      "path": "1"
    },
    "2200": {
      "branch": 53,
      "fn": "clauseOption.startOption",
      "offset": [
        2868,
        2932
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2201": {
      "fn": "clauseOption.startOption",
      "offset": [
        2860,
        2933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A1"
    },
    "2204": {
      "branch": 53,
      "fn": "clauseOption.startOption",
      "offset": [
        2860,
        2933
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2205": {
      "fn": "clauseOption.startOption",
      "offset": [
        2860,
        2933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2207": {
      "fn": "clauseOption.startOption",
      "offset": [
        2860,
        2933
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2208": {
      "fn": "clauseOption.startOption",
      "offset": [
        2860,
        2933
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2209": {
      "fn": "clauseOption.startOption",
      "offset": [
        2860,
        2933
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2210": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x2"
    },
    "2212": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2213": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2215": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2216": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2217": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2226": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2233": {
      "op": "SHL"
    },
    "2234": {
      "op": "SUB"
    },
    "2235": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2236": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2237": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "AND",
      "path": "1"
    },
    "2238": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2240": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2241": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ADD",
      "path": "1"
    },
    "2242": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2243": {
      "fn": "clauseOption.startOption",
      "offset": [
        2987,
        2991
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2244": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2246": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2247": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ADD",
      "path": "1"
    },
    "2248": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2249": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2250": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2251": {
      "fn": "clauseOption.startOption",
      "offset": [
        2997,
        3008
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2252": {
      "fn": "clauseOption.startOption",
      "offset": [
        2997,
        3008
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2253": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2254": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2255": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2256": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "AND",
      "path": "1"
    },
    "2257": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2258": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2967
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "2263": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2967
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2264": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2266": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2267": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2268": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ADD",
      "path": "1"
    },
    "2269": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2270": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2272": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2273": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2274": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2275": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2276": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2277": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2278": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "SUB",
      "path": "1"
    },
    "2279": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ADD",
      "path": "1"
    },
    "2280": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2281": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2957
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2282": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2283": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2284": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2285": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2286": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2287": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F7"
    },
    "2290": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2291": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2293": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2294": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2295": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2296": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "POP",
      "path": "1"
    },
    "2297": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "GAS",
      "path": "1"
    },
    "2298": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2299": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2300": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2301": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2302": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x90B"
    },
    "2305": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2306": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2307": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2309": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2310": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2311": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2312": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2314": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2315": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2316": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "POP",
      "path": "1"
    },
    "2317": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "POP",
      "path": "1"
    },
    "2318": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "POP",
      "path": "1"
    },
    "2319": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "POP",
      "path": "1"
    },
    "2320": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2322": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2323": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2324": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2326": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2327": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "LT",
      "path": "1"
    },
    "2328": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2329": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x921"
    },
    "2332": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2333": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2335": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2336": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2337": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2338": {
      "op": "POP"
    },
    "2339": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        2993
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2340": {
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        3008
      ],
      "op": "LT",
      "path": "1"
    },
    "2341": {
      "branch": 54,
      "fn": "clauseOption.startOption",
      "offset": [
        2945,
        3008
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2342": {
      "fn": "clauseOption.startOption",
      "offset": [
        2937,
        3009
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92E"
    },
    "2345": {
      "branch": 54,
      "fn": "clauseOption.startOption",
      "offset": [
        2937,
        3009
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2346": {
      "fn": "clauseOption.startOption",
      "offset": [
        2937,
        3009
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2348": {
      "fn": "clauseOption.startOption",
      "offset": [
        2937,
        3009
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2349": {
      "fn": "clauseOption.startOption",
      "offset": [
        2937,
        3009
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2350": {
      "fn": "clauseOption.startOption",
      "offset": [
        2937,
        3009
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2351": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3021
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x0"
    },
    "2353": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2354": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2355": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2356": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2358": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2359": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2360": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2361": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2363": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2364": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3035
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2365": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2366": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2367": {
      "fn": "clauseOption.startOption",
      "offset": [
        3047,
        3057
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2374": {
      "op": "SHL"
    },
    "2375": {
      "op": "SUB"
    },
    "2376": {
      "op": "NOT"
    },
    "2377": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2378": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2379": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "AND",
      "path": "1"
    },
    "2380": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "OR",
      "path": "1"
    },
    "2381": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2382": {
      "fn": "clauseOption.startOption",
      "offset": [
        3014,
        3057
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2385": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3092
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 21
    },
    "2386": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3092
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2387": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3092
      ],
      "op": "ADD",
      "path": "1"
    },
    "2388": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2389": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2390": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2391": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2392": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "AND",
      "path": "1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "op": "SUB"
    },
    "2401": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2402": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "AND",
      "path": "1"
    },
    "2403": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "OR",
      "path": "1"
    },
    "2404": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2405": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2406": {
      "fn": "clauseOption.startOption",
      "offset": [
        3061,
        3104
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2407": {
      "fn": "clauseOption.startOption",
      "offset": [
        3114,
        3147
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x2"
    },
    "2409": {
      "fn": "clauseOption.startOption",
      "offset": [
        3114,
        3147
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2410": {
      "fn": "clauseOption.startOption",
      "offset": [
        3114,
        3147
      ],
      "op": "ADD",
      "path": "1"
    },
    "2411": {
      "fn": "clauseOption.startOption",
      "offset": [
        3114,
        3161
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2412": {
      "fn": "clauseOption.startOption",
      "offset": [
        3114,
        3161
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2413": {
      "fn": "clauseOption.startOption",
      "offset": [
        3114,
        3161
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2414": {
      "fn": "clauseOption.startOption",
      "offset": [
        3165,
        3200
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x3"
    },
    "2416": {
      "fn": "clauseOption.startOption",
      "offset": [
        3165,
        3200
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2417": {
      "fn": "clauseOption.startOption",
      "offset": [
        3165,
        3200
      ],
      "op": "ADD",
      "path": "1"
    },
    "2418": {
      "fn": "clauseOption.startOption",
      "offset": [
        3165,
        3216
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2419": {
      "fn": "clauseOption.startOption",
      "offset": [
        3165,
        3216
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2420": {
      "fn": "clauseOption.startOption",
      "offset": [
        3165,
        3216
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2421": {
      "fn": "clauseOption.startOption",
      "offset": [
        3276,
        3282
      ],
      "op": "PUSH3",
      "path": "1",
      "statement": 24,
      "value": "0x15180"
    },
    "2425": {
      "fn": "clauseOption.startOption",
      "offset": [
        3265,
        3282
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2426": {
      "fn": "clauseOption.startOption",
      "offset": [
        3265,
        3282
      ],
      "op": "MUL",
      "path": "1"
    },
    "2427": {
      "fn": "clauseOption.startOption",
      "offset": [
        3259,
        3262
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "2428": {
      "fn": "clauseOption.startOption",
      "offset": [
        3259,
        3282
      ],
      "op": "ADD",
      "path": "1"
    },
    "2429": {
      "fn": "clauseOption.startOption",
      "offset": [
        3220,
        3256
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2431": {
      "fn": "clauseOption.startOption",
      "offset": [
        3220,
        3256
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2432": {
      "fn": "clauseOption.startOption",
      "offset": [
        3220,
        3256
      ],
      "op": "ADD",
      "path": "1"
    },
    "2433": {
      "fn": "clauseOption.startOption",
      "offset": [
        3220,
        3282
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2434": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3314
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x5"
    },
    "2436": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3314
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2437": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3314
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2438": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3314
      ],
      "op": "ADD",
      "path": "1"
    },
    "2439": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3344
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2440": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3344
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2443": {
      "op": "NOT"
    },
    "2444": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3344
      ],
      "op": "AND",
      "path": "1"
    },
    "2445": {
      "op": "DUP3"
    },
    "2446": {
      "op": "DUP1"
    },
    "2447": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3344
      ],
      "op": "MUL",
      "path": "1"
    },
    "2448": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3344
      ],
      "op": "OR",
      "path": "1"
    },
    "2449": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3344
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2450": {
      "fn": "clauseOption.startOption",
      "offset": [
        3286,
        3344
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3481
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x1"
    },
    "2454": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3481
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2455": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2457": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2458": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2459": {
      "op": "PUSH4",
      "value": "0x5CA3BFB"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "2466": {
      "op": "SHL"
    },
    "2467": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2468": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2469": {
      "fn": "clauseOption.startOption",
      "offset": [
        3498,
        3508
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2470": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2472": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2473": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ADD",
      "path": "1"
    },
    "2474": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2475": {
      "fn": "clauseOption.startOption",
      "offset": [
        3518,
        3522
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2476": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2478": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2479": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ADD",
      "path": "1"
    },
    "2480": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2481": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2483": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2484": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ADD",
      "path": "1"
    },
    "2485": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2486": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2487": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2488": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2489": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2490": {
      "fn": "clauseOption.startOption",
      "offset": [
        3542,
        3555
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2491": {
      "fn": "clauseOption.startOption",
      "offset": [
        3542,
        3555
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "op": "SUB"
    },
    "2500": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3481
      ],
      "op": "AND",
      "path": "1"
    },
    "2501": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3481
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2502": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3497
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2E51DFD8"
    },
    "2507": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3497
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2508": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2510": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2511": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2512": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ADD",
      "path": "1"
    },
    "2513": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2514": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2516": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2517": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2518": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2519": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2520": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2521": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "SUB",
      "path": "1"
    },
    "2522": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ADD",
      "path": "1"
    },
    "2523": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2524": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3481
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2525": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2526": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2527": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2528": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2529": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2530": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9EA"
    },
    "2533": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2534": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2536": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2537": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2538": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2539": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "POP",
      "path": "1"
    },
    "2540": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "GAS",
      "path": "1"
    },
    "2541": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2542": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2543": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2544": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2545": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9FE"
    },
    "2548": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2549": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2550": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2552": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2553": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2554": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2555": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2557": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2558": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2559": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "POP",
      "path": "1"
    },
    "2560": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "POP",
      "path": "1"
    },
    "2561": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "POP",
      "path": "1"
    },
    "2562": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "POP",
      "path": "1"
    },
    "2563": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2565": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2566": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2567": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2569": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2570": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "LT",
      "path": "1"
    },
    "2571": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2572": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA14"
    },
    "2575": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2576": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2578": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2579": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2580": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2581": {
      "op": "POP"
    },
    "2582": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3538
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2583": {
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3555
      ],
      "op": "LT",
      "path": "1"
    },
    "2584": {
      "branch": 55,
      "fn": "clauseOption.startOption",
      "offset": [
        3471,
        3555
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2585": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA53"
    },
    "2588": {
      "branch": 55,
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2589": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2591": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2598": {
      "op": "SHL"
    },
    "2599": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2600": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2601": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2603": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "ADD",
      "path": "1"
    },
    "2604": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2605": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2606": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2608": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "ADD",
      "path": "1"
    },
    "2609": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2610": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2611": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "SUB",
      "path": "1"
    },
    "2612": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2613": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2614": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5C"
    },
    "2616": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2617": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2618": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2620": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "ADD",
      "path": "1"
    },
    "2621": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2622": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF6F"
    },
    "2625": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5C"
    },
    "2627": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2628": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2629": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2631": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "ADD",
      "path": "1"
    },
    "2632": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2633": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "POP",
      "path": "1"
    },
    "2634": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "POP",
      "path": "1"
    },
    "2635": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2637": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2638": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2639": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2640": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "SUB",
      "path": "1"
    },
    "2641": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2642": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2643": {
      "fn": "clauseOption.startOption",
      "offset": [
        3463,
        3652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2644": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4124
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x1"
    },
    "2646": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4124
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2647": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2649": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2650": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2651": {
      "op": "PUSH4",
      "value": "0x68AA16FF"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2660": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "op": "SUB"
    },
    "2669": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2670": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2671": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "AND",
      "path": "1"
    },
    "2672": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2674": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2675": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ADD",
      "path": "1"
    },
    "2676": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2677": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2679": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2680": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ADD",
      "path": "1"
    },
    "2681": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2682": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2683": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2684": {
      "fn": "clauseOption.startOption",
      "offset": [
        3923,
        3926
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "2685": {
      "fn": "clauseOption.startOption",
      "offset": [
        3940,
        3946
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x15180"
    },
    "2689": {
      "fn": "clauseOption.startOption",
      "offset": [
        3929,
        3946
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2690": {
      "fn": "clauseOption.startOption",
      "offset": [
        3929,
        3946
      ],
      "op": "MUL",
      "path": "1"
    },
    "2691": {
      "fn": "clauseOption.startOption",
      "offset": [
        3923,
        3946
      ],
      "op": "ADD",
      "path": "1"
    },
    "2692": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2694": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2695": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ADD",
      "path": "1"
    },
    "2696": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2697": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2698": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2699": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2701": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2702": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ADD",
      "path": "1"
    },
    "2703": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2704": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2705": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2706": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2707": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2708": {
      "fn": "clauseOption.startOption",
      "offset": [
        3923,
        3946
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2709": {
      "fn": "clauseOption.startOption",
      "offset": [
        3923,
        3946
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2710": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4124
      ],
      "op": "AND",
      "path": "1"
    },
    "2711": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4124
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2712": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4141
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x68AA16FF"
    },
    "2717": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4141
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2718": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x84"
    },
    "2720": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2721": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2722": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ADD",
      "path": "1"
    },
    "2723": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2724": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2726": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2727": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2728": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2729": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2730": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2731": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2732": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SUB",
      "path": "1"
    },
    "2733": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ADD",
      "path": "1"
    },
    "2734": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2735": {
      "fn": "clauseOption.startOption",
      "offset": [
        3905,
        3920
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2737": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4124
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2738": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2739": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2740": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2741": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2742": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2743": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xABF"
    },
    "2746": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2747": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2749": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2750": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2751": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2752": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "POP",
      "path": "1"
    },
    "2753": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "GAS",
      "path": "1"
    },
    "2754": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "CALL",
      "path": "1"
    },
    "2755": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2756": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2757": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2758": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD3"
    },
    "2761": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2762": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2763": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2765": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2766": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2767": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2768": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2770": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2771": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2772": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "POP",
      "path": "1"
    },
    "2773": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "POP",
      "path": "1"
    },
    "2774": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "POP",
      "path": "1"
    },
    "2775": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "POP",
      "path": "1"
    },
    "2776": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2778": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2779": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2780": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2782": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2783": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "LT",
      "path": "1"
    },
    "2784": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2785": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE9"
    },
    "2788": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2789": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2791": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2792": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2793": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "op": "POP"
    },
    "2796": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x2"
    },
    "2798": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2799": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2801": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2802": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2803": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2810": {
      "op": "SHL"
    },
    "2811": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2812": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2822": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2823": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "AND",
      "path": "1"
    },
    "2824": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2826": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2827": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ADD",
      "path": "1"
    },
    "2828": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2829": {
      "fn": "clauseOption.startOption",
      "offset": [
        4283,
        4293
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2830": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2832": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2833": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ADD",
      "path": "1"
    },
    "2834": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2835": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2837": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2838": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ADD",
      "path": "1"
    },
    "2839": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2840": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2841": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2842": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2843": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2844": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2845": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2846": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2847": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "AND",
      "path": "1"
    },
    "2848": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2849": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4271
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "2854": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4271
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2855": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2857": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2858": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2859": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ADD",
      "path": "1"
    },
    "2860": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2861": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2863": {
      "fn": "clauseOption.startOption",
      "offset": [
        4114,
        4190
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2864": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2865": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2866": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2867": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2868": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "SUB",
      "path": "1"
    },
    "2869": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ADD",
      "path": "1"
    },
    "2870": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2871": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2873": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4258
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2874": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2875": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "2876": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2877": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2878": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2879": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB47"
    },
    "2882": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2883": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2885": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2886": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2887": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2888": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "POP",
      "path": "1"
    },
    "2889": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "GAS",
      "path": "1"
    },
    "2890": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "CALL",
      "path": "1"
    },
    "2891": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2892": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2893": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2894": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB5B"
    },
    "2897": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2898": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2899": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2901": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2902": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2903": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2904": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2906": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2907": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2908": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "POP",
      "path": "1"
    },
    "2909": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "POP",
      "path": "1"
    },
    "2910": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "POP",
      "path": "1"
    },
    "2911": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "POP",
      "path": "1"
    },
    "2912": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2914": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2915": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2916": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2918": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2919": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "LT",
      "path": "1"
    },
    "2920": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2921": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB71"
    },
    "2924": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2925": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2927": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2928": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2929": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "op": "POP"
    },
    "2932": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x40"
    },
    "2934": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2935": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2936": {
      "fn": "clauseOption.startOption",
      "offset": [
        4452,
        4456
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2937": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2938": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2939": {
      "fn": "clauseOption.startOption",
      "offset": [
        4246,
        4307
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2941": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2942": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "ADD",
      "path": "1"
    },
    "2943": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2944": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2945": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2946": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2947": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2948": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "ADD",
      "path": "1"
    },
    "2949": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2950": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2951": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2952": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2954": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2955": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "ADD",
      "path": "1"
    },
    "2956": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2957": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2958": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2959": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2961": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2962": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "ADD",
      "path": "1"
    },
    "2963": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2964": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2965": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2966": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2967": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2974": {
      "op": "SHL"
    },
    "2975": {
      "op": "SUB"
    },
    "2976": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2977": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "AND",
      "path": "1"
    },
    "2978": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2979": {
      "fn": "clauseOption.startOption",
      "offset": [
        4421,
        4431
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2980": {
      "fn": "clauseOption.startOption",
      "offset": [
        4421,
        4431
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2981": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xD2B44AEB51C25F153082768C524FB7002726EA22630322EF25E116D2A0BDAD81"
    },
    "3014": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3015": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3016": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3017": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SUB",
      "path": "1"
    },
    "3018": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3020": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "ADD",
      "path": "1"
    },
    "3021": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3022": {
      "fn": "clauseOption.startOption",
      "offset": [
        4409,
        4509
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3023": {
      "op": "POP"
    },
    "3024": {
      "fn": "clauseOption.startOption",
      "offset": [
        4520,
        4524
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x1"
    },
    "3026": {
      "fn": "clauseOption.startOption",
      "offset": [
        4520,
        4524
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "3027": {
      "fn": "clauseOption.startOption",
      "offset": [
        2167,
        4528
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "op": "POP"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "op": "POP"
    },
    "3033": {
      "op": "POP"
    },
    "3034": {
      "fn": "clauseOption.startOption",
      "jump": "o",
      "offset": [
        2167,
        4528
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3035": {
      "offset": [
        543,
        591
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3036": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3038": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3040": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3041": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3042": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3043": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3044": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3045": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3046": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3048": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3049": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3050": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3051": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3052": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3054": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3055": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3056": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3057": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3059": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3060": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3061": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3062": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3064": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3065": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3066": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3067": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3069": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3070": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3071": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3072": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3074": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3075": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3076": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "ADD",
      "path": "1"
    },
    "3077": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "op": "SUB"
    },
    "3086": {
      "offset": [
        543,
        591
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3087": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3088": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "AND",
      "path": "1"
    },
    "3089": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3090": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3091": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3092": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3093": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "AND",
      "path": "1"
    },
    "3094": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3095": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3096": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3097": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3098": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3099": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3101": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "AND",
      "path": "1"
    },
    "3102": {
      "fn": "clauseOption.startOption",
      "offset": [
        543,
        591
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3103": {
      "fn": "clauseOption.startOption",
      "jump": "o",
      "offset": [
        543,
        591
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3104": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5718,
        6303
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3105": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5779,
        5783
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3107": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 31
    },
    "3108": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3109": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3110": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3112": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3113": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3114": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3115": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3117": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3118": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5831
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3119": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3121": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5841
      ],
      "op": "ADD",
      "path": "1"
    },
    "3122": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5841
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3129": {
      "op": "SHL"
    },
    "3130": {
      "op": "SUB"
    },
    "3131": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5810,
        5841
      ],
      "op": "AND",
      "path": "1"
    },
    "3132": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5796,
        5806
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3133": {
      "branch": 56,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5796,
        5841
      ],
      "op": "EQ",
      "path": "1"
    },
    "3134": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5788,
        5842
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC46"
    },
    "3137": {
      "branch": 56,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5788,
        5842
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3138": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5788,
        5842
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3140": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5788,
        5842
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3141": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5788,
        5842
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3142": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5788,
        5842
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3143": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5868
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x0"
    },
    "3145": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3146": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3147": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3148": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3150": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3151": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3152": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3153": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3155": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3156": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5882
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3157": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3159": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5897
      ],
      "op": "ADD",
      "path": "1"
    },
    "3160": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5861,
        5897
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3161": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5854,
        5857
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "3162": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5854,
        5897
      ],
      "op": "GT",
      "path": "1"
    },
    "3163": {
      "branch": 57,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5854,
        5897
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3164": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5846,
        5898
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC64"
    },
    "3167": {
      "branch": 57,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5846,
        5898
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3168": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5846,
        5898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3170": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5846,
        5898
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3171": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5846,
        5898
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3172": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5846,
        5898
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3173": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5942,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x1"
    },
    "3175": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5917
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3177": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3178": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3179": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3180": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3182": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3183": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3184": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3185": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3187": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3188": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5931
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3189": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3191": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5938
      ],
      "op": "ADD",
      "path": "1"
    },
    "3192": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5938
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3193": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5938
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3195": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5938
      ],
      "op": "AND",
      "path": "1"
    },
    "3196": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3198": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3199": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "GT",
      "path": "1"
    },
    "3200": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3201": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC86"
    },
    "3204": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3205": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "INVALID",
      "path": "1"
    },
    "3206": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3207": {
      "branch": 58,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5910,
        5969
      ],
      "op": "EQ",
      "path": "1"
    },
    "3208": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5902,
        5970
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC90"
    },
    "3211": {
      "branch": 58,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5902,
        5970
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3212": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5902,
        5970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3214": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5902,
        5970
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3215": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5902,
        5970
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3216": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5902,
        5970
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3217": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        5992
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0x1"
    },
    "3219": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        5992
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3220": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3222": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3223": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3224": {
      "op": "PUSH4",
      "value": "0x76C657C9"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3233": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3234": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3236": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3237": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ADD",
      "path": "1"
    },
    "3238": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3239": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3240": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3241": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3242": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3249": {
      "op": "SHL"
    },
    "3250": {
      "op": "SUB"
    },
    "3251": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        5992
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3252": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        5992
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3253": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        5992
      ],
      "op": "AND",
      "path": "1"
    },
    "3254": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        5992
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3255": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6011
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x76C657C9"
    },
    "3260": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6011
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3261": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3263": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3264": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3265": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ADD",
      "path": "1"
    },
    "3266": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3267": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3269": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3270": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3271": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3272": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3273": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3274": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3275": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "SUB",
      "path": "1"
    },
    "3276": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ADD",
      "path": "1"
    },
    "3277": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3278": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        5992
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3279": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3280": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3281": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3282": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3283": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3284": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDC"
    },
    "3287": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3288": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3290": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3291": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3292": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3293": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "POP",
      "path": "1"
    },
    "3294": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "GAS",
      "path": "1"
    },
    "3295": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "3296": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3297": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3298": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3299": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF0"
    },
    "3302": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3303": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3304": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3306": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3307": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3308": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3309": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3311": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3312": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3313": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "POP",
      "path": "1"
    },
    "3314": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "POP",
      "path": "1"
    },
    "3315": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "POP",
      "path": "1"
    },
    "3316": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "POP",
      "path": "1"
    },
    "3317": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3319": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3320": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3321": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3323": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3324": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "LT",
      "path": "1"
    },
    "3325": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3326": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD06"
    },
    "3329": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3330": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3332": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3333": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3334": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3335": {
      "op": "POP"
    },
    "3336": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6025
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3337": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6029,
        6030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3339": {
      "branch": 59,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5982,
        6030
      ],
      "op": "EQ",
      "path": "1"
    },
    "3340": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD46"
    },
    "3343": {
      "branch": 59,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3344": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3346": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3355": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3356": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3358": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "ADD",
      "path": "1"
    },
    "3359": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3360": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3361": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3363": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "ADD",
      "path": "1"
    },
    "3364": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3365": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3366": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "SUB",
      "path": "1"
    },
    "3367": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3368": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3369": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x52"
    },
    "3371": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3372": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3373": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3375": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "ADD",
      "path": "1"
    },
    "3376": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3377": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9B"
    },
    "3380": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x52"
    },
    "3382": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3383": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "3384": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3386": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "ADD",
      "path": "1"
    },
    "3387": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3388": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "POP",
      "path": "1"
    },
    "3389": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "POP",
      "path": "1"
    },
    "3390": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3392": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3393": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3394": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3395": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "SUB",
      "path": "1"
    },
    "3396": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3397": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3398": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        5974,
        6117
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3399": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0x1"
    },
    "3401": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3402": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3404": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3405": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3406": {
      "op": "PUSH4",
      "value": "0xF90D7717"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3413": {
      "op": "SHL"
    },
    "3414": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3415": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3416": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3418": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3419": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "ADD",
      "path": "1"
    },
    "3420": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3421": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3422": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3423": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3424": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3431": {
      "op": "SHL"
    },
    "3432": {
      "op": "SUB"
    },
    "3433": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3434": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3435": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "AND",
      "path": "1"
    },
    "3436": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3437": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6208
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF90D7717"
    },
    "3442": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6208
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3443": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3445": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3446": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3447": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "ADD",
      "path": "1"
    },
    "3448": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3449": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3451": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3452": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3453": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3454": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3455": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3456": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3457": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "SUB",
      "path": "1"
    },
    "3458": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "ADD",
      "path": "1"
    },
    "3459": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3460": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3462": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6186
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3463": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3464": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3465": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3466": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3467": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3468": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26B"
    },
    "3471": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3472": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3474": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3475": {
      "branch": 60,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6176,
        6222
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3476": {
      "offset": [
        676,
        702
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3477": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3479": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3486": {
      "op": "SHL"
    },
    "3487": {
      "op": "SUB"
    },
    "3488": {
      "offset": [
        676,
        702
      ],
      "op": "AND",
      "path": "1"
    },
    "3489": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        676,
        702
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3490": {
      "fn": "clauseOption.recipientDeny",
      "jump": "o",
      "offset": [
        676,
        702
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3491": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6711,
        6794
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3492": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6776
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x1"
    },
    "3494": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6776
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3495": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3497": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3498": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3499": {
      "op": "PUSH4",
      "value": "0xCA1A35CF"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3506": {
      "op": "SHL"
    },
    "3507": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3508": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3509": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3510": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3511": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6747,
        6754
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3513": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6747,
        6754
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6776
      ],
      "op": "AND",
      "path": "1"
    },
    "3523": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6776
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3524": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6788
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xCA1A35CF"
    },
    "3529": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6788
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3530": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3532": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3533": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3534": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "ADD",
      "path": "1"
    },
    "3535": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3536": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3538": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3539": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3540": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3541": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3542": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3543": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SUB",
      "path": "1"
    },
    "3544": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "ADD",
      "path": "1"
    },
    "3545": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3546": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6747,
        6754
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3547": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6776
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3548": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3549": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3550": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3551": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3552": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3553": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE9"
    },
    "3556": {
      "branch": 60,
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3557": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3559": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3560": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3561": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3562": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "POP",
      "path": "1"
    },
    "3563": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "GAS",
      "path": "1"
    },
    "3564": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "CALL",
      "path": "1"
    },
    "3565": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3566": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3567": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3568": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDFD"
    },
    "3571": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3572": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3573": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3575": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3576": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3577": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3578": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3580": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3581": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3582": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "POP",
      "path": "1"
    },
    "3583": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "POP",
      "path": "1"
    },
    "3584": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "POP",
      "path": "1"
    },
    "3585": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "POP",
      "path": "1"
    },
    "3586": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3588": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3589": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3590": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3592": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3593": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "LT",
      "path": "1"
    },
    "3594": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3595": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE13"
    },
    "3598": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3599": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3601": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3602": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3603": {
      "fn": "clauseOption.recipientDeny",
      "offset": [
        6766,
        6790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3604": {
      "op": "POP"
    },
    "3605": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3606": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6766,
        6790
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        6711,
        6794
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3609": {
      "fn": "clauseOption.isOrigin",
      "jump": "o",
      "offset": [
        6711,
        6794
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3610": {
      "offset": [
        595,
        621
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3611": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        595,
        621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3613": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        595,
        621
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3620": {
      "op": "SHL"
    },
    "3621": {
      "op": "SUB"
    },
    "3622": {
      "offset": [
        595,
        621
      ],
      "op": "AND",
      "path": "1"
    },
    "3623": {
      "fn": "clauseOption.isOrigin",
      "offset": [
        595,
        621
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3624": {
      "fn": "clauseOption.isOrigin",
      "jump": "o",
      "offset": [
        595,
        621
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "8d82f3e6e278c8ff99c09b59b759a82ebf39ed72",
  "source": "pragma solidity ^0.6.0;\n\nimport \"interfaces/my_IERC20.sol\";\nimport \"interfaces/my_IERC1400.sol\";\n\ncontract clauseOption {\n\n\t// d\u00c3\u00a9claration des diff\u00c3\u00a9rents \u00c3\u00a9tats d'une option\n\tenum optionStates {\n\t\tSTATUS_UNUSED,  // par d\u00c3\u00a9faut : 0\n\t\tSTATUS_PENDING,  \n\t\tSTATUS_CLOSED \n\t}\n\n\t// Represents an option parameters\n    struct OptionRight {\n\t\taddress promisor;\n\t\taddress recipient;\n        uint256 priceOption;\n\t\tuint256 priceExercise;\n\t\tuint256 expirationDate;\n\t\toptionStates status;\n    }\n\n    // Mapping from partition UID to Option\n    mapping ( uint256 => OptionRight) public options;\n\n\tIERC1400 public tokenStock;   // token qui repr\u00c3\u00a9sente la partition (ERC1410)\n\tIERC20 public tokenPayment;   // token qui repr\u00c3\u00a9sente le coin (ERC20)\n\n\t//address public recipient;     // le b\u00c3\u00a9n\u00c3\u00a9ficiaire (buyer)\n\t//address public promisor;  // le promettant (seller)\n\t//uint256 public priceExercise;  // prix de l'exercice (au moins la valeur de la partition)\n\t//uint256 public priceOption;    // prix \u00c3\u00a0 payer par le b\u00c3\u00a9n\u00c3\u00a9ficiaire pour le droit d'option\n\t//uint256 public expirationDate; // date apr\u00c3\u00a8s laquelle le b\u00c3\u00a9n\u00c3\u00a9ficiaire ne peut plus exercer son droit d'option\n\n\t \n\tconstructor(address _tokenStockAddress, address _tokenPaymentAddress) public {\n\t    require(_tokenStockAddress != address(0));\n\t\trequire(_tokenPaymentAddress != address(0));\n\n\t\ttokenStock = IERC1400(_tokenStockAddress);\n\t\ttokenPayment = IERC20(_tokenPaymentAddress);\n\t}\n\n\n\t//------------------------------------------------------------\n\t// Option right events\n\t//------------------------------------------------------------\n\n\tevent StartOption(address indexed _promisor, address indexed _recipient, address escrow, uint256 _partitionUid, uint256 _priceExercise, uint256 _priceOption, uint256 _expirationDate);\n\t//event Opened(address indexed _recipient, uint256 _priceOption);\n\t//event Closed(address indexed _promisor, uint256 _amountPayment);\n\n\n\t//------------------------------------------------------------\n\t// Option right functions\n\t//------------------------------------------------------------\n\n\t// The promisor initiate the Option Exercise on a partition he owns\n\n\tfunction startOption(address recipient, uint256 partitionUid, uint256 priceExercise, uint256 priceOption, uint256 duration) public returns (bool){\n\t\trequire(options[partitionUid].status != optionStates.STATUS_PENDING, \"Une partition peut \u00c3\u00aatre l'objet de plusieurs options mais pas simultan\u00c3\u00a9ment\");\n\t\trequire(tokenStock.getPartitionOwner(partitionUid) == msg.sender, \"Seul le promettant peut initier une option\");\n\t\trequire(tokenStock.getPartitionStatus(partitionUid) == 0, \"la partition cible de l'option doit \u00c3\u00aatre active - STATUS_ACTIVE is 0\");\n\t\trequire(priceExercise > 0);\n\t\trequire(priceOption > 0);\n\t\trequire(duration > 0, \"la dur\u00c3\u00a9e d'une option est exprim\u00c3\u00a9e en jours\");\n\t\trequire(tokenPayment.balanceOf(recipient) >= priceOption + priceExercise);\n\t\trequire(tokenPayment.allowance(recipient, address(this)) >= priceOption);\n\n\t\toptions[partitionUid].promisor = msg.sender;\n\t\toptions[partitionUid].recipient = recipient;\n        options[partitionUid].priceOption = priceOption;\n\t\toptions[partitionUid].priceExercise = priceExercise;\n\t\toptions[partitionUid].expirationDate = now + duration * 1 days;\n\t\toptions[partitionUid].status = optionStates.STATUS_PENDING;\n\n\t\t// promisor send previously a transaction to ERC1400 to approve EscrowAccount on partitionUid for priceExercice\n\t\trequire(tokenStock.allowanceEscrow(msg.sender, address(this), partitionUid) >= priceExercise, \"le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition\");\n\n\t\t// Transfer partitions[partitionUid].owner vers sequestre (address(this)) sur contract ERC1400\n\t\t// changement status partition en CONFINED (pas de chgt de owner)\n\t\t// mise \u00c3\u00a0 jour de la variable mapping escrows (fait sur le contract ERC1400)\t\n\t\tuint256 endDate = now + duration * 1 days;\n\t\t//tokenStock.confinePartition(msg.sender, recipient, partitionUid, endDate, priceExercise);\n\t\t// the promisor is the origin (msg.sender) of the transactions call\n\t\ttokenStock.confinePartition(recipient, partitionUid, endDate, priceExercise);\n\n\t\t// Transfer du priceOption sur le contract ERC20\n\t\ttokenPayment.transferFrom(recipient, msg.sender, priceOption);\n\t\t// recipient doit avoir mis une allowance auparavant et avoir une balanceOf > priceOption\n\n\t\temit StartOption(msg.sender, recipient, address(this), partitionUid, priceExercise, priceOption, endDate);\n\t\treturn true;\n\t}\n\n\n\t// The recipient accepts during the option exercice duration\n\n\tfunction recipientAccept(uint256 partitionUid) public returns (bool){\n\t\trequire(msg.sender == options[partitionUid].recipient);\n\t\trequire(tokenPayment.balanceOf(msg.sender) >= options[partitionUid].priceExercise);\n\t\trequire(now <= options[partitionUid].expirationDate);\n\t\trequire(options[partitionUid].status == optionStates.STATUS_PENDING);\n\t\trequire(tokenStock.getPartitionStatus(partitionUid) == 1, \"la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1\");\n\n\t\t// Transfer de la partition au co\u00c3\u00bbt de priceExercise\n\t\trequire(tokenStock.allowanceEscrow(options[partitionUid].promisor, address(this), partitionUid) >= options[partitionUid].priceExercise);\n\t\t// the recipient is the origin (msg.sender) of the transactions call\n\t\ttokenStock.escrowTransfer(options[partitionUid].promisor, options[partitionUid].priceExercise, partitionUid);\n\n\t\t//tokenStock.stopOptionExercise(partitionUid);\n\t\trequire(tokenStock.stopOptionByRecipient(partitionUid));\n\t\toptions[partitionUid].status = optionStates.STATUS_CLOSED;\n\t\treturn true;\n\t}\n\n\n\t// The recipient denies during the option exercice duration\n\n\tfunction recipientDeny(uint256 partitionUid) public returns (bool){\n\t\trequire(msg.sender == options[partitionUid].recipient);\n\t\trequire(now <= options[partitionUid].expirationDate);\n\t\trequire(options[partitionUid].status == optionStates.STATUS_PENDING);\n\t\trequire(tokenStock.getPartitionStatus(partitionUid) == 1, \"la partition cible de l'option doit \u00c3\u00aatre en s\u00c3\u00a9questre - STATUS_CONFINED is 1\");\n\n\t\t// lev\u00c3\u00a9e du s\u00c3\u00a9questre de la partition\n\t\trequire(tokenStock.stopOptionByRecipient(partitionUid));\n\t\toptions[partitionUid].status = optionStates.STATUS_CLOSED;\n\t\treturn true;\n\t}\n\n\n\t// The promisor stop the option exercice after the expiration date\n\n\tfunction stopOption(uint256 partitionUid) public returns (bool){\n\t\trequire(msg.sender == options[partitionUid].promisor);\n\t\trequire(now > options[partitionUid].expirationDate);\n\n\t\trequire(tokenStock.stopOptionByPromisor(partitionUid));\n\t\toptions[partitionUid].status = optionStates.STATUS_CLOSED;\n\t\treturn true;\n\t}\n\n\t// Help to debug\n\tfunction isOrigin() public returns (address){\n\t\treturn tokenStock.whoIsOrigin();\n\t}\n}\n\n",
  "sourceMap": "98:6698:1:-:0;;;1193:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1193:269:1;;;;;;;-1:-1:-1;;;;;1285:32:1;;1277:41;;;;;;-1:-1:-1;;;;;1330:34:1;;1322:43;;;;;;1370:10;:41;;-1:-1:-1;;;;;1370:41:1;;;-1:-1:-1;;;;;;1370:41:1;;;;;;;1415:12;:43;;;;;;;;;;;98:6698;;;;;;",
  "sourcePath": "contracts/clause_option.sol",
  "type": "contract"
}