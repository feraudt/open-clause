{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContractAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isControl",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "ApprovalEscrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "ControllerRedemption",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "ControllerTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "EscrowExplicitTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "EscrowTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "TransferByPartition",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "allowanceEscrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "approveEscrow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "balanceByPartition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyPartition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceExercise",
          "type": "uint256"
        }
      ],
      "name": "confinePartition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "confined",
      "outputs": [
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceExercise",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "controllerRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "controllerTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "deconfinePartition",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "escrowExplicitTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "escrowTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getHolderNbuid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "getPartitionAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "getPartitionOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "getPartitionStatus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getUid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "holders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nbUid",
          "type": "uint256"
        },
        {
          "internalType": "enum ERC1400.holderStates",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isControllable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "partitions",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "creation",
          "type": "uint256"
        },
        {
          "internalType": "enum ERC1400.partitionStates",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "partitionsOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "registerController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        }
      ],
      "name": "registerEscrow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "revokeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "sellPartition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "stopOptionByPromisor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        }
      ],
      "name": "stopOptionByRecipient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "partitionUid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "transferByPartition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uids",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whoIsOrigin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "interfaces/my_IERC20.sol",
    "5": "contracts/my_ERC1400.sol"
  },
  "ast": {
    "absolutePath": "contracts/my_ERC1400.sol",
    "exportedSymbols": {
      "ERC1400": [
        3466
      ]
    },
    "id": 3467,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1903,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "interfaces/my_IERC20.sol",
        "file": "interfaces/my_IERC20.sol",
        "id": 1904,
        "nodeType": "ImportDirective",
        "scope": 3467,
        "sourceUnit": 4601,
        "src": "25:34:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3466,
        "linearizedBaseContracts": [
          3466
        ],
        "name": "ERC1400",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1906,
            "mutability": "mutable",
            "name": "creator",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "83:15:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1905,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "83:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1908,
            "mutability": "mutable",
            "name": "isControl",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "123:14:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1907,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "123:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1910,
            "mutability": "mutable",
            "name": "tokenContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "140:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4600",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1909,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4600,
              "src": "140:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4600",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "ERC1400.partitionStates",
            "id": 1914,
            "members": [
              {
                "id": 1911,
                "name": "STATUS_ACTIVE",
                "nodeType": "EnumValue",
                "src": "223:13:5"
              },
              {
                "id": 1912,
                "name": "STATUS_CONFINED",
                "nodeType": "EnumValue",
                "src": "240:15:5"
              },
              {
                "id": 1913,
                "name": "STATUS_SOLD",
                "nodeType": "EnumValue",
                "src": "259:11:5"
              }
            ],
            "name": "partitionStates",
            "nodeType": "EnumDefinition",
            "src": "198:75:5"
          },
          {
            "canonicalName": "ERC1400.holderStates",
            "id": 1918,
            "members": [
              {
                "id": 1915,
                "name": "STATUS_HOLDER",
                "nodeType": "EnumValue",
                "src": "298:13:5"
              },
              {
                "id": 1916,
                "name": "STATUS_CONTROLLER",
                "nodeType": "EnumValue",
                "src": "315:17:5"
              },
              {
                "id": 1917,
                "name": "STATUS_ESCROW",
                "nodeType": "EnumValue",
                "src": "336:13:5"
              }
            ],
            "name": "holderStates",
            "nodeType": "EnumDefinition",
            "src": "276:76:5"
          },
          {
            "canonicalName": "ERC1400.Partition",
            "id": 1927,
            "members": [
              {
                "constant": false,
                "id": 1920,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1927,
                "src": "422:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1919,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "422:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1922,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1927,
                "src": "441:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1921,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1924,
                "mutability": "mutable",
                "name": "creation",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1927,
                "src": "459:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1923,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "459:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1926,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1927,
                "src": "502:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_partitionStates_$1914",
                  "typeString": "enum ERC1400.partitionStates"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1925,
                  "name": "partitionStates",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1914,
                  "src": "502:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_partitionStates_$1914",
                    "typeString": "enum ERC1400.partitionStates"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Partition",
            "nodeType": "StructDefinition",
            "scope": 3466,
            "src": "401:128:5",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC1400.Holder",
            "id": 1932,
            "members": [
              {
                "constant": false,
                "id": 1929,
                "mutability": "mutable",
                "name": "nbUid",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1932,
                "src": "587:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1928,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1931,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1932,
                "src": "604:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_holderStates_$1918",
                  "typeString": "enum ERC1400.holderStates"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1930,
                  "name": "holderStates",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1918,
                  "src": "604:12:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_holderStates_$1918",
                    "typeString": "enum ERC1400.holderStates"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Holder",
            "nodeType": "StructDefinition",
            "scope": 3466,
            "src": "569:58:5",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC1400.ConfinedPartition",
            "id": 1941,
            "members": [
              {
                "constant": false,
                "id": 1934,
                "mutability": "mutable",
                "name": "escrow",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1941,
                "src": "684:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1933,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "684:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1936,
                "mutability": "mutable",
                "name": "expirationDate",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1941,
                "src": "702:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1935,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "702:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1938,
                "mutability": "mutable",
                "name": "priceExercise",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1941,
                "src": "728:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1937,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "728:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1940,
                "mutability": "mutable",
                "name": "recipient",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1941,
                "src": "753:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1939,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "753:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ConfinedPartition",
            "nodeType": "StructDefinition",
            "scope": 3466,
            "src": "655:119:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1b52fd8e",
            "id": 1945,
            "mutability": "mutable",
            "name": "partitions",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "810:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
              "typeString": "mapping(uint256 => struct ERC1400.Partition)"
            },
            "typeName": {
              "id": 1944,
              "keyType": {
                "id": 1942,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "819:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "810:30:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                "typeString": "mapping(uint256 => struct ERC1400.Partition)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1943,
                "name": "Partition",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1927,
                "src": "830:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Partition_$1927_storage_ptr",
                  "typeString": "struct ERC1400.Partition"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfd889af",
            "id": 1951,
            "mutability": "mutable",
            "name": "uids",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "910:61:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 1950,
              "keyType": {
                "id": 1946,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "919:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "910:49:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 1949,
                "keyType": {
                  "id": 1947,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "939:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "930:28:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 1948,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "950:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18a5bbdc",
            "id": 1955,
            "mutability": "mutable",
            "name": "holders",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "1049:42:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
              "typeString": "mapping(address => struct ERC1400.Holder)"
            },
            "typeName": {
              "id": 1954,
              "keyType": {
                "id": 1952,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1058:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1049:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                "typeString": "mapping(address => struct ERC1400.Holder)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1953,
                "name": "Holder",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1932,
                "src": "1069:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Holder_$1932_storage_ptr",
                  "typeString": "struct ERC1400.Holder"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1005e262",
            "id": 1959,
            "mutability": "mutable",
            "name": "confined",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "1143:54:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
              "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition)"
            },
            "typeName": {
              "id": 1958,
              "keyType": {
                "id": 1956,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1152:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1143:38:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1957,
                "name": "ConfinedPartition",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1941,
                "src": "1163:17:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage_ptr",
                  "typeString": "struct ERC1400.ConfinedPartition"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "1269:104:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1966,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1906,
                      "src": "1274:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1967,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1284:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1284:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1274:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:20:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1971,
                      "name": "isControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1908,
                      "src": "1298:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1972,
                      "name": "_isControl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1963,
                      "src": "1310:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1298:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1974,
                  "nodeType": "ExpressionStatement",
                  "src": "1298:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1975,
                      "name": "tokenContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1910,
                      "src": "1324:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1977,
                          "name": "_tokenContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1961,
                          "src": "1347:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1976,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4600,
                        "src": "1340:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4600_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1340:29:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1324:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4600",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:45:5"
                }
              ]
            },
            "documentation": null,
            "id": 1982,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "_tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1982,
                  "src": "1214:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "_isControl",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1982,
                  "src": "1245:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1213:48:5"
            },
            "returnParameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:5"
            },
            "scope": 3466,
            "src": "1202:171:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1994,
              "nodeType": "Block",
              "src": "1490:50:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1989,
                        "name": "partitions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "1505:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                          "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                        }
                      },
                      "id": 1991,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1990,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "1516:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1505:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Partition_$1927_storage",
                        "typeString": "struct ERC1400.Partition storage ref"
                      }
                    },
                    "id": 1992,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "owner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1920,
                    "src": "1505:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1988,
                  "id": 1993,
                  "nodeType": "Return",
                  "src": "1498:37:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "63857a7b",
            "id": 1995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPartitionOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1984,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1995,
                  "src": "1438:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1437:22:5"
            },
            "returnParameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1995,
                  "src": "1481:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1480:9:5"
            },
            "scope": 3466,
            "src": "1411:129:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2010,
              "nodeType": "Block",
              "src": "1621:57:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2004,
                            "name": "partitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "1641:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                              "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                            }
                          },
                          "id": 2006,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2005,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1997,
                            "src": "1652:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1641:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Partition_$1927_storage",
                            "typeString": "struct ERC1400.Partition storage ref"
                          }
                        },
                        "id": 2007,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1926,
                        "src": "1641:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_partitionStates_$1914",
                          "typeString": "enum ERC1400.partitionStates"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_partitionStates_$1914",
                          "typeString": "enum ERC1400.partitionStates"
                        }
                      ],
                      "id": 2003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1636:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2002,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1636:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2001,
                  "id": 2009,
                  "nodeType": "Return",
                  "src": "1629:44:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "76c657c9",
            "id": 2011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPartitionStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1997,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2011,
                  "src": "1572:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1571:22:5"
            },
            "returnParameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2011,
                  "src": "1615:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1614:6:5"
            },
            "scope": 3466,
            "src": "1544:134:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2026,
              "nodeType": "Block",
              "src": "1758:57:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2020,
                            "name": "partitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "1778:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                              "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                            }
                          },
                          "id": 2022,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2021,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "1789:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1778:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Partition_$1927_storage",
                            "typeString": "struct ERC1400.Partition storage ref"
                          }
                        },
                        "id": 2023,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1922,
                        "src": "1778:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1773:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2018,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1773:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2017,
                  "id": 2025,
                  "nodeType": "Return",
                  "src": "1766:44:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ea3d0196",
            "id": 2027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPartitionAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2027,
                  "src": "1709:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1708:22:5"
            },
            "returnParameters": {
              "id": 2017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2016,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2027,
                  "src": "1752:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2015,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1751:6:5"
            },
            "scope": 3466,
            "src": "1681:134:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2042,
              "nodeType": "Block",
              "src": "1883:45:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2036,
                            "name": "holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "1903:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                              "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                            }
                          },
                          "id": 2038,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2037,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "1911:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1903:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Holder_$1932_storage",
                            "typeString": "struct ERC1400.Holder storage ref"
                          }
                        },
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nbUid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1929,
                        "src": "1903:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1898:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2034,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1898:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1898:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2033,
                  "id": 2041,
                  "nodeType": "Return",
                  "src": "1891:32:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3d10e825",
            "id": 2043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHolderNbuid",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2029,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2043,
                  "src": "1842:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1841:14:5"
            },
            "returnParameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2043,
                  "src": "1877:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1876:6:5"
            },
            "scope": 3466,
            "src": "1818:110:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2061,
              "nodeType": "Block",
              "src": "2004:43:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2054,
                            "name": "uids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1951,
                            "src": "2024:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(uint256 => uint256))"
                            }
                          },
                          "id": 2056,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2055,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2045,
                            "src": "2029:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2024:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 2058,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2057,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2047,
                          "src": "2035:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2024:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2019:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 2052,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2019:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2051,
                  "id": 2060,
                  "nodeType": "Return",
                  "src": "2012:30:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e7810d09",
            "id": 2062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUid",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2045,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2062,
                  "src": "1948:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2047,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2062,
                  "src": "1962:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1947:26:5"
            },
            "returnParameters": {
              "id": 2051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2050,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2062,
                  "src": "1995:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1994:9:5"
            },
            "scope": 3466,
            "src": "1932:115:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2072,
            "name": "TransferByPartition",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2064,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2072,
                  "src": "2261:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2066,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2072,
                  "src": "2283:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2068,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2072,
                  "src": "2299:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2070,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2072,
                  "src": "2317:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2317:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2259:73:5"
            },
            "src": "2234:99:5"
          },
          {
            "body": {
              "id": 2123,
              "nodeType": "Block",
              "src": "2610:181:5",
              "statements": [
                {
                  "assignments": [
                    2084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2084,
                      "mutability": "mutable",
                      "name": "uidList",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2123,
                      "src": "2614:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2614:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2083,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2614:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2093,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2088,
                            "name": "holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "2655:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                              "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                            }
                          },
                          "id": 2090,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2089,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2074,
                            "src": "2663:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2655:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Holder_$1932_storage",
                            "typeString": "struct ERC1400.Holder storage ref"
                          }
                        },
                        "id": 2091,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nbUid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1929,
                        "src": "2655:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2641:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2645:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2086,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2645:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 2092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2641:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2614:62:5"
                },
                {
                  "body": {
                    "id": 2119,
                    "nodeType": "Block",
                    "src": "2727:39:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2107,
                              "name": "uidList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2084,
                              "src": "2732:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2109,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2108,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2095,
                              "src": "2740:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2732:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2110,
                                "name": "uids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1951,
                                "src": "2745:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 2112,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2111,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2074,
                                "src": "2750:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2745:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2116,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2113,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2095,
                                "src": "2757:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2759:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2757:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2745:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2732:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2118,
                        "nodeType": "ExpressionStatement",
                        "src": "2732:29:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2098,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2095,
                      "src": "2696:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2099,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "2700:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2101,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2100,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2074,
                          "src": "2708:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2700:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "2700:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2696:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2120,
                  "initializationExpression": {
                    "assignments": [
                      2095
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2095,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2120,
                        "src": "2684:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2094,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2684:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2097,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2693:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2684:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2722:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2104,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2095,
                        "src": "2722:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2106,
                    "nodeType": "ExpressionStatement",
                    "src": "2722:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2680:86:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2121,
                    "name": "uidList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2084,
                    "src": "2779:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 2079,
                  "id": 2122,
                  "nodeType": "Return",
                  "src": "2772:14:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "740ab8f4",
            "id": 2124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "partitionsOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2074,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2124,
                  "src": "2552:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:15:5"
            },
            "returnParameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2124,
                  "src": "2591:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2076,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2591:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2077,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2591:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2589:20:5"
            },
            "scope": 3466,
            "src": "2530:261:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2136,
              "nodeType": "Block",
              "src": "2877:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2131,
                        "name": "partitions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1945,
                        "src": "2888:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                          "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                        }
                      },
                      "id": 2133,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2132,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2126,
                        "src": "2899:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2888:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Partition_$1927_storage",
                        "typeString": "struct ERC1400.Partition storage ref"
                      }
                    },
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1922,
                    "src": "2888:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2130,
                  "id": 2135,
                  "nodeType": "Return",
                  "src": "2881:38:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4fb5ea9d",
            "id": 2137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceByPartition",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2126,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2137,
                  "src": "2822:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2821:22:5"
            },
            "returnParameters": {
              "id": 2130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2129,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2137,
                  "src": "2868:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2866:11:5"
            },
            "scope": 3466,
            "src": "2794:129:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2189,
              "nodeType": "Block",
              "src": "2993:183:5",
              "statements": [
                {
                  "assignments": [
                    2145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2145,
                      "mutability": "mutable",
                      "name": "total",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2189,
                      "src": "2997:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2997:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2147,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3013:1:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2997:17:5"
                },
                {
                  "body": {
                    "id": 2185,
                    "nodeType": "Block",
                    "src": "3065:91:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2161,
                                "name": "uids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1951,
                                "src": "3073:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 2163,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2162,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2139,
                                "src": "3078:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3073:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2167,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2164,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2149,
                                "src": "3085:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3087:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "3085:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3073:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3093:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3073:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2184,
                        "nodeType": "IfStatement",
                        "src": "3070:82:5",
                        "trueBody": {
                          "id": 2183,
                          "nodeType": "Block",
                          "src": "3096:56:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2170,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2145,
                                  "src": "3102:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2171,
                                      "name": "partitions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1945,
                                      "src": "3111:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                        "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                                      }
                                    },
                                    "id": 2179,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 2172,
                                          "name": "uids",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1951,
                                          "src": "3122:4:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                                          }
                                        },
                                        "id": 2174,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 2173,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2139,
                                          "src": "3127:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3122:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 2178,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2177,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 2175,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2149,
                                          "src": "3134:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31",
                                          "id": 2176,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3136:1:5",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "3134:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3122:16:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3111:28:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Partition_$1927_storage",
                                      "typeString": "struct ERC1400.Partition storage ref"
                                    }
                                  },
                                  "id": 2180,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1922,
                                  "src": "3111:35:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3102:44:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2182,
                              "nodeType": "ExpressionStatement",
                              "src": "3102:44:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2152,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2149,
                      "src": "3034:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2153,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "3038:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2155,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2154,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2139,
                          "src": "3046:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3038:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2156,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "3038:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3034:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2186,
                  "initializationExpression": {
                    "assignments": [
                      2149
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2149,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2186,
                        "src": "3022:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2148,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3022:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2151,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3031:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3022:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3060:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2158,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2149,
                        "src": "3060:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2160,
                    "nodeType": "ExpressionStatement",
                    "src": "3060:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3018:138:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2187,
                    "name": "total",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2145,
                    "src": "3167:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2143,
                  "id": 2188,
                  "nodeType": "Return",
                  "src": "3160:12:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "70a08231",
            "id": 2190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2139,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2190,
                  "src": "2945:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2945:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2944:15:5"
            },
            "returnParameters": {
              "id": 2143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2190,
                  "src": "2984:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2984:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2982:11:5"
            },
            "scope": 3466,
            "src": "2926:250:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2221,
              "nodeType": "Block",
              "src": "3245:149:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2197,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3281:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3281:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2195,
                              "name": "tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "3257:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4521,
                            "src": "3257:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3257:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3296:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3257:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3249:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3249:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2203,
                  "nodeType": "ExpressionStatement",
                  "src": "3249:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2204,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "3302:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2207,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3310:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3310:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3302:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "3302:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3330:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3302:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2211,
                  "nodeType": "ExpressionStatement",
                  "src": "3302:29:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2212,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "3335:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2215,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3343:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3343:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3335:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1931,
                      "src": "3335:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2217,
                        "name": "holderStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "3364:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                          "typeString": "type(enum ERC1400.holderStates)"
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_HOLDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3364:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "src": "3335:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_holderStates_$1918",
                      "typeString": "enum ERC1400.holderStates"
                    }
                  },
                  "id": 2220,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:55:5"
                }
              ]
            },
            "documentation": {
              "id": 2191,
              "nodeType": "StructuredDocumentation",
              "src": "3179:31:5",
              "text": " Register an account*"
            },
            "functionSelector": "d9f226e9",
            "id": 2222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAccount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3236:2:5"
            },
            "returnParameters": {
              "id": 2193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3245:0:5"
            },
            "scope": 3466,
            "src": "3212:182:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2316,
              "nodeType": "Block",
              "src": "3584:512:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2231,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "3596:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3612:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3596:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3588:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3588:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "3588:26:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2237,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "3626:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2240,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2238,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3634:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3634:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3626:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "3626:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2242,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "3656:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3656:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "3626:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3618:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2246,
                  "nodeType": "ExpressionStatement",
                  "src": "3618:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2250,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3719:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3719:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2248,
                              "name": "tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "3695:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4521,
                            "src": "3695:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3695:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2253,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2227,
                          "src": "3734:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3695:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3687:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3687:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2256,
                  "nodeType": "ExpressionStatement",
                  "src": "3687:54:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2260,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3776:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3776:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2262,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2227,
                            "src": "3788:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2258,
                            "name": "tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "3753:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4600",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "burnFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4590,
                          "src": "3753:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3753:42:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3745:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2265,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2266,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "3801:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 2268,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2267,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "3812:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3801:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 2269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1920,
                      "src": "3801:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2270,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3834:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3834:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3801:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2273,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2274,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "3848:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 2276,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2275,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "3859:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3848:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 2277,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1922,
                      "src": "3848:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2278,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2227,
                      "src": "3882:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3848:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2280,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:40:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2281,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "3892:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 2283,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2282,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "3903:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3892:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 2284,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "creation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1924,
                      "src": "3892:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2285,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "3928:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3892:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2287,
                  "nodeType": "ExpressionStatement",
                  "src": "3892:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2288,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "3935:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 2290,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2289,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "3946:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3935:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 2291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "3935:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2292,
                        "name": "partitionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "3969:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                          "typeString": "type(enum ERC1400.partitionStates)"
                        }
                      },
                      "id": 2293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3969:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "src": "3935:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_partitionStates_$1914",
                      "typeString": "enum ERC1400.partitionStates"
                    }
                  },
                  "id": 2295,
                  "nodeType": "ExpressionStatement",
                  "src": "3935:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4003:27:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2296,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "4003:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2299,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2297,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4011:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4011:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4003:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2300,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "4003:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2302,
                  "nodeType": "ExpressionStatement",
                  "src": "4003:27:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2303,
                          "name": "uids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "4034:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 2311,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2304,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4039:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4039:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4034:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2312,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2306,
                            "name": "holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "4051:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                              "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                            }
                          },
                          "id": 2309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2307,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4059:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4059:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4051:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Holder_$1932_storage",
                            "typeString": "struct ERC1400.Holder storage ref"
                          }
                        },
                        "id": 2310,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nbUid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1929,
                        "src": "4051:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4034:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2313,
                      "name": "partitionUid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "4080:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4034:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2315,
                  "nodeType": "ExpressionStatement",
                  "src": "4034:58:5"
                }
              ]
            },
            "documentation": {
              "id": 2223,
              "nodeType": "StructuredDocumentation",
              "src": "3397:117:5",
              "text": " Buy a partition through TokenContract payment.\n Used in ERC20 standard\n @param partitionUid, amount"
            },
            "functionSelector": "19f46e81",
            "id": 2317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyPartition",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2317,
                  "src": "3539:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2227,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2317,
                  "src": "3561:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3537:40:5"
            },
            "returnParameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3584:0:5"
            },
            "scope": 3466,
            "src": "3516:580:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2414,
              "nodeType": "Block",
              "src": "4272:444:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2324,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4284:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4284:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2326,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "4298:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 2328,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2327,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2320,
                              "src": "4309:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4298:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "4298:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4284:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4276:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2332,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2336,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4364:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4364:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2338,
                                "name": "partitions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1945,
                                "src": "4376:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                                }
                              },
                              "id": 2340,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2339,
                                "name": "partitionUid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2320,
                                "src": "4387:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4376:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Partition_$1927_storage",
                                "typeString": "struct ERC1400.Partition storage ref"
                              }
                            },
                            "id": 2341,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1922,
                            "src": "4376:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2334,
                            "name": "tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "4341:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4600",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mintFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4599,
                          "src": "4341:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4341:67:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4333:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4333:76:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "4333:76:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2345,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "4414:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 2347,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2346,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2320,
                          "src": "4425:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4414:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 2348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1922,
                      "src": "4414:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4448:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4414:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2351,
                  "nodeType": "ExpressionStatement",
                  "src": "4414:35:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2352,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "4453:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 2354,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2353,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2320,
                          "src": "4464:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4453:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 2355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "4453:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2356,
                        "name": "partitionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "4487:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                          "typeString": "type(enum ERC1400.partitionStates)"
                        }
                      },
                      "id": 2357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_SOLD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4487:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "src": "4453:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_partitionStates_$1914",
                      "typeString": "enum ERC1400.partitionStates"
                    }
                  },
                  "id": 2359,
                  "nodeType": "ExpressionStatement",
                  "src": "4453:61:5"
                },
                {
                  "assignments": [
                    2361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2361,
                      "mutability": "mutable",
                      "name": "j",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2414,
                      "src": "4519:6:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2360,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4519:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2362,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4519:6:5"
                },
                {
                  "body": {
                    "id": 2401,
                    "nodeType": "Block",
                    "src": "4581:103:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2377,
                                "name": "uids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1951,
                                "src": "4589:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 2380,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2378,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4594:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4594:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4589:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2384,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2381,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2364,
                                "src": "4606:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4608:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4606:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4589:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2385,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2320,
                            "src": "4614:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4589:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2400,
                        "nodeType": "IfStatement",
                        "src": "4586:94:5",
                        "trueBody": {
                          "id": 2399,
                          "nodeType": "Block",
                          "src": "4628:52:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2387,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2361,
                                  "src": "4634:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2388,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2364,
                                  "src": "4638:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4634:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2390,
                              "nodeType": "ExpressionStatement",
                              "src": "4634:5:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2391,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2364,
                                  "src": "4645:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2392,
                                      "name": "holders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1955,
                                      "src": "4649:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                        "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                                      }
                                    },
                                    "id": 2395,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2393,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "4657:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 2394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "4657:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4649:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Holder_$1932_storage",
                                      "typeString": "struct ERC1400.Holder storage ref"
                                    }
                                  },
                                  "id": 2396,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nbUid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1929,
                                  "src": "4649:25:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4645:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2398,
                              "nodeType": "ExpressionStatement",
                              "src": "4645:29:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2367,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2364,
                      "src": "4545:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2368,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "4549:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2371,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2369,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4557:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4557:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4549:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2372,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "4549:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4545:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2402,
                  "initializationExpression": {
                    "assignments": [
                      2364
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2364,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2402,
                        "src": "4533:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2363,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4533:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2366,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4542:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4533:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4576:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2374,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2364,
                        "src": "4576:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2376,
                    "nodeType": "ExpressionStatement",
                    "src": "4576:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4529:155:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2403,
                          "name": "uids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "4687:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 2409,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2404,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4692:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4692:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4687:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2410,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2406,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2361,
                          "src": "4704:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4706:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4704:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4687:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4711:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4687:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "4687:25:5"
                }
              ]
            },
            "documentation": {
              "id": 2318,
              "nodeType": "StructuredDocumentation",
              "src": "4099:118:5",
              "text": " Sell a partition through TokenContract payment.\n Used in ERC20 standard\n @param partitionUid, amount"
            },
            "functionSelector": "4f30d687",
            "id": 2415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellPartition",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2320,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2415,
                  "src": "4243:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2319,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4243:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4241:24:5"
            },
            "returnParameters": {
              "id": 2322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4272:0:5"
            },
            "scope": 3466,
            "src": "4219:497:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2451,
              "nodeType": "Block",
              "src": "4943:880:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2426,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "4955:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2428,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2427,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2420,
                              "src": "4963:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4955:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2429,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "4955:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2430,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "4983:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4983:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "4955:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4947:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4947:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "4947:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2436,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "5037:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2437,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5051:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5051:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2439,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "5063:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2440,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2422,
                        "src": "5073:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2435,
                      "name": "_transfertByPartition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2578,
                      "src": "5015:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5015:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "5015:64:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2444,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "5777:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2445,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5791:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5791:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2447,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "5803:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2448,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2422,
                        "src": "5813:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2443,
                      "name": "TransferByPartition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2072,
                      "src": "5757:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5757:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2450,
                  "nodeType": "EmitStatement",
                  "src": "5752:67:5"
                }
              ]
            },
            "documentation": {
              "id": 2416,
              "nodeType": "StructuredDocumentation",
              "src": "4719:132:5",
              "text": " Transfer a partition through TokenContract payment.\n Used in ERC20 standard\n @param partitionUid, receiver account"
            },
            "functionSelector": "04a87a4f",
            "id": 2452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferByPartition",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2452,
                  "src": "4882:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4882:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2420,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2452,
                  "src": "4904:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4904:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2422,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2452,
                  "src": "4922:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4922:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4881:55:5"
            },
            "returnParameters": {
              "id": 2424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4943:0:5"
            },
            "scope": 3466,
            "src": "4853:970:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2577,
              "nodeType": "Block",
              "src": "5946:561:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2466,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2458,
                              "src": "5982:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2464,
                              "name": "tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "5958:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4521,
                            "src": "5958:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5958:33:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2468,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2460,
                          "src": "5995:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5958:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5950:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5950:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2471,
                  "nodeType": "ExpressionStatement",
                  "src": "5950:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2473,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "6013:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2474,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "6023:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 2476,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2475,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2454,
                              "src": "6034:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6023:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 2477,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "6023:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6013:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6005:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2480,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2484,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2458,
                              "src": "6090:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2487,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6108:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC1400_$3466",
                                    "typeString": "contract ERC1400"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC1400_$3466",
                                    "typeString": "contract ERC1400"
                                  }
                                ],
                                "id": 2486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6100:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2485,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6100:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6100:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2482,
                              "name": "tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "6066:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4541,
                            "src": "6066:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6066:48:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2490,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2460,
                          "src": "6118:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6066:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6058:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6058:66:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2493,
                  "nodeType": "ExpressionStatement",
                  "src": "6058:66:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2497,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2458,
                            "src": "6163:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2498,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2456,
                            "src": "6173:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2499,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2460,
                            "src": "6181:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2495,
                            "name": "tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "6136:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4600",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4563,
                          "src": "6136:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6136:51:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6128:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6128:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2502,
                  "nodeType": "ExpressionStatement",
                  "src": "6128:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2503,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "6193:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 2505,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2504,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2454,
                          "src": "6204:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6193:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 2506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1920,
                      "src": "6193:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2507,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "6226:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6193:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2509,
                  "nodeType": "ExpressionStatement",
                  "src": "6193:41:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6238:25:5",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2510,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "6238:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2512,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2511,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2458,
                          "src": "6246:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6238:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2513,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "6238:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2515,
                  "nodeType": "ExpressionStatement",
                  "src": "6238:25:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2516,
                          "name": "uids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "6267:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 2522,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2517,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2458,
                          "src": "6272:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6267:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2523,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2518,
                            "name": "holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1955,
                            "src": "6282:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                              "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                            }
                          },
                          "id": 2520,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2519,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2458,
                            "src": "6290:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6282:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Holder_$1932_storage",
                            "typeString": "struct ERC1400.Holder storage ref"
                          }
                        },
                        "id": 2521,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nbUid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1929,
                        "src": "6282:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6267:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2524,
                      "name": "partitionUid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "6309:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6267:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2526,
                  "nodeType": "ExpressionStatement",
                  "src": "6267:54:5"
                },
                {
                  "assignments": [
                    2528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2528,
                      "mutability": "mutable",
                      "name": "j",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2577,
                      "src": "6326:6:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2527,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6326:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2529,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6326:6:5"
                },
                {
                  "body": {
                    "id": 2565,
                    "nodeType": "Block",
                    "src": "6384:95:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2543,
                                "name": "uids",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1951,
                                "src": "6392:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                                }
                              },
                              "id": 2545,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2544,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2456,
                                "src": "6397:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6392:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 2549,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2546,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2531,
                                "src": "6405:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 2547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6407:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6405:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6392:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2550,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2454,
                            "src": "6413:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6392:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2564,
                        "nodeType": "IfStatement",
                        "src": "6389:86:5",
                        "trueBody": {
                          "id": 2563,
                          "nodeType": "Block",
                          "src": "6427:48:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2552,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2528,
                                  "src": "6433:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 2553,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2531,
                                  "src": "6437:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6433:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2555,
                              "nodeType": "ExpressionStatement",
                              "src": "6433:5:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 2556,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2531,
                                  "src": "6444:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2557,
                                      "name": "holders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1955,
                                      "src": "6448:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                        "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                                      }
                                    },
                                    "id": 2559,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2558,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2456,
                                      "src": "6456:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6448:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Holder_$1932_storage",
                                      "typeString": "struct ERC1400.Holder storage ref"
                                    }
                                  },
                                  "id": 2560,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nbUid",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1929,
                                  "src": "6448:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6444:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2562,
                              "nodeType": "ExpressionStatement",
                              "src": "6444:25:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2534,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2531,
                      "src": "6352:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2535,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "6356:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2537,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2536,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "6364:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6356:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2538,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "6356:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6352:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2566,
                  "initializationExpression": {
                    "assignments": [
                      2531
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2531,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2566,
                        "src": "6340:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2530,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6340:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2533,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6349:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6340:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6379:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2540,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2531,
                        "src": "6379:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2542,
                    "nodeType": "ExpressionStatement",
                    "src": "6379:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6336:143:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2567,
                          "name": "uids",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "6482:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 2572,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2568,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2456,
                          "src": "6487:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6482:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2573,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2569,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2528,
                          "src": "6495:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 2570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6497:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6495:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6482:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6502:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6482:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2576,
                  "nodeType": "ExpressionStatement",
                  "src": "6482:21:5"
                }
              ]
            },
            "documentation": null,
            "id": 2578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfertByPartition",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2454,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2578,
                  "src": "5858:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5858:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2456,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2578,
                  "src": "5880:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5880:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2458,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2578,
                  "src": "5896:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5896:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2460,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2578,
                  "src": "5914:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5914:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5857:71:5"
            },
            "returnParameters": {
              "id": 2462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5946:0:5"
            },
            "scope": 3466,
            "src": "5827:680:5",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2590,
            "name": "ControllerTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2580,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2590,
                  "src": "6681:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6681:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2582,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2590,
                  "src": "6701:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2584,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2590,
                  "src": "6725:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6725:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2586,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2590,
                  "src": "6751:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6751:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2588,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2590,
                  "src": "6766:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6766:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6680:107:5"
            },
            "src": "6656:132:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2600,
            "name": "ControllerRedemption",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2592,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2600,
                  "src": "6821:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6821:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2594,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2600,
                  "src": "6841:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2596,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2600,
                  "src": "6865:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6865:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2598,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2600,
                  "src": "6880:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6880:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6820:81:5"
            },
            "src": "6794:108:5"
          },
          {
            "body": {
              "id": 2640,
              "nodeType": "Block",
              "src": "7147:224:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2607,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7159:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7159:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2609,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1906,
                          "src": "7173:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7159:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7151:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7151:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2612,
                  "nodeType": "ExpressionStatement",
                  "src": "7151:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2616,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2603,
                              "src": "7217:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2614,
                              "name": "tokenContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "7193:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$4600",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4521,
                            "src": "7193:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7193:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7232:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7193:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7185:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7185:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2621,
                  "nodeType": "ExpressionStatement",
                  "src": "7185:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2623,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "7246:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2625,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2624,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2603,
                              "src": "7254:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7246:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2626,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "7246:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2627,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "7276:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7276:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "7246:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7238:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7238:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2631,
                  "nodeType": "ExpressionStatement",
                  "src": "7238:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2632,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "7308:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2634,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2633,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2603,
                          "src": "7316:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7308:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2635,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1931,
                      "src": "7308:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2636,
                        "name": "holderStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "7337:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                          "typeString": "type(enum ERC1400.holderStates)"
                        }
                      },
                      "id": 2637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_CONTROLLER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7337:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "src": "7308:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_holderStates_$1918",
                      "typeString": "enum ERC1400.holderStates"
                    }
                  },
                  "id": 2639,
                  "nodeType": "ExpressionStatement",
                  "src": "7308:59:5"
                }
              ]
            },
            "documentation": {
              "id": 2601,
              "nodeType": "StructuredDocumentation",
              "src": "7057:33:5",
              "text": " Register a controller*"
            },
            "functionSelector": "d91ae8c2",
            "id": 2641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerController",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2603,
                  "mutability": "mutable",
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2641,
                  "src": "7121:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7121:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7119:21:5"
            },
            "returnParameters": {
              "id": 2605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7147:0:5"
            },
            "scope": 3466,
            "src": "7092:279:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2672,
              "nodeType": "Block",
              "src": "7460:171:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2648,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7472:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7472:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2650,
                          "name": "creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1906,
                          "src": "7486:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7472:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7464:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7464:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2653,
                  "nodeType": "ExpressionStatement",
                  "src": "7464:30:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2655,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "7506:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2657,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2656,
                              "name": "controller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2644,
                              "src": "7514:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7506:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2658,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "7506:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2659,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "7536:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_CONTROLLER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7536:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "7506:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7498:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7498:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2663,
                  "nodeType": "ExpressionStatement",
                  "src": "7498:69:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2664,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "7572:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2666,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2665,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2644,
                          "src": "7580:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7572:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2667,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1931,
                      "src": "7572:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2668,
                        "name": "holderStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "7601:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                          "typeString": "type(enum ERC1400.holderStates)"
                        }
                      },
                      "id": 2669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_HOLDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7601:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "src": "7572:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_holderStates_$1918",
                      "typeString": "enum ERC1400.holderStates"
                    }
                  },
                  "id": 2671,
                  "nodeType": "ExpressionStatement",
                  "src": "7572:55:5"
                }
              ]
            },
            "documentation": {
              "id": 2642,
              "nodeType": "StructuredDocumentation",
              "src": "7374:31:5",
              "text": " Revoke a controller*"
            },
            "functionSelector": "8b3e76fd",
            "id": 2673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeController",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "mutability": "mutable",
                  "name": "controller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2673,
                  "src": "7434:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7434:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7432:21:5"
            },
            "returnParameters": {
              "id": 2646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7460:0:5"
            },
            "scope": 3466,
            "src": "7407:224:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2680,
              "nodeType": "Block",
              "src": "7688:24:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2678,
                    "name": "isControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1908,
                    "src": "7699:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2677,
                  "id": 2679,
                  "nodeType": "Return",
                  "src": "7692:16:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4c783bf5",
            "id": 2681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isControllable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7657:2:5"
            },
            "returnParameters": {
              "id": 2677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2676,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2681,
                  "src": "7683:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2675,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7683:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7682:6:5"
            },
            "scope": 3466,
            "src": "7634:78:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2743,
              "nodeType": "Block",
              "src": "7806:1049:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2691,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "7818:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2694,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2692,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "7826:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 2693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7826:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7818:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2695,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "7818:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2696,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "7847:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_CONTROLLER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7847:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "7818:59:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7810:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7810:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2700,
                  "nodeType": "ExpressionStatement",
                  "src": "7810:68:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2702,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "7890:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2704,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2703,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2683,
                              "src": "7898:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7890:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2705,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "7890:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2706,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "7916:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7916:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "7890:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2701,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7882:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7882:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2710,
                  "nodeType": "ExpressionStatement",
                  "src": "7882:61:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2712,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "7955:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2714,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2713,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2685,
                              "src": "7963:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7955:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2715,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "7955:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2716,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "7983:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7983:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "7955:54:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7947:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7947:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2720,
                  "nodeType": "ExpressionStatement",
                  "src": "7947:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2722,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "8037:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2723,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2683,
                        "src": "8051:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2724,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2685,
                        "src": "8059:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2725,
                            "name": "partitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "8069:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                              "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                            }
                          },
                          "id": 2727,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2726,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2687,
                            "src": "8080:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8069:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Partition_$1927_storage",
                            "typeString": "struct ERC1400.Partition storage ref"
                          }
                        },
                        "id": 2728,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1922,
                        "src": "8069:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2721,
                      "name": "_transfertByPartition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2578,
                      "src": "8015:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 2729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8015:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2730,
                  "nodeType": "ExpressionStatement",
                  "src": "8015:86:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2732,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "8776:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 2733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8776:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2734,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2683,
                        "src": "8787:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2735,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2685,
                        "src": "8795:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2736,
                            "name": "partitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "8805:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                              "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                            }
                          },
                          "id": 2738,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2737,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2687,
                            "src": "8816:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8805:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Partition_$1927_storage",
                            "typeString": "struct ERC1400.Partition storage ref"
                          }
                        },
                        "id": 2739,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1922,
                        "src": "8805:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2740,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "8838:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2731,
                      "name": "ControllerTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2590,
                      "src": "8757:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 2741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8757:94:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2742,
                  "nodeType": "EmitStatement",
                  "src": "8752:99:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9b504387",
            "id": 2744,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "controllerTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2744,
                  "src": "7744:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7744:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2744,
                  "src": "7760:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7760:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2744,
                  "src": "7778:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7778:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7743:56:5"
            },
            "returnParameters": {
              "id": 2689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7806:0:5"
            },
            "scope": 3466,
            "src": "7716:1139:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2794,
              "nodeType": "Block",
              "src": "8929:987:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2752,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "8941:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2755,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2753,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "8949:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 2754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8949:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8941:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2756,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "8941:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2757,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "8970:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_CONTROLLER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8970:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "8941:59:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8933:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8933:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2761,
                  "nodeType": "ExpressionStatement",
                  "src": "8933:68:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2763,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "9013:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2765,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2764,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2746,
                              "src": "9021:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9013:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2766,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "9013:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2767,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "9039:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9039:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "9013:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9005:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9005:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "9005:61:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2773,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2748,
                        "src": "9093:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2774,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "9107:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2775,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "9115:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 2776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9115:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2777,
                            "name": "partitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "9126:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                              "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                            }
                          },
                          "id": 2779,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2778,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2748,
                            "src": "9137:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9126:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Partition_$1927_storage",
                            "typeString": "struct ERC1400.Partition storage ref"
                          }
                        },
                        "id": 2780,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1922,
                        "src": "9126:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2772,
                      "name": "_transfertByPartition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2578,
                      "src": "9071:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 2781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9071:87:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2782,
                  "nodeType": "ExpressionStatement",
                  "src": "9071:87:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2784,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "9847:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 2785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9847:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2786,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "9858:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2787,
                            "name": "partitions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "9866:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                              "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                            }
                          },
                          "id": 2789,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2788,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2748,
                            "src": "9877:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9866:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Partition_$1927_storage",
                            "typeString": "struct ERC1400.Partition storage ref"
                          }
                        },
                        "id": 2790,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1922,
                        "src": "9866:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2791,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2748,
                        "src": "9899:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2783,
                      "name": "ControllerRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2600,
                      "src": "9826:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9826:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2793,
                  "nodeType": "EmitStatement",
                  "src": "9821:91:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f76fac0e",
            "id": 2795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "controllerRedeem",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2746,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2795,
                  "src": "8885:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8885:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2795,
                  "src": "8901:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8901:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8884:38:5"
            },
            "returnParameters": {
              "id": 2750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8929:0:5"
            },
            "scope": 3466,
            "src": "8859:1057:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2805,
            "name": "ApprovalEscrow",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2797,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2805,
                  "src": "10061:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10061:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2805,
                  "src": "10076:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2798,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10076:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2801,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2805,
                  "src": "10092:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10092:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2803,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2805,
                  "src": "10114:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10114:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10060:68:5"
            },
            "src": "10040:89:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2817,
            "name": "EscrowTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2817,
                  "src": "10152:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10152:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2809,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2817,
                  "src": "10168:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10168:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2811,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2817,
                  "src": "10184:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10184:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2813,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2817,
                  "src": "10202:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10202:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2817,
                  "src": "10217:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10217:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10151:87:5"
            },
            "src": "10131:108:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2829,
            "name": "EscrowExplicitTransfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2819,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2829,
                  "src": "10270:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10270:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2821,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2829,
                  "src": "10286:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10286:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2823,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2829,
                  "src": "10302:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10302:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2825,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2829,
                  "src": "10321:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10321:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2827,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2829,
                  "src": "10336:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10336:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10269:88:5"
            },
            "src": "10241:117:5"
          },
          {
            "constant": false,
            "id": 2837,
            "mutability": "mutable",
            "name": "_allowanceEscrow",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3466,
            "src": "10491:95:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
            },
            "typeName": {
              "id": 2836,
              "keyType": {
                "id": 2830,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "10500:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "10491:70:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
              },
              "valueType": {
                "id": 2835,
                "keyType": {
                  "id": 2831,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "10520:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "10511:49:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(uint256 => uint256))"
                },
                "valueType": {
                  "id": 2834,
                  "keyType": {
                    "id": 2832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10540:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "10531:28:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueType": {
                    "id": 2833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10551:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2862,
              "nodeType": "Block",
              "src": "10742:103:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2845,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "10746:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2847,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2846,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2840,
                          "src": "10754:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10746:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2848,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nbUid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1929,
                      "src": "10746:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10770:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10746:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2851,
                  "nodeType": "ExpressionStatement",
                  "src": "10746:25:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2852,
                          "name": "holders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "10775:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                            "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                          }
                        },
                        "id": 2854,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2853,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2840,
                          "src": "10783:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10775:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Holder_$1932_storage",
                          "typeString": "struct ERC1400.Holder storage ref"
                        }
                      },
                      "id": 2855,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1931,
                      "src": "10775:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2856,
                        "name": "holderStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1918,
                        "src": "10800:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                          "typeString": "type(enum ERC1400.holderStates)"
                        }
                      },
                      "id": 2857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_ESCROW",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10800:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_holderStates_$1918",
                        "typeString": "enum ERC1400.holderStates"
                      }
                    },
                    "src": "10775:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_holderStates_$1918",
                      "typeString": "enum ERC1400.holderStates"
                    }
                  },
                  "id": 2859,
                  "nodeType": "ExpressionStatement",
                  "src": "10775:51:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10837:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2844,
                  "id": 2861,
                  "nodeType": "Return",
                  "src": "10830:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2838,
              "nodeType": "StructuredDocumentation",
              "src": "10590:89:5",
              "text": " Register an escrow address (this should be the caller smart contract address)*"
            },
            "functionSelector": "39d3ad77",
            "id": 2863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerEscrow",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2840,
                  "mutability": "mutable",
                  "name": "escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2863,
                  "src": "10705:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10705:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10704:16:5"
            },
            "returnParameters": {
              "id": 2844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2843,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2863,
                  "src": "10737:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10737:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10736:6:5"
            },
            "scope": 3466,
            "src": "10681:164:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2924,
              "nodeType": "Block",
              "src": "11016:295:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2876,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2866,
                          "src": "11030:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11048:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11040:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2877,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11040:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11040:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11030:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11022:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11022:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2883,
                  "nodeType": "ExpressionStatement",
                  "src": "11022:29:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2885,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2870,
                          "src": "11063:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2886,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "11072:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 2888,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2887,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "11083:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11072:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 2889,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "11072:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11063:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11055:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11055:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2892,
                  "nodeType": "ExpressionStatement",
                  "src": "11055:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2894,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11116:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11116:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2896,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "11130:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 2898,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2897,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2868,
                              "src": "11141:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11130:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 2899,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "11130:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11116:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11108:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11108:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2902,
                  "nodeType": "ExpressionStatement",
                  "src": "11108:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2903,
                            "name": "_allowanceEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2837,
                            "src": "11168:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 2908,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2904,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11185:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "11185:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11168:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 2909,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2906,
                          "name": "escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2866,
                          "src": "11197:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11168:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2910,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2907,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2868,
                        "src": "11205:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11168:50:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2911,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2870,
                      "src": "11221:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11168:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "11168:58:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2915,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11252:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11252:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2917,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2866,
                        "src": "11264:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2918,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2868,
                        "src": "11272:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2919,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2870,
                        "src": "11286:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2914,
                      "name": "ApprovalEscrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2805,
                      "src": "11237:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11237:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2921,
                  "nodeType": "EmitStatement",
                  "src": "11232:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11303:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2874,
                  "id": 2923,
                  "nodeType": "Return",
                  "src": "11296:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2864,
              "nodeType": "StructuredDocumentation",
              "src": "10848:69:5",
              "text": " Approve an escrow address for the transfer of a partition*"
            },
            "functionSelector": "08d4c858",
            "id": 2925,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveEscrow",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2866,
                  "mutability": "mutable",
                  "name": "escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2925,
                  "src": "10942:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10942:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2868,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2925,
                  "src": "10958:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10958:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2870,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2925,
                  "src": "10980:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10980:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10941:53:5"
            },
            "returnParameters": {
              "id": 2874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2873,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2925,
                  "src": "11011:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2872,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11011:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11010:6:5"
            },
            "scope": 3466,
            "src": "10919:392:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2945,
              "nodeType": "Block",
              "src": "11481:60:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2937,
                          "name": "_allowanceEscrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2837,
                          "src": "11492:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                            "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                          }
                        },
                        "id": 2939,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2938,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2928,
                          "src": "11509:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11492:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 2941,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2940,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2930,
                        "src": "11516:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11492:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2943,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2942,
                      "name": "partitionUid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2932,
                      "src": "11524:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11492:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2936,
                  "id": 2944,
                  "nodeType": "Return",
                  "src": "11485:52:5"
                }
              ]
            },
            "documentation": {
              "id": 2926,
              "nodeType": "StructuredDocumentation",
              "src": "11314:63:5",
              "text": " Allowance given to an escrow address on a partition*"
            },
            "functionSelector": "2e51dfd8",
            "id": 2946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowanceEscrow",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2928,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2946,
                  "src": "11404:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11404:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2930,
                  "mutability": "mutable",
                  "name": "escrow",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2946,
                  "src": "11419:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11419:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2932,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2946,
                  "src": "11435:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11435:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11403:53:5"
            },
            "returnParameters": {
              "id": 2936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2935,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2946,
                  "src": "11473:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11473:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11472:9:5"
            },
            "scope": 3466,
            "src": "11379:162:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2955,
              "nodeType": "Block",
              "src": "11643:24:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2952,
                      "name": "tx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -26,
                      "src": "11654:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_transaction",
                        "typeString": "tx"
                      }
                    },
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "origin",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "11654:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 2951,
                  "id": 2954,
                  "nodeType": "Return",
                  "src": "11647:16:5"
                }
              ]
            },
            "documentation": {
              "id": 2947,
              "nodeType": "StructuredDocumentation",
              "src": "11544:50:5",
              "text": " Get the message sender (help to debug)*"
            },
            "functionSelector": "ca1a35cf",
            "id": 2956,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whoIsOrigin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11616:2:5"
            },
            "returnParameters": {
              "id": 2951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2950,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2956,
                  "src": "11635:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11635:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11634:9:5"
            },
            "scope": 3466,
            "src": "11596:71:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3045,
              "nodeType": "Block",
              "src": "11867:601:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2971,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "11879:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 2972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11879:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2973,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "11892:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 2975,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2974,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2961,
                              "src": "11903:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11892:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "11892:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11879:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11871:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11871:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2979,
                  "nodeType": "ExpressionStatement",
                  "src": "11871:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 2988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2981,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "11935:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 2984,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2982,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11943:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11943:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11935:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 2985,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "11935:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2986,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "11965:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 2987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_ESCROW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11965:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "11935:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11927:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11927:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2990,
                  "nodeType": "ExpressionStatement",
                  "src": "11927:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2992,
                                "name": "_allowanceEscrow",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2837,
                                "src": "12004:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                                }
                              },
                              "id": 2995,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2993,
                                  "name": "tx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -26,
                                  "src": "12021:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_transaction",
                                    "typeString": "tx"
                                  }
                                },
                                "id": 2994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "12021:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12004:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 2998,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2996,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12032:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "12032:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12004:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 3000,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2999,
                            "name": "partitionUid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2961,
                            "src": "12044:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12004:53:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3001,
                          "name": "priceExercise",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2965,
                          "src": "12061:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12004:70:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6520636f6e74726163742064652073c383c2a97175657374726520646f697420c383c2aa747265206175746f726973c383c2a920c383c2a0206d6f646966696572206c6520737461747573206465206c6120706172746974696f6e",
                        "id": 3003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12076:94:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f915ff84e0920fc3abb1533a11b4b89de61816d4e0016f0481d6993cb33c7f4e",
                          "typeString": "literal_string \"le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition\""
                        },
                        "value": "le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f915ff84e0920fc3abb1533a11b4b89de61816d4e0016f0481d6993cb33c7f4e",
                          "typeString": "literal_string \"le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition\""
                        }
                      ],
                      "id": 2991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11996:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11996:175:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3005,
                  "nodeType": "ExpressionStatement",
                  "src": "11996:175:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3006,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "12176:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 3008,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3007,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2961,
                          "src": "12187:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12176:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 3009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "12176:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3010,
                        "name": "partitionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "12210:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                          "typeString": "type(enum ERC1400.partitionStates)"
                        }
                      },
                      "id": 3011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_CONFINED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12210:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "src": "12176:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_partitionStates_$1914",
                      "typeString": "enum ERC1400.partitionStates"
                    }
                  },
                  "id": 3013,
                  "nodeType": "ExpressionStatement",
                  "src": "12176:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3014,
                          "name": "confined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "12245:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                          }
                        },
                        "id": 3016,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3015,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2961,
                          "src": "12254:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12245:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                          "typeString": "struct ERC1400.ConfinedPartition storage ref"
                        }
                      },
                      "id": 3017,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "escrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1934,
                      "src": "12245:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3018,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "12277:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12277:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "12245:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "12245:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3022,
                          "name": "confined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "12291:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                          }
                        },
                        "id": 3024,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3023,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2961,
                          "src": "12300:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12291:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                          "typeString": "struct ERC1400.ConfinedPartition storage ref"
                        }
                      },
                      "id": 3025,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expirationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1936,
                      "src": "12291:37:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3026,
                      "name": "expirationDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2963,
                      "src": "12331:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12291:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3028,
                  "nodeType": "ExpressionStatement",
                  "src": "12291:54:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3029,
                          "name": "confined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "12349:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                          }
                        },
                        "id": 3031,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3030,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2961,
                          "src": "12358:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12349:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                          "typeString": "struct ERC1400.ConfinedPartition storage ref"
                        }
                      },
                      "id": 3032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "priceExercise",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "12349:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3033,
                      "name": "priceExercise",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2965,
                      "src": "12388:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12349:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3035,
                  "nodeType": "ExpressionStatement",
                  "src": "12349:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3036,
                          "name": "confined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "12405:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                          }
                        },
                        "id": 3038,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3037,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2961,
                          "src": "12414:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12405:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                          "typeString": "struct ERC1400.ConfinedPartition storage ref"
                        }
                      },
                      "id": 3039,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "recipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1940,
                      "src": "12405:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3040,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2959,
                      "src": "12440:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12405:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3042,
                  "nodeType": "ExpressionStatement",
                  "src": "12405:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12460:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2969,
                  "id": 3044,
                  "nodeType": "Return",
                  "src": "12453:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2957,
              "nodeType": "StructuredDocumentation",
              "src": "11670:59:5",
              "text": " Confinement of a Partition for a given duration*"
            },
            "functionSelector": "68aa16ff",
            "id": 3046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "confinePartition",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2959,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3046,
                  "src": "11758:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11758:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2961,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3046,
                  "src": "11777:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11777:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2963,
                  "mutability": "mutable",
                  "name": "expirationDate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3046,
                  "src": "11799:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11799:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2965,
                  "mutability": "mutable",
                  "name": "priceExercise",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3046,
                  "src": "11823:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11823:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11757:88:5"
            },
            "returnParameters": {
              "id": 2969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3046,
                  "src": "11862:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11862:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11861:6:5"
            },
            "scope": 3466,
            "src": "11732:736:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3103,
              "nodeType": "Block",
              "src": "12604:801:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3057,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "12659:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 3059,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3058,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3051,
                              "src": "12670:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12659:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 3060,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "12659:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3061,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3049,
                          "src": "12693:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12659:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6520726563697069656e7420657374206c652070726f707269c383c2a97461697265206465206c6120706172746974696f6e",
                        "id": 3063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12704:53:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f42bcb16c0cefb4e2147dcd7e7fd773c5ce80d6c921bf71e7bf0c04b0e7c020c",
                          "typeString": "literal_string \"le recipient est le propri\u00c3\u00a9taire de la partition\""
                        },
                        "value": "le recipient est le propri\u00c3\u00a9taire de la partition"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f42bcb16c0cefb4e2147dcd7e7fd773c5ce80d6c921bf71e7bf0c04b0e7c020c",
                          "typeString": "literal_string \"le recipient est le propri\u00c3\u00a9taire de la partition\""
                        }
                      ],
                      "id": 3056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12651:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12651:107:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3065,
                  "nodeType": "ExpressionStatement",
                  "src": "12651:107:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3067,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "12892:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3070,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3068,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12900:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "12900:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12892:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3071,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "12892:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3072,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "12922:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_ESCROW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12922:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "12892:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c61207472616e73616374696f6e20646f697420c383c2aa74726520c383c2a96d6973652064657075697320756e20636f6d7074652064652073c383c2a971756573747265",
                        "id": 3075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12950:71:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_32b1584bc3de5ad8aede380fcf419360712821e0172ae09145454efcf56f94b1",
                          "typeString": "literal_string \"la transaction doit \u00c3\u00aatre \u00c3\u00a9mise depuis un compte de s\u00c3\u00a9questre\""
                        },
                        "value": "la transaction doit \u00c3\u00aatre \u00c3\u00a9mise depuis un compte de s\u00c3\u00a9questre"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_32b1584bc3de5ad8aede380fcf419360712821e0172ae09145454efcf56f94b1",
                          "typeString": "literal_string \"la transaction doit \u00c3\u00aatre \u00c3\u00a9mise depuis un compte de s\u00c3\u00a9questre\""
                        }
                      ],
                      "id": 3066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12884:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12884:138:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3077,
                  "nodeType": "ExpressionStatement",
                  "src": "12884:138:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3078,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "13219:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 3080,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3079,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3051,
                          "src": "13230:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13219:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 3081,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "13219:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3082,
                        "name": "partitionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "13253:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                          "typeString": "type(enum ERC1400.partitionStates)"
                        }
                      },
                      "id": 3083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13253:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "src": "13219:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_partitionStates_$1914",
                      "typeString": "enum ERC1400.partitionStates"
                    }
                  },
                  "id": 3085,
                  "nodeType": "ExpressionStatement",
                  "src": "13219:63:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3086,
                          "name": "confined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "13289:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                          }
                        },
                        "id": 3088,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3087,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3051,
                          "src": "13298:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13289:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                          "typeString": "struct ERC1400.ConfinedPartition storage ref"
                        }
                      },
                      "id": 3089,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expirationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1936,
                      "src": "13289:37:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 3090,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "13329:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13289:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3100,
                  "nodeType": "IfStatement",
                  "src": "13286:101:5",
                  "trueBody": {
                    "id": 3099,
                    "nodeType": "Block",
                    "src": "13334:53:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3092,
                                "name": "confined",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1959,
                                "src": "13339:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                                }
                              },
                              "id": 3094,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3093,
                                "name": "partitionUid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3051,
                                "src": "13348:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13339:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                                "typeString": "struct ERC1400.ConfinedPartition storage ref"
                              }
                            },
                            "id": 3095,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "expirationDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1936,
                            "src": "13339:37:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3096,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "13379:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13339:43:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3098,
                        "nodeType": "ExpressionStatement",
                        "src": "13339:43:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13397:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3055,
                  "id": 3102,
                  "nodeType": "Return",
                  "src": "13390:11:5"
                }
              ]
            },
            "documentation": {
              "id": 3047,
              "nodeType": "StructuredDocumentation",
              "src": "12471:40:5",
              "text": " Deconfinement of a Partition*"
            },
            "functionSelector": "e13e57e9",
            "id": 3104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deconfinePartition",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3049,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3104,
                  "src": "12542:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12542:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3051,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3104,
                  "src": "12561:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12561:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12541:41:5"
            },
            "returnParameters": {
              "id": 3055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3054,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3104,
                  "src": "12599:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3053,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12599:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12598:6:5"
            },
            "scope": 3466,
            "src": "12514:891:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3197,
              "nodeType": "Block",
              "src": "13591:553:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3113,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "13603:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3116,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3114,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13611:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13611:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13603:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3117,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "13603:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3118,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "13633:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_ESCROW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13633:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "13603:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13595:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13595:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3122,
                  "nodeType": "ExpressionStatement",
                  "src": "13595:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3124,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "13672:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3127,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3125,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "13680:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 3126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13680:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13672:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "13672:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3129,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "13701:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13701:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "13672:55:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13664:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13664:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3133,
                  "nodeType": "ExpressionStatement",
                  "src": "13664:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3135,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13740:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13740:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3137,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "13754:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3139,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3138,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "13763:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13754:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "escrow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1934,
                          "src": "13754:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13740:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13732:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13732:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3143,
                  "nodeType": "ExpressionStatement",
                  "src": "13732:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3145,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "13796:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 3146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13796:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3147,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "13809:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 3149,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3148,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "13820:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13809:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 3150,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "13809:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13796:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13788:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13788:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3153,
                  "nodeType": "ExpressionStatement",
                  "src": "13788:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_partitionStates_$1914",
                          "typeString": "enum ERC1400.partitionStates"
                        },
                        "id": 3161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3155,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "13852:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 3157,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3156,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "13863:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13852:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 3158,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1926,
                          "src": "13852:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_partitionStates_$1914",
                            "typeString": "enum ERC1400.partitionStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3159,
                            "name": "partitionStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1914,
                            "src": "13887:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                              "typeString": "type(enum ERC1400.partitionStates)"
                            }
                          },
                          "id": 3160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_CONFINED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13887:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_partitionStates_$1914",
                            "typeString": "enum ERC1400.partitionStates"
                          }
                        },
                        "src": "13852:66:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13844:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13844:75:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3163,
                  "nodeType": "ExpressionStatement",
                  "src": "13844:75:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3164,
                            "name": "_allowanceEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2837,
                            "src": "13923:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 3172,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3165,
                                "name": "partitions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1945,
                                "src": "13940:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                                }
                              },
                              "id": 3167,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3166,
                                "name": "partitionUid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3107,
                                "src": "13951:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13940:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Partition_$1927_storage",
                                "typeString": "struct ERC1400.Partition storage ref"
                              }
                            },
                            "id": 3168,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1920,
                            "src": "13940:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13923:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 3173,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3169,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13972:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13972:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13923:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3174,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3171,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3107,
                        "src": "13984:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13923:74:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14000:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13923:78:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3177,
                  "nodeType": "ExpressionStatement",
                  "src": "13923:78:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3179,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "14014:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3180,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "14020:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3182,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3181,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3107,
                              "src": "14029:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14020:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1936,
                          "src": "14020:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14014:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14006:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14006:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3186,
                  "nodeType": "ExpressionStatement",
                  "src": "14006:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3187,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "14062:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 3189,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3188,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3107,
                          "src": "14073:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14062:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 3190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "14062:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3191,
                        "name": "partitionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "14096:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                          "typeString": "type(enum ERC1400.partitionStates)"
                        }
                      },
                      "id": 3192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14096:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "src": "14062:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_partitionStates_$1914",
                      "typeString": "enum ERC1400.partitionStates"
                    }
                  },
                  "id": 3194,
                  "nodeType": "ExpressionStatement",
                  "src": "14062:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14136:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3111,
                  "id": 3196,
                  "nodeType": "Return",
                  "src": "14129:11:5"
                }
              ]
            },
            "documentation": {
              "id": 3105,
              "nodeType": "StructuredDocumentation",
              "src": "13409:105:5",
              "text": " stop the Option Exercise on a Partition by escrow account or after expiration of the exercise*"
            },
            "functionSelector": "fcc45a0a",
            "id": 3198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stopOptionByPromisor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3107,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3198,
                  "src": "13547:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13547:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13546:22:5"
            },
            "returnParameters": {
              "id": 3111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3110,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3198,
                  "src": "13585:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13585:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13584:6:5"
            },
            "scope": 3466,
            "src": "13517:627:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3297,
              "nodeType": "Block",
              "src": "14222:603:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3206,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "14234:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3209,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3207,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14242:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14242:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14234:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3210,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "14234:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3211,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "14264:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_ESCROW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14264:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "14234:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3205,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14226:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14226:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3215,
                  "nodeType": "ExpressionStatement",
                  "src": "14226:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3217,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "14303:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3220,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3218,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "14311:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 3219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14311:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14303:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3221,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "14303:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3222,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "14332:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14332:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "14303:55:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14295:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14295:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3226,
                  "nodeType": "ExpressionStatement",
                  "src": "14295:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3228,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14371:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14371:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3230,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "14385:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3232,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3231,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "14394:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14385:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3233,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "escrow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1934,
                          "src": "14385:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14371:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14363:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14363:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3236,
                  "nodeType": "ExpressionStatement",
                  "src": "14363:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3238,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "14427:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 3239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14427:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3240,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "14440:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3242,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3241,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "14449:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14440:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1940,
                          "src": "14440:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14427:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14419:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14419:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3246,
                  "nodeType": "ExpressionStatement",
                  "src": "14419:54:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_partitionStates_$1914",
                          "typeString": "enum ERC1400.partitionStates"
                        },
                        "id": 3254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3248,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "14485:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 3250,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3249,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "14496:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14485:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 3251,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1926,
                          "src": "14485:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_partitionStates_$1914",
                            "typeString": "enum ERC1400.partitionStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3252,
                            "name": "partitionStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1914,
                            "src": "14520:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                              "typeString": "type(enum ERC1400.partitionStates)"
                            }
                          },
                          "id": 3253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_CONFINED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14520:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_partitionStates_$1914",
                            "typeString": "enum ERC1400.partitionStates"
                          }
                        },
                        "src": "14485:66:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14477:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14477:75:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3256,
                  "nodeType": "ExpressionStatement",
                  "src": "14477:75:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3257,
                            "name": "_allowanceEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2837,
                            "src": "14556:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => uint256)))"
                            }
                          },
                          "id": 3265,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3258,
                                "name": "partitions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1945,
                                "src": "14573:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                  "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                                }
                              },
                              "id": 3260,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3259,
                                "name": "partitionUid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3200,
                                "src": "14584:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14573:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Partition_$1927_storage",
                                "typeString": "struct ERC1400.Partition storage ref"
                              }
                            },
                            "id": 3261,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1920,
                            "src": "14573:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14556:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 3266,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3262,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14605:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14605:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14556:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 3267,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3264,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3200,
                        "src": "14617:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14556:74:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14633:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14556:78:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3270,
                  "nodeType": "ExpressionStatement",
                  "src": "14556:78:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3272,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "14647:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3273,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "14654:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3275,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3274,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3200,
                              "src": "14663:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14654:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3276,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1936,
                          "src": "14654:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14647:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14639:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14639:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3279,
                  "nodeType": "ExpressionStatement",
                  "src": "14639:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3280,
                          "name": "partitions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1945,
                          "src": "14696:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                          }
                        },
                        "id": 3282,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3281,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3200,
                          "src": "14707:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14696:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Partition_$1927_storage",
                          "typeString": "struct ERC1400.Partition storage ref"
                        }
                      },
                      "id": 3283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "14696:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3284,
                        "name": "partitionStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1914,
                        "src": "14730:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_partitionStates_$1914_$",
                          "typeString": "type(enum ERC1400.partitionStates)"
                        }
                      },
                      "id": 3285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STATUS_ACTIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14730:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_partitionStates_$1914",
                        "typeString": "enum ERC1400.partitionStates"
                      }
                    },
                    "src": "14696:63:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_partitionStates_$1914",
                      "typeString": "enum ERC1400.partitionStates"
                    }
                  },
                  "id": 3287,
                  "nodeType": "ExpressionStatement",
                  "src": "14696:63:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3288,
                          "name": "confined",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "14763:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                            "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                          }
                        },
                        "id": 3290,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3289,
                          "name": "partitionUid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3200,
                          "src": "14772:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14763:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                          "typeString": "struct ERC1400.ConfinedPartition storage ref"
                        }
                      },
                      "id": 3291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expirationDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1936,
                      "src": "14763:37:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3292,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -17,
                      "src": "14803:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14763:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3294,
                  "nodeType": "ExpressionStatement",
                  "src": "14763:43:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14817:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3204,
                  "id": 3296,
                  "nodeType": "Return",
                  "src": "14810:11:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f90d7717",
            "id": 3298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stopOptionByRecipient",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3200,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3298,
                  "src": "14178:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14178:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14177:22:5"
            },
            "returnParameters": {
              "id": 3204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3203,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3298,
                  "src": "14216:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14216:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14215:6:5"
            },
            "scope": 3466,
            "src": "14147:678:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3396,
              "nodeType": "Block",
              "src": "14956:573:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3309,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "14968:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 3310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14968:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3311,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "14981:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3313,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3312,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3305,
                              "src": "14990:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14981:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1940,
                          "src": "14981:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14968:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14960:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14960:54:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3317,
                  "nodeType": "ExpressionStatement",
                  "src": "14960:54:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3319,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "15027:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3322,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3320,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15035:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15035:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15027:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3323,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "15027:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3324,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "15057:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_ESCROW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15057:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "15027:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15019:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15019:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3328,
                  "nodeType": "ExpressionStatement",
                  "src": "15019:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3330,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "15096:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3332,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3331,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3301,
                              "src": "15104:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15096:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3333,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "15096:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3334,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "15122:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15122:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "15096:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15088:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15088:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3338,
                  "nodeType": "ExpressionStatement",
                  "src": "15088:61:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3340,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "15161:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3343,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3341,
                                "name": "tx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -26,
                                "src": "15169:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_transaction",
                                  "typeString": "tx"
                                }
                              },
                              "id": 3342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15169:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15161:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3344,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "15161:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3345,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "15190:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15190:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "15161:55:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15153:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15153:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3349,
                  "nodeType": "ExpressionStatement",
                  "src": "15153:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3351,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15229:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15229:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3353,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "15243:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3355,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3354,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3305,
                              "src": "15252:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15243:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "escrow",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1934,
                          "src": "15243:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15229:43:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15221:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15221:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3359,
                  "nodeType": "ExpressionStatement",
                  "src": "15221:52:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3361,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3301,
                          "src": "15285:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3362,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "15295:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 3364,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3363,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3305,
                              "src": "15306:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15295:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 3365,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "15295:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15285:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15277:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15277:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3368,
                  "nodeType": "ExpressionStatement",
                  "src": "15277:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3370,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -17,
                          "src": "15338:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3371,
                              "name": "confined",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "15345:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ConfinedPartition_$1941_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.ConfinedPartition storage ref)"
                              }
                            },
                            "id": 3373,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3372,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3305,
                              "src": "15354:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15345:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ConfinedPartition_$1941_storage",
                              "typeString": "struct ERC1400.ConfinedPartition storage ref"
                            }
                          },
                          "id": 3374,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expirationDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1936,
                          "src": "15345:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15338:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3369,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15330:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15330:53:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3377,
                  "nodeType": "ExpressionStatement",
                  "src": "15330:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3379,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3305,
                        "src": "15410:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3380,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3301,
                        "src": "15424:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3381,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "15432:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "15432:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3383,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3303,
                        "src": "15443:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3378,
                      "name": "_transfertByPartition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2578,
                      "src": "15388:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 3384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15388:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3385,
                  "nodeType": "ExpressionStatement",
                  "src": "15388:61:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3387,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15474:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "15474:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3389,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3301,
                        "src": "15486:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3390,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "15494:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "15494:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3392,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3303,
                        "src": "15505:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3393,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3305,
                        "src": "15512:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3386,
                      "name": "EscrowTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2817,
                      "src": "15459:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 3394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15459:66:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3395,
                  "nodeType": "EmitStatement",
                  "src": "15454:71:5"
                }
              ]
            },
            "documentation": {
              "id": 3299,
              "nodeType": "StructuredDocumentation",
              "src": "14828:42:5",
              "text": " transfer partition from escrow*"
            },
            "functionSelector": "438115a2",
            "id": 3397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "escrowTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3301,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3397,
                  "src": "14897:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14897:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3303,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3397,
                  "src": "14913:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14913:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3305,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3397,
                  "src": "14928:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14928:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14896:53:5"
            },
            "returnParameters": {
              "id": 3307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14956:0:5"
            },
            "scope": 3466,
            "src": "14873:656:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3464,
              "nodeType": "Block",
              "src": "15643:409:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3409,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "15655:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3412,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3410,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15663:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15663:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15655:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3413,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "15655:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3414,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "15685:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_ESCROW",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15685:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "15655:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15647:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15647:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "15647:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3420,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "15724:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3422,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3421,
                              "name": "seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3399,
                              "src": "15732:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15724:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3423,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "15724:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3424,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "15750:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15750:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "15724:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15716:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15716:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3428,
                  "nodeType": "ExpressionStatement",
                  "src": "15716:61:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_holderStates_$1918",
                          "typeString": "enum ERC1400.holderStates"
                        },
                        "id": 3436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3430,
                              "name": "holders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1955,
                              "src": "15789:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Holder_$1932_storage_$",
                                "typeString": "mapping(address => struct ERC1400.Holder storage ref)"
                              }
                            },
                            "id": 3432,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3431,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3401,
                              "src": "15797:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15789:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Holder_$1932_storage",
                              "typeString": "struct ERC1400.Holder storage ref"
                            }
                          },
                          "id": 3433,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1931,
                          "src": "15789:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3434,
                            "name": "holderStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "15818:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_holderStates_$1918_$",
                              "typeString": "type(enum ERC1400.holderStates)"
                            }
                          },
                          "id": 3435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "STATUS_HOLDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15818:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_holderStates_$1918",
                            "typeString": "enum ERC1400.holderStates"
                          }
                        },
                        "src": "15789:55:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15781:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15781:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3438,
                  "nodeType": "ExpressionStatement",
                  "src": "15781:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3440,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3399,
                          "src": "15857:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3441,
                              "name": "partitions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1945,
                              "src": "15867:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Partition_$1927_storage_$",
                                "typeString": "mapping(uint256 => struct ERC1400.Partition storage ref)"
                              }
                            },
                            "id": 3443,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3442,
                              "name": "partitionUid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3405,
                              "src": "15878:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15867:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Partition_$1927_storage",
                              "typeString": "struct ERC1400.Partition storage ref"
                            }
                          },
                          "id": 3444,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "15867:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15857:40:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15849:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15849:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3447,
                  "nodeType": "ExpressionStatement",
                  "src": "15849:49:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3449,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3405,
                        "src": "15925:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3450,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3399,
                        "src": "15939:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3451,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3401,
                        "src": "15947:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3452,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3403,
                        "src": "15958:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3448,
                      "name": "_transfertByPartition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2578,
                      "src": "15903:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256)"
                      }
                    },
                    "id": 3453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15903:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3454,
                  "nodeType": "ExpressionStatement",
                  "src": "15903:61:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15997:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "15997:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3458,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3399,
                        "src": "16009:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3459,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3401,
                        "src": "16017:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3460,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3403,
                        "src": "16028:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3461,
                        "name": "partitionUid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3405,
                        "src": "16035:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3455,
                      "name": "EscrowExplicitTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2829,
                      "src": "15974:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 3462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15974:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3463,
                  "nodeType": "EmitStatement",
                  "src": "15969:79:5"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "aa93b05e",
            "id": 3465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "escrowExplicitTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3399,
                  "mutability": "mutable",
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3465,
                  "src": "15565:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15565:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3401,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3465,
                  "src": "15581:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15581:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3403,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3465,
                  "src": "15600:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15600:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3405,
                  "mutability": "mutable",
                  "name": "partitionUid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3465,
                  "src": "15615:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15615:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15564:72:5"
            },
            "returnParameters": {
              "id": 3407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15643:0:5"
            },
            "scope": 3466,
            "src": "15533:519:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3467,
        "src": "61:15993:5"
      }
    ],
    "src": "0:16055:5"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051611ec5380380611ec58339818101604052604081101561003357600080fd5b50805160209091015160008054911515600160a01b0260ff60a01b196001600160a01b0319938416331716179055600180546001600160a01b0390931692909116919091179055611e3c806100896000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063d91ae8c2116100a2578063ea3d019611610071578063ea3d019614610476578063f76fac0e1461070f578063f90d77171461073b578063fcc45a0a14610758576101e5565b8063d91ae8c214610689578063d9f226e9146106af578063e13e57e9146106b7578063e7810d09146106e3576101e5565b80639b504387116100de5780639b504387146105e3578063aa93b05e14610619578063bfd889af14610655578063ca1a35cf14610681576101e5565b806370a0823114610504578063740ab8f41461052a57806376c657c9146105a05780638b3e76fd146105bd576101e5565b806339d3ad77116101875780634f30d687116101565780634f30d687146104595780634fb5ea9d1461047657806363857a7b1461049357806368aa16ff146104cc576101e5565b806339d3ad77146103d35780633d10e825146103f9578063438115a21461041f5780634c783bf514610451576101e5565b806318a5bbdc116101c357806318a5bbdc146102be57806319f46e811461030c5780631b52fd8e1461032f5780632e51dfd81461038b576101e5565b806304a87a4f146101ea57806308d4c8581461021e5780631005e26214610264575b600080fd5b61021c6004803603606081101561020057600080fd5b508035906001600160a01b036020820135169060400135610775565b005b6102506004803603606081101561023457600080fd5b506001600160a01b038135169060208101359060400135610808565b604080519115158252519081900360200190f35b6102816004803603602081101561027a57600080fd5b50356108dd565b60405180856001600160a01b03168152602001848152602001838152602001826001600160a01b0316815260200194505050505060405180910390f35b6102e4600480360360208110156102d457600080fd5b50356001600160a01b031661090f565b604051808381526020018260028111156102fa57fe5b81526020019250505060405180910390f35b61021c6004803603604081101561032257600080fd5b508035906020013561092b565b61034c6004803603602081101561034557600080fd5b5035610acf565b60405180856001600160a01b0316815260200184815260200183815260200182600281111561037757fe5b815260200194505050505060405180910390f35b6103c1600480360360608110156103a157600080fd5b506001600160a01b03813581169160208101359091169060400135610b05565b60408051918252519081900360200190f35b610250600480360360208110156103e957600080fd5b50356001600160a01b0316610b37565b6103c16004803603602081101561040f57600080fd5b50356001600160a01b0316610b72565b61021c6004803603606081101561043557600080fd5b506001600160a01b038135169060208101359060400135610b8d565b610250610d0c565b61021c6004803603602081101561046f57600080fd5b5035610d1c565b6103c16004803603602081101561048c57600080fd5b5035610e7c565b6104b0600480360360208110156104a957600080fd5b5035610e91565b604080516001600160a01b039092168252519081900360200190f35b610250600480360360808110156104e257600080fd5b506001600160a01b038135169060208101359060408101359060600135610eac565b6103c16004803603602081101561051a57600080fd5b50356001600160a01b0316610fc8565b6105506004803603602081101561054057600080fd5b50356001600160a01b0316611063565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561058c578181015183820152602001610574565b505050509050019250505060405180910390f35b6103c1600480360360208110156105b657600080fd5b503561112f565b61021c600480360360208110156105d357600080fd5b50356001600160a01b0316611156565b61021c600480360360608110156105f957600080fd5b506001600160a01b038135811691602081013590911690604001356111d5565b61021c6004803603608081101561062f57600080fd5b506001600160a01b038135811691602081013590911690604081013590606001356112f2565b6103c16004803603604081101561066b57600080fd5b506001600160a01b038135169060200135611416565b6104b0611433565b61021c6004803603602081101561069f57600080fd5b50356001600160a01b0316611437565b61021c611534565b610250600480360360408110156106cd57600080fd5b506001600160a01b0381351690602001356115d5565b6103c1600480360360408110156106f957600080fd5b506001600160a01b0381351690602001356116d9565b61021c6004803603604081101561072557600080fd5b506001600160a01b038135169060200135611701565b6102506004803603602081101561075157600080fd5b50356117e5565b6102506004803603602081101561076e57600080fd5b5035611932565b6001600160a01b03821660009081526004602052604081206001015460ff16600281111561079f57fe5b146107a957600080fd5b6107b583338484611a6c565b604080518481523360208201526001600160a01b038416818301526060810183905290517ffb5bfa42aa80b3ed270d6ff371cdc41b1aaa1a6dd5c44e63960f7b6ff25f032f9181900360800190a1505050565b60006001600160a01b03841661081d57600080fd5b60008381526002602052604090206001015482101561083b57600080fd5b6000838152600260205260409020546001600160a01b0316331461085e57600080fd5b3360008181526006602090815260408083206001600160a01b03891680855290835281842088855283529281902086905580519384529083019190915281810185905260608201849052517f9d1ac4b899375aa3769348593b01eae2706d94b90bc92a3d45e72f574b8f054b9181900360800190a15060019392505050565b60056020526000908152604090208054600182015460028301546003909301546001600160a01b039283169391921684565b6004602052600090815260409020805460019091015460ff1682565b8161093557600080fd5b3360009081526004602052604081206001015460ff16600281111561095657fe5b1461096057600080fd5b600154604080516370a0823160e01b8152336004820152905183926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156109aa57600080fd5b505afa1580156109be573d6000803e3d6000fd5b505050506040513d60208110156109d457600080fd5b505110156109e157600080fd5b6001546040805163079cc67960e41b81523360048201526024810184905290516001600160a01b03909216916379cc6790916044808201926020929091908290030181600087803b158015610a3557600080fd5b505af1158015610a49573d6000803e3d6000fd5b505050506040513d6020811015610a5f57600080fd5b5051610a6a57600080fd5b600082815260026020818152604080842080546001600160a01b03191633908117825560018083019790975542948201949094556003908101805460ff1916905592845260048252808420805490950194859055918152818320938352929092522055565b600260208190526000918252604090912080546001820154928201546003909201546001600160a01b0390911692919060ff1684565b6001600160a01b0392831660009081526006602090815260408083209490951682529283528381209181529152205490565b6001600160a01b03811660009081526004602052604081208181556001908101805460029260ff1990911690835b0217905550600192915050565b6001600160a01b031660009081526004602052604090205490565b6000818152600560205260409020600301546001600160a01b03163214610bb357600080fd5b60023360009081526004602052604090206001015460ff166002811115610bd657fe5b14610be057600080fd5b6001600160a01b03831660009081526004602052604081206001015460ff166002811115610c0a57fe5b14610c1457600080fd5b3260009081526004602052604081206001015460ff166002811115610c3557fe5b14610c3f57600080fd5b6000818152600560205260409020546001600160a01b03163314610c6257600080fd5b6000818152600260205260409020546001600160a01b03848116911614610c8857600080fd5b600081815260056020526040902060010154421115610ca657600080fd5b610cb281843285611a6c565b604080513381526001600160a01b03851660208201523281830152606081018490526080810183905290517f2f8ae5f6f3d09a6d675498229fa3c6d3ba3d5faaa90cfc85893abb07589309fb9181900360a00190a1505050565b600054600160a01b900460ff1690565b6000818152600260205260409020546001600160a01b03163314610d3f57600080fd5b600180546000838152600260209081526040808320909401548451631cc7485960e01b8152336004820152602481019190915293516001600160a01b0390931693631cc748599360448083019491928390030190829087803b158015610da457600080fd5b505af1158015610db8573d6000803e3d6000fd5b505050506040513d6020811015610dce57600080fd5b5051610dd957600080fd5b6000818152600260208190526040822060018101839055600301805460ff19169091179055805b33600090815260046020526040902054811015610e5857336000908152600360209081526040808320600185018452909152902054831415610e5057336000908152600460205260409020549091505b600101610e00565b50336000908152600360209081526040808320600190940183529290529081205550565b60009081526002602052604090206001015490565b6000908152600260205260409020546001600160a01b031690565b6000838152600260205260408120546001600160a01b03163214610ecf57600080fd5b60023360009081526004602052604090206001015460ff166002811115610ef257fe5b14610efc57600080fd5b3260009081526006602090815260408083203384528252808320878452909152902054821115610f5d5760405162461bcd60e51b815260040180806020018281038252605c815260200180611dab605c913960600191505060405180910390fd5b5060009283526002602081815260408086206003908101805460ff191660019081179091556005909352952080546001600160a01b031990811633178255818301959095559182019290925590920180546001600160a01b0394909416939091169290921790915590565b600080805b6001600160a01b03841660009081526004602052604090205481101561105c576001600160a01b038416600090815260036020908152604080832060018501845290915290205415611054576001600160a01b0384166000908152600360209081526040808320600180860185529083528184205484526002909252909120015491909101905b600101610fcd565b5092915050565b6001600160a01b038116600090815260046020526040902054606090819067ffffffffffffffff8111801561109757600080fd5b506040519080825280602002602001820160405280156110c1578160200160208202803683370190505b50905060005b6001600160a01b03841660009081526004602052604090205481101561105c576001600160a01b0384166000908152600360209081526040808320600185018452909152902054825183908390811061111c57fe5b60209081029190910101526001016110c7565b600081815260026020819052604082206003015460ff169081111561115057fe5b92915050565b6000546001600160a01b0316331461116d57600080fd5b60016001600160a01b03821660009081526004602052604090206001015460ff16600281111561119957fe5b146111a357600080fd5b6001600160a01b038116600090815260046020526040812060019081018054909160ff1990911690835b021790555050565b60013260009081526004602052604090206001015460ff1660028111156111f857fe5b1461120257600080fd5b6001600160a01b03831660009081526004602052604081206001015460ff16600281111561122c57fe5b1461123657600080fd5b6001600160a01b03821660009081526004602052604081206001015460ff16600281111561126057fe5b1461126a57600080fd5b61128c8184846002600086815260200190815260200160002060010154611a6c565b6000818152600260209081526040918290206001015482513281529182015280820183905290516001600160a01b0380851692908616917fd723526895fc65db0acf8a82fc5ad744cc7b5c1ca543e2c1554af226c5d3b1b29181900360600190a3505050565b60023360009081526004602052604090206001015460ff16600281111561131557fe5b1461131f57600080fd5b6001600160a01b03841660009081526004602052604081206001015460ff16600281111561134957fe5b1461135357600080fd5b6001600160a01b03831660009081526004602052604081206001015460ff16600281111561137d57fe5b1461138757600080fd5b6000818152600260205260409020546001600160a01b038581169116146113ad57600080fd5b6113b981858585611a6c565b604080513381526001600160a01b038087166020830152851681830152606081018490526080810183905290517ff3665006498c43504090a58c1d42ce5073b77ccc50e2fe916967087e52fd3a0c9181900360a00190a150505050565b600360209081526000928352604080842090915290825290205481565b3290565b6000546001600160a01b0316331461144e57600080fd5b600154604080516370a0823160e01b81526001600160a01b038481166004830152915160009392909216916370a0823191602480820192602092909190829003018186803b15801561149f57600080fd5b505afa1580156114b3573d6000803e3d6000fd5b505050506040513d60208110156114c957600080fd5b505110156114d657600080fd5b6001600160a01b03811660009081526004602052604081206001015460ff16600281111561150057fe5b1461150a57600080fd5b6001600160a01b03811660009081526004602052604090206001908101805460ff191682806111cd565b600154604080516370a0823160e01b815233600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561157f57600080fd5b505afa158015611593573d6000803e3d6000fd5b505050506040513d60208110156115a957600080fd5b505110156115b657600080fd5b336000908152600460205260408120908155600101805460ff19169055565b6000818152600260205260408120546001600160a01b0384811691161461162d5760405162461bcd60e51b8152600401808060200182810382526033815260200180611d786033913960400191505060405180910390fd5b60023360009081526004602052604090206001015460ff16600281111561165057fe5b1461168c5760405162461bcd60e51b8152600401808060200182810382526045815260200180611d336045913960600191505060405180910390fd5b6000828152600260209081526040808320600301805460ff1916905560059091529020600101544210156116d0576000828152600560205260409020426001909101555b50600192915050565b6001600160a01b03919091166000908152600360209081526040808320938352929052205490565b60013260009081526004602052604090206001015460ff16600281111561172457fe5b1461172e57600080fd5b6001600160a01b03821660009081526004602052604081206001015460ff16600281111561175857fe5b1461176257600080fd5b6117848183326002600086815260200190815260200160002060010154611a6c565b6000818152600260209081526040918290206001015482513281529182015280820183905290516001600160a01b038416917f5cbe58c63d4e8d44ed895cb43cc52bbe40bcf56a6f32e215112961d9921aaa60919081900360600190a25050565b600060023360009081526004602052604090206001015460ff16600281111561180a57fe5b1461181457600080fd5b3260009081526004602052604081206001015460ff16600281111561183557fe5b1461183f57600080fd5b6000828152600560205260409020546001600160a01b0316331461186257600080fd5b6000828152600560205260409020600301546001600160a01b0316321461188857600080fd5b600160008381526002602081905260409091206003015460ff16908111156118ac57fe5b146118b657600080fd5b6000828152600260209081526040808320546001600160a01b031683526006825280832033845282528083208584528252808320839055600590915290206001015442111561190457600080fd5b506000908152600260209081526040808320600301805460ff19169055600590915290204260019182015590565b600060023360009081526004602052604090206001015460ff16600281111561195757fe5b1461196157600080fd5b3260009081526004602052604081206001015460ff16600281111561198257fe5b1461198c57600080fd5b6000828152600560205260409020546001600160a01b031633146119af57600080fd5b6000828152600260205260409020546001600160a01b031632146119d257600080fd5b600160008381526002602081905260409091206003015460ff16908111156119f657fe5b14611a0057600080fd5b6000828152600260209081526040808320546001600160a01b03168352600682528083203384528252808320858452825280832083905560059091529020600101544211611a4d57600080fd5b6000828152600260205260408120600301805460ff1916600183610b65565b600154604080516370a0823160e01b81526001600160a01b0385811660048301529151849392909216916370a0823191602480820192602092909190829003018186803b158015611abc57600080fd5b505afa158015611ad0573d6000803e3d6000fd5b505050506040513d6020811015611ae657600080fd5b50511015611af357600080fd5b6000848152600260205260409020546001600160a01b03848116911614611b1957600080fd5b60015460408051636eb1769f60e11b81526001600160a01b03858116600483015230602483015291518493929092169163dd62ed3e91604480820192602092909190829003018186803b158015611b6f57600080fd5b505afa158015611b83573d6000803e3d6000fd5b505050506040513d6020811015611b9957600080fd5b50511015611ba657600080fd5b600154604080516323b872dd60e01b81526001600160a01b038581166004830152868116602483015260448201859052915191909216916323b872dd9160648083019260209291908290030181600087803b158015611c0457600080fd5b505af1158015611c18573d6000803e3d6000fd5b505050506040513d6020811015611c2e57600080fd5b5051611c3957600080fd5b600084815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260048252808320805460010190819055600383528184209084529091528120859055805b6001600160a01b038516600090815260046020526040902054811015611cff576001600160a01b0385166000908152600360209081526040808320600185018452909152902054861415611cf7576001600160a01b0385166000908152600460205260409020549091505b600101611c8c565b506001600160a01b039093166000908152600360209081526040808320600190960183529490529283209290925550505056fe6c61207472616e73616374696f6e20646f697420c383c2aa74726520c383c2a96d6973652064657075697320756e20636f6d7074652064652073c383c2a9717565737472656c6520726563697069656e7420657374206c652070726f707269c383c2a97461697265206465206c6120706172746974696f6e6c6520636f6e74726163742064652073c383c2a97175657374726520646f697420c383c2aa747265206175746f726973c383c2a920c383c2a0206d6f646966696572206c6520737461747573206465206c6120706172746974696f6ea2646970667358221220f2bce88195764ed295a64146a104017fc912f613321e11b364ffb45b9d9c59ec64736f6c634300060c0033",
  "bytecodeSha1": "166f2f2a9e6618fdf6fd1f0fdcd5fad836d79996",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "ERC1400",
  "coverageMap": {
    "branches": {
      "11": {},
      "5": {
        "ERC1400._transfertByPartition": {
          "169": [
            5958,
            6000,
            true
          ],
          "170": [
            6013,
            6053,
            true
          ],
          "171": [
            6066,
            6123,
            true
          ],
          "172": [
            6136,
            6187,
            true
          ],
          "173": [
            6392,
            6425,
            false
          ]
        },
        "ERC1400.approveEscrow": {
          "119": [
            11030,
            11050,
            true
          ],
          "120": [
            11063,
            11103,
            true
          ],
          "121": [
            11116,
            11160,
            true
          ]
        },
        "ERC1400.balanceOf": {
          "139": [
            3073,
            3094,
            false
          ]
        },
        "ERC1400.buyPartition": {
          "122": [
            3596,
            3613,
            true
          ],
          "123": [
            3626,
            3682,
            true
          ],
          "124": [
            3695,
            3740,
            true
          ],
          "125": [
            3753,
            3795,
            true
          ]
        },
        "ERC1400.confinePartition": {
          "136": [
            11879,
            11922,
            true
          ],
          "137": [
            11935,
            11991,
            true
          ],
          "138": [
            12004,
            12074,
            true
          ]
        },
        "ERC1400.controllerRedeem": {
          "155": [
            8941,
            9000,
            true
          ],
          "156": [
            9013,
            9065,
            true
          ]
        },
        "ERC1400.controllerTransfer": {
          "142": [
            7818,
            7877,
            true
          ],
          "143": [
            7890,
            7942,
            true
          ],
          "144": [
            7955,
            8009,
            true
          ]
        },
        "ERC1400.deconfinePartition": {
          "153": [
            12659,
            12702,
            true
          ],
          "154": [
            12892,
            12948,
            true
          ]
        },
        "ERC1400.escrowExplicitTransfer": {
          "145": [
            15655,
            15711,
            true
          ],
          "146": [
            15724,
            15776,
            true
          ],
          "147": [
            15789,
            15844,
            true
          ],
          "148": [
            15857,
            15897,
            true
          ]
        },
        "ERC1400.escrowTransfer": {
          "126": [
            14968,
            15013,
            true
          ],
          "127": [
            15027,
            15083,
            true
          ],
          "128": [
            15096,
            15148,
            true
          ],
          "129": [
            15161,
            15216,
            true
          ],
          "130": [
            15229,
            15272,
            true
          ],
          "131": [
            15285,
            15325,
            true
          ],
          "132": [
            15338,
            15382,
            true
          ]
        },
        "ERC1400.registerAccount": {
          "152": [
            3257,
            3297,
            true
          ]
        },
        "ERC1400.registerController": {
          "149": [
            7159,
            7180,
            true
          ],
          "150": [
            7193,
            7233,
            true
          ],
          "151": [
            7246,
            7302,
            true
          ]
        },
        "ERC1400.revokeController": {
          "140": [
            7472,
            7493,
            true
          ],
          "141": [
            7506,
            7566,
            true
          ]
        },
        "ERC1400.sellPartition": {
          "133": [
            4284,
            4328,
            true
          ],
          "134": [
            4341,
            4408,
            true
          ],
          "135": [
            4589,
            4626,
            false
          ]
        },
        "ERC1400.stopOptionByPromisor": {
          "163": [
            13603,
            13659,
            true
          ],
          "164": [
            13672,
            13727,
            true
          ],
          "165": [
            13740,
            13783,
            true
          ],
          "166": [
            13796,
            13839,
            true
          ],
          "167": [
            13852,
            13918,
            true
          ],
          "168": [
            14014,
            14057,
            true
          ]
        },
        "ERC1400.stopOptionByRecipient": {
          "157": [
            14234,
            14290,
            true
          ],
          "158": [
            14303,
            14358,
            true
          ],
          "159": [
            14371,
            14414,
            true
          ],
          "160": [
            14427,
            14472,
            true
          ],
          "161": [
            14485,
            14551,
            true
          ],
          "162": [
            14647,
            14691,
            true
          ]
        },
        "ERC1400.transferByPartition": {
          "118": [
            4955,
            5009,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "5": {
        "ERC1400._transfertByPartition": {
          "107": [
            5950,
            6001
          ],
          "108": [
            6005,
            6054
          ],
          "109": [
            6058,
            6124
          ],
          "110": [
            6128,
            6188
          ],
          "111": [
            6193,
            6234
          ],
          "112": [
            6238,
            6263
          ],
          "113": [
            6267,
            6321
          ],
          "114": [
            6444,
            6469
          ],
          "115": [
            6433,
            6438
          ],
          "116": [
            6379,
            6382
          ],
          "117": [
            6482,
            6503
          ]
        },
        "ERC1400.allowanceEscrow": {
          "19": [
            11485,
            11537
          ]
        },
        "ERC1400.approveEscrow": {
          "3": [
            11022,
            11051
          ],
          "4": [
            11055,
            11104
          ],
          "5": [
            11108,
            11161
          ],
          "6": [
            11168,
            11226
          ],
          "7": [
            11232,
            11292
          ],
          "8": [
            11296,
            11307
          ]
        },
        "ERC1400.balanceByPartition": {
          "42": [
            2881,
            2919
          ]
        },
        "ERC1400.balanceOf": {
          "52": [
            3102,
            3146
          ],
          "53": [
            3060,
            3063
          ],
          "54": [
            3160,
            3172
          ]
        },
        "ERC1400.buyPartition": {
          "9": [
            3588,
            3614
          ],
          "10": [
            3618,
            3683
          ],
          "11": [
            3687,
            3741
          ],
          "12": [
            3745,
            3796
          ],
          "13": [
            3801,
            3844
          ],
          "14": [
            3848,
            3888
          ],
          "15": [
            3892,
            3931
          ],
          "16": [
            3935,
            3998
          ],
          "17": [
            4003,
            4030
          ],
          "18": [
            4034,
            4092
          ]
        },
        "ERC1400.confinePartition": {
          "44": [
            11871,
            11923
          ],
          "45": [
            11927,
            11992
          ],
          "46": [
            11996,
            12171
          ],
          "47": [
            12176,
            12241
          ],
          "48": [
            12245,
            12287
          ],
          "49": [
            12291,
            12345
          ],
          "50": [
            12349,
            12401
          ],
          "51": [
            12405,
            12449
          ]
        },
        "ERC1400.controllerRedeem": {
          "86": [
            8933,
            9001
          ],
          "87": [
            9005,
            9066
          ],
          "88": [
            9071,
            9158
          ],
          "89": [
            9821,
            9912
          ]
        },
        "ERC1400.controllerTransfer": {
          "61": [
            7810,
            7878
          ],
          "62": [
            7882,
            7943
          ],
          "63": [
            7947,
            8010
          ],
          "64": [
            8015,
            8101
          ],
          "65": [
            8752,
            8851
          ]
        },
        "ERC1400.deconfinePartition": {
          "80": [
            12651,
            12758
          ],
          "81": [
            12884,
            13022
          ],
          "82": [
            13219,
            13282
          ],
          "83": [
            13339,
            13382
          ],
          "84": [
            13390,
            13401
          ]
        },
        "ERC1400.escrowExplicitTransfer": {
          "66": [
            15647,
            15712
          ],
          "67": [
            15716,
            15777
          ],
          "68": [
            15781,
            15845
          ],
          "69": [
            15849,
            15898
          ],
          "70": [
            15903,
            15964
          ],
          "71": [
            15969,
            16048
          ]
        },
        "ERC1400.escrowTransfer": {
          "24": [
            14960,
            15014
          ],
          "25": [
            15019,
            15084
          ],
          "26": [
            15088,
            15149
          ],
          "27": [
            15153,
            15217
          ],
          "28": [
            15221,
            15273
          ],
          "29": [
            15277,
            15326
          ],
          "30": [
            15330,
            15383
          ],
          "31": [
            15388,
            15449
          ],
          "32": [
            15454,
            15525
          ]
        },
        "ERC1400.getHolderNbuid": {
          "23": [
            1891,
            1923
          ]
        },
        "ERC1400.getPartitionOwner": {
          "43": [
            1498,
            1535
          ]
        },
        "ERC1400.getPartitionStatus": {
          "57": [
            1629,
            1673
          ]
        },
        "ERC1400.getUid": {
          "85": [
            2012,
            2042
          ]
        },
        "ERC1400.isControllable": {
          "33": [
            7692,
            7708
          ]
        },
        "ERC1400.partitionsOf": {
          "55": [
            2732,
            2761
          ],
          "56": [
            2722,
            2725
          ]
        },
        "ERC1400.registerAccount": {
          "77": [
            3249,
            3298
          ],
          "78": [
            3302,
            3331
          ],
          "79": [
            3335,
            3390
          ]
        },
        "ERC1400.registerController": {
          "73": [
            7151,
            7181
          ],
          "74": [
            7185,
            7234
          ],
          "75": [
            7238,
            7303
          ],
          "76": [
            7308,
            7367
          ]
        },
        "ERC1400.registerEscrow": {
          "20": [
            10746,
            10771
          ],
          "21": [
            10775,
            10826
          ],
          "22": [
            10830,
            10841
          ]
        },
        "ERC1400.revokeController": {
          "58": [
            7464,
            7494
          ],
          "59": [
            7498,
            7567
          ],
          "60": [
            7572,
            7627
          ]
        },
        "ERC1400.sellPartition": {
          "34": [
            4276,
            4329
          ],
          "35": [
            4333,
            4409
          ],
          "36": [
            4414,
            4449
          ],
          "37": [
            4453,
            4514
          ],
          "38": [
            4645,
            4674
          ],
          "39": [
            4634,
            4639
          ],
          "40": [
            4576,
            4579
          ],
          "41": [
            4687,
            4712
          ]
        },
        "ERC1400.stopOptionByPromisor": {
          "99": [
            13595,
            13660
          ],
          "100": [
            13664,
            13728
          ],
          "101": [
            13732,
            13784
          ],
          "102": [
            13788,
            13840
          ],
          "103": [
            13844,
            13919
          ],
          "104": [
            13923,
            14001
          ],
          "105": [
            14006,
            14058
          ],
          "106": [
            14062,
            14125
          ]
        },
        "ERC1400.stopOptionByRecipient": {
          "90": [
            14226,
            14291
          ],
          "91": [
            14295,
            14359
          ],
          "92": [
            14363,
            14415
          ],
          "93": [
            14419,
            14473
          ],
          "94": [
            14477,
            14552
          ],
          "95": [
            14556,
            14634
          ],
          "96": [
            14639,
            14692
          ],
          "97": [
            14696,
            14759
          ],
          "98": [
            14763,
            14806
          ]
        },
        "ERC1400.transferByPartition": {
          "0": [
            4947,
            5010
          ],
          "1": [
            5015,
            5079
          ],
          "2": [
            5752,
            5819
          ]
        },
        "ERC1400.whoIsOrigin": {
          "72": [
            11647,
            11663
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "61:15993:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4853:970;;;;;;;;;;;;;;;;-1:-1:-1;4853:970:5;;;-1:-1:-1;;;;;4853:970:5;;;;;;;;;;:::i;:::-;;10919:392;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10919:392:5;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1143:54;;;;;;;;;;;;;;;;-1:-1:-1;1143:54:5;;:::i;:::-;;;;;-1:-1:-1;;;;;1143:54:5;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1143:54:5;;;;;;;;;;;;;;;;;;1049:42;;;;;;;;;;;;;;;;-1:-1:-1;1049:42:5;-1:-1:-1;;;;;1049:42:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3516:580;;;;;;;;;;;;;;;;-1:-1:-1;3516:580:5;;;;;;;:::i;810:48::-;;;;;;;;;;;;;;;;-1:-1:-1;810:48:5;;:::i;:::-;;;;;-1:-1:-1;;;;;810:48:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11379:162;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11379:162:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;10681:164;;;;;;;;;;;;;;;;-1:-1:-1;10681:164:5;-1:-1:-1;;;;;10681:164:5;;:::i;1818:110::-;;;;;;;;;;;;;;;;-1:-1:-1;1818:110:5;-1:-1:-1;;;;;1818:110:5;;:::i;14873:656::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14873:656:5;;;;;;;;;;;;;:::i;7634:78::-;;;:::i;4219:497::-;;;;;;;;;;;;;;;;-1:-1:-1;4219:497:5;;:::i;2794:129::-;;;;;;;;;;;;;;;;-1:-1:-1;2794:129:5;;:::i;1411:::-;;;;;;;;;;;;;;;;-1:-1:-1;1411:129:5;;:::i;:::-;;;;-1:-1:-1;;;;;1411:129:5;;;;;;;;;;;;;;11732:736;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11732:736:5;;;;;;;;;;;;;;;;;;:::i;2926:250::-;;;;;;;;;;;;;;;;-1:-1:-1;2926:250:5;-1:-1:-1;;;;;2926:250:5;;:::i;2530:261::-;;;;;;;;;;;;;;;;-1:-1:-1;2530:261:5;-1:-1:-1;;;;;2530:261:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1544:134;;;;;;;;;;;;;;;;-1:-1:-1;1544:134:5;;:::i;7407:224::-;;;;;;;;;;;;;;;;-1:-1:-1;7407:224:5;-1:-1:-1;;;;;7407:224:5;;:::i;7716:1139::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7716:1139:5;;;;;;;;;;;;;;;;;:::i;15533:519::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15533:519:5;;;;;;;;;;;;;;;;;;;;;;:::i;910:61::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;910:61:5;;;;;;;;:::i;11596:71::-;;;:::i;7092:279::-;;;;;;;;;;;;;;;;-1:-1:-1;7092:279:5;-1:-1:-1;;;;;7092:279:5;;:::i;3212:182::-;;;:::i;12514:891::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12514:891:5;;;;;;;;:::i;1932:115::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1932:115:5;;;;;;;;:::i;8859:1057::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8859:1057:5;;;;;;;;:::i;14147:678::-;;;;;;;;;;;;;;;;-1:-1:-1;14147:678:5;;:::i;13517:627::-;;;;;;;;;;;;;;;;-1:-1:-1;13517:627:5;;:::i;4853:970::-;-1:-1:-1;;;;;4955:17:5;;4983:26;4955:17;;;:7;:17;;;;;:24;;;;;:54;;;;;;;;;4947:63;;;;;;5015:64;5037:12;5051:10;5063:8;5073:5;5015:21;:64::i;:::-;5757:62;;;;;;5791:10;5757:62;;;;-1:-1:-1;;;;;5757:62:5;;;;;;;;;;;;;;;;;;;;;;;4853:970;;;:::o;10919:392::-;11011:4;-1:-1:-1;;;;;11030:20:5;;11022:29;;;;;;11072:24;;;;:10;:24;;;;;:31;;;11063:40;;;11055:49;;;;;;11130:24;;;;:10;:24;;;;;:30;-1:-1:-1;;;;;11130:30:5;11116:10;:44;11108:53;;;;;;11185:10;11168:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;11168:36:5;;;;;;;;;;;:50;;;;;;;;;:58;;;11237:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11303:4:5;10919:392;;;;;:::o;1143:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1143:54:5;;;;;;;;:::o;1049:42::-;;;;;;;;;;;;;;;;;;;;;:::o;3516:580::-;3596:17;3588:26;;;;;;3634:10;3656:26;3626:19;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;3618:65;;;;;;3695:13;;:35;;;-1:-1:-1;;;3695:35:5;;3719:10;3695:35;;;;;;3734:6;;-1:-1:-1;;;;;3695:13:5;;:23;;:35;;;;;;;;;;;;;;:13;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3695:35:5;:45;;3687:54;;;;;;3753:13;;:42;;;-1:-1:-1;;;3753:42:5;;3776:10;3753:42;;;;;;;;;;;;-1:-1:-1;;;;;3753:13:5;;;;:22;;:42;;;;;;;;;;;;;;;:13;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3753:42:5;3745:51;;;;;;3801:24;;;;:10;:24;;;;;;;;:43;;-1:-1:-1;;;;;;3801:43:5;3834:10;3801:43;;;;;-1:-1:-1;3848:31:5;;;:40;;;;3928:3;3892:33;;;:39;;;;3935:31;;;;:63;;-1:-1:-1;;3935:63:5;;;4003:19;;;:7;:19;;;;;:27;;;;;;;;;4034:16;;;;;;:43;;;;;;;;:58;3516:580::o;810:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;810:48:5;;;;;;;;;:::o;11379:162::-;-1:-1:-1;;;;;11492:23:5;;;11473:7;11492:23;;;:16;:23;;;;;;;;:31;;;;;;;;;;;;:45;;;;;;;;11379:162::o;10681:164::-;-1:-1:-1;;;;;10746:15:5;;10737:4;10746:15;;;:7;:15;;;;;:25;;;10775:22;;;;:51;;10800:26;;-1:-1:-1;;10775:51:5;;;;10800:26;10775:51;;;;;-1:-1:-1;10837:4:5;;10681:164;-1:-1:-1;;10681:164:5:o;1818:110::-;-1:-1:-1;;;;;1903:13:5;1877:4;1903:13;;;:7;:13;;;;;:19;;1818:110::o;14873:656::-;14981:22;;;;:8;:22;;;;;:32;;;-1:-1:-1;;;;;14981:32:5;14968:9;:45;14960:54;;;;;;15057:26;15035:10;15027:19;;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;15019:65;;;;;;-1:-1:-1;;;;;15096:15:5;;15122:26;15096:15;;;:7;:15;;;;;:22;;;;;:52;;;;;;;;;15088:61;;;;;;15169:9;15190:26;15161:18;;;:7;:18;;;;;:25;;;;;:55;;;;;;;;;15153:64;;;;;;15243:22;;;;:8;:22;;;;;:29;-1:-1:-1;;;;;15243:29:5;15229:10;:43;15221:52;;;;;;15295:24;;;;:10;:24;;;;;:30;-1:-1:-1;;;;;15285:40:5;;;15295:30;;15285:40;15277:49;;;;;;15345:22;;;;:8;:22;;;;;:37;;;15338:3;:44;;15330:53;;;;;;15388:61;15410:12;15424:6;15432:9;15443:5;15388:21;:61::i;:::-;15459:66;;;15474:10;15459:66;;-1:-1:-1;;;;;15459:66:5;;;;;;15494:9;15459:66;;;;;;;;;;;;;;;;;;;;;;;;;;;14873:656;;;:::o;7634:78::-;7683:4;7699:9;-1:-1:-1;;;7699:9:5;;;;;7634:78::o;4219:497::-;4298:24;;;;:10;:24;;;;;:30;-1:-1:-1;;;;;4298:30:5;4284:10;:44;4276:53;;;;;;4341:13;;;;4376:24;;;:10;:24;;;;;;;;:31;;;;4341:67;;-1:-1:-1;;;4341:67:5;;4364:10;4341:67;;;;;;;;;;;;;-1:-1:-1;;;;;4341:13:5;;;;:22;;:67;;;;;;;;;;;;;;:13;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4341:67:5;4333:76;;;;;;4448:1;4414:24;;;:10;:24;;;;;;;:31;;;:35;;;4453:31;;:61;;-1:-1:-1;;4453:61:5;;;;;;4448:1;4529:155;4557:10;4549:19;;;;:7;:19;;;;;:25;4545:29;;4529:155;;;4594:10;4589:16;;;;:4;:16;;;;;;;;4608:1;4606:3;;4589:21;;;;;;;;:37;;4586:94;;;4657:10;4649:19;;;;:7;:19;;;;;:25;4638:1;;-1:-1:-1;4586:94:5;4576:3;;4529:155;;;-1:-1:-1;4692:10:5;4711:1;4687:16;;;:4;:16;;;;;;;;4706:1;4704:3;;;4687:21;;;;;;;;:25;-1:-1:-1;4219:497:5:o;2794:129::-;2868:7;2888:24;;;:10;:24;;;;;:31;;;;2794:129::o;1411:::-;1481:7;1505:24;;;:10;:24;;;;;:30;-1:-1:-1;;;;;1505:30:5;;1411:129::o;11732:736::-;11862:4;11892:24;;;:10;:24;;;;;:30;-1:-1:-1;;;;;11892:30:5;11879:9;:43;11871:52;;;;;;11965:26;11943:10;11935:19;;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;11927:65;;;;;;12021:9;12004:27;;;;:16;:27;;;;;;;;12032:10;12004:39;;;;;;;:53;;;;;;;;;:70;-1:-1:-1;12004:70:5;11996:175;;;;-1:-1:-1;;;11996:175:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12176:24:5;;;;:10;:24;;;;;;;;:31;;;;:65;;-1:-1:-1;;12176:65:5;12210:31;12176:65;;;;;;12245:8;:22;;;;;:42;;-1:-1:-1;;;;;;12245:42:5;;;12277:10;12245:42;;;12291:37;;;:54;;;;12349:36;;;:52;;;;12405:32;;;:44;;-1:-1:-1;;;;;12405:44:5;;;;;;;;;;;;;;;12210:31;11732:736::o;2926:250::-;2984:7;;;3018:138;-1:-1:-1;;;;;3038:14:5;;;;;;:7;:14;;;;;:20;3034:24;;3018:138;;;-1:-1:-1;;;;;3073:11:5;;;;;;:4;:11;;;;;;;;3087:1;3085:3;;3073:16;;;;;;;;:21;3070:82;;-1:-1:-1;;;;;3122:11:5;;3111:28;3122:11;;;:4;:11;;;;;;;;3136:1;3134:3;;;3122:16;;;;;;;;;3111:28;;:10;:28;;;;;;:35;;3102:44;;;;;3070:82;3060:3;;3018:138;;;-1:-1:-1;3167:5:5;2926:250;-1:-1:-1;;2926:250:5:o;2530:261::-;-1:-1:-1;;;;;2655:14:5;;;;;;:7;:14;;;;;:20;2591:16;;;;2641:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2641:35:5;;2614:62;;2684:6;2680:86;-1:-1:-1;;;;;2700:14:5;;;;;;:7;:14;;;;;:20;2696:24;;2680:86;;;-1:-1:-1;;;;;2745:11:5;;;;;;:4;:11;;;;;;;;2759:1;2757:3;;2745:16;;;;;;;;2732:10;;:7;;2757:1;;2732:10;;;;;;;;;;;;;;;:29;2722:3;;2680:86;;1544:134;1615:4;1641:24;;;:10;:24;;;;;;;:31;;;;;;1636:37;;;;;;;1629:44;1544:134;-1:-1:-1;;1544:134:5:o;7407:224::-;7486:7;;-1:-1:-1;;;;;7486:7:5;7472:10;:21;7464:30;;;;;;7536;-1:-1:-1;;;;;7506:19:5;;;;;;:7;:19;;;;;:26;;;;;:60;;;;;;;;;7498:69;;;;;;-1:-1:-1;;;;;7572:19:5;;7601:26;7572:19;;;:7;:19;;;;;:26;;;;:55;;:26;;-1:-1:-1;;7572:55:5;;;;7601:26;7572:55;;;;;;7407:224;:::o;7716:1139::-;7847:30;7826:9;7818:18;;;;:7;:18;;;;;:25;;;;;:59;;;;;;;;;7810:68;;;;;;-1:-1:-1;;;;;7890:15:5;;7916:26;7890:15;;;:7;:15;;;;;:22;;;;;:52;;;;;;;;;7882:61;;;;;;-1:-1:-1;;;;;7955:17:5;;7983:26;7955:17;;;:7;:17;;;;;:24;;;;;:54;;;;;;;;;7947:63;;;;;;8015:86;8037:12;8051:6;8059:8;8069:10;:24;8080:12;8069:24;;;;;;;;;;;:31;;;8015:21;:86::i;:::-;8805:24;;;;:10;:24;;;;;;;;;:31;;;8757:94;;8776:9;8757:94;;;;;;;;;;;;;;-1:-1:-1;;;;;8757:94:5;;;;;;;;;;;;;;;;;7716:1139;;;:::o;15533:519::-;15685:26;15663:10;15655:19;;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;15647:65;;;;;;-1:-1:-1;;;;;15724:15:5;;15750:26;15724:15;;;:7;:15;;;;;:22;;;;;:52;;;;;;;;;15716:61;;;;;;-1:-1:-1;;;;;15789:18:5;;15818:26;15789:18;;;:7;:18;;;;;:25;;;;;:55;;;;;;;;;15781:64;;;;;;15867:24;;;;:10;:24;;;;;:30;-1:-1:-1;;;;;15857:40:5;;;15867:30;;15857:40;15849:49;;;;;;15903:61;15925:12;15939:6;15947:9;15958:5;15903:21;:61::i;:::-;15974:74;;;15997:10;15974:74;;-1:-1:-1;;;;;15974:74:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15533:519;;;;:::o;910:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;11596:71::-;11654:9;11596:71;:::o;7092:279::-;7173:7;;-1:-1:-1;;;;;7173:7:5;7159:10;:21;7151:30;;;;;;7193:13;;:35;;;-1:-1:-1;;;7193:35:5;;-1:-1:-1;;;;;7193:35:5;;;;;;;;;7232:1;;7193:13;;;;;:23;;:35;;;;;;;;;;;;;;;:13;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7193:35:5;:40;;7185:49;;;;;;-1:-1:-1;;;;;7246:19:5;;7276:26;7246:19;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;7238:65;;;;;;-1:-1:-1;;;;;7308:19:5;;;;;;:7;:19;;;;;7337:30;7308:26;;;:59;;-1:-1:-1;;7308:59:5;7337:30;;7308:59;;3212:182;3257:13;;:35;;;-1:-1:-1;;;3257:35:5;;3281:10;3257:35;;;;;;3296:1;;-1:-1:-1;;;;;3257:13:5;;:23;;:35;;;;;;;;;;;;;;:13;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3257:35:5;:40;;3249:49;;;;;;3310:10;3330:1;3302:19;;;:7;:19;;;;;:29;;;3335:26;;:55;;-1:-1:-1;;3335:55:5;;;3212:182::o;12514:891::-;12599:4;12659:24;;;:10;:24;;;;;:30;-1:-1:-1;;;;;12659:43:5;;;:30;;:43;12651:107;;;;-1:-1:-1;;;12651:107:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12922:26;12900:10;12892:19;;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;12884:138;;;;-1:-1:-1;;;12884:138:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13253:29;13219:24;;;:10;:24;;;;;;;;:31;;:63;;-1:-1:-1;;13219:63:5;;;13289:8;:22;;;;;13219:63;13289:37;;13329:3;-1:-1:-1;13286:101:5;;;13339:22;;;;:8;:22;;;;;13379:3;13339:37;;;;:43;13286:101;-1:-1:-1;13397:4:5;12514:891;;;;:::o;1932:115::-;-1:-1:-1;;;;;2024:10:5;;;;1995:7;2024:10;;;:4;:10;;;;;;;;:17;;;;;;;;;1932:115::o;8859:1057::-;8970:30;8949:9;8941:18;;;;:7;:18;;;;;:25;;;;;:59;;;;;;;;;8933:68;;;;;;-1:-1:-1;;;;;9013:15:5;;9039:26;9013:15;;;:7;:15;;;;;:22;;;;;:52;;;;;;;;;9005:61;;;;;;9071:87;9093:12;9107:6;9115:9;9126:10;:24;9137:12;9126:24;;;;;;;;;;;:31;;;9071:21;:87::i;:::-;9866:24;;;;:10;:24;;;;;;;;;:31;;;9826:86;;9847:9;9826:86;;;;;;;;;;;;;;-1:-1:-1;;;;;9826:86:5;;;;;;;;;;;;;8859:1057;;:::o;14147:678::-;14216:4;14264:26;14242:10;14234:19;;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;14226:65;;;;;;14311:9;14332:26;14303:18;;;:7;:18;;;;;:25;;;;;:55;;;;;;;;;14295:64;;;;;;14385:22;;;;:8;:22;;;;;:29;-1:-1:-1;;;;;14385:29:5;14371:10;:43;14363:52;;;;;;14440:22;;;;:8;:22;;;;;:32;;;-1:-1:-1;;;;;14440:32:5;14427:9;:45;14419:54;;;;;;14520:31;14485:24;;;;:10;:24;;;;;;;;:31;;;;;;:66;;;;;;;;14477:75;;;;;;14633:1;14573:24;;;:10;:24;;;;;;;;:30;-1:-1:-1;;;;;14573:30:5;14556:48;;:16;:48;;;;;14605:10;14556:60;;;;;;;:74;;;;;;;;:78;;;14654:8;:22;;;;;14573:30;14654:37;;14647:3;:44;;14639:53;;;;;;-1:-1:-1;14730:29:5;14696:24;;;:10;:24;;;;;;;;:31;;:63;;-1:-1:-1;;14696:63:5;;;14763:8;:22;;;;;14803:3;14696:63;14763:37;;;:43;14696:63;14147:678::o;13517:627::-;13585:4;13633:26;13611:10;13603:19;;;;:7;:19;;;;;:26;;;;;:56;;;;;;;;;13595:65;;;;;;13680:9;13701:26;13672:18;;;:7;:18;;;;;:25;;;;;:55;;;;;;;;;13664:64;;;;;;13754:22;;;;:8;:22;;;;;:29;-1:-1:-1;;;;;13754:29:5;13740:10;:43;13732:52;;;;;;13809:24;;;;:10;:24;;;;;:30;-1:-1:-1;;;;;13809:30:5;13796:9;:43;13788:52;;;;;;13887:31;13852:24;;;;:10;:24;;;;;;;;:31;;;;;;:66;;;;;;;;13844:75;;;;;;14000:1;13940:24;;;:10;:24;;;;;;;;:30;-1:-1:-1;;;;;13940:30:5;13923:48;;:16;:48;;;;;13972:10;13923:60;;;;;;;:74;;;;;;;;:78;;;14020:8;:22;;;;;13940:30;14020:37;;14014:3;:43;14006:52;;;;;;14096:29;14062:24;;;:10;:24;;;;;:31;;:63;;-1:-1:-1;;14062:63:5;;14096:29;14062:63;;5827:680;5958:13;;:33;;;-1:-1:-1;;;5958:33:5;;-1:-1:-1;;;;;5958:33:5;;;;;;;;;5995:5;;5958:13;;;;;:23;;:33;;;;;;;;;;;;;;;:13;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5958:33:5;:42;;5950:51;;;;;;6023:24;;;;:10;:24;;;;;:30;-1:-1:-1;;;;;6013:40:5;;;6023:30;;6013:40;6005:49;;;;;;6066:13;;:48;;;-1:-1:-1;;;6066:48:5;;-1:-1:-1;;;;;6066:48:5;;;;;;;6108:4;6066:48;;;;;;6118:5;;6066:13;;;;;:23;;:48;;;;;;;;;;;;;;;:13;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6066:48:5;:57;;6058:66;;;;;;6136:13;;:51;;;-1:-1:-1;;;6136:51:5;;-1:-1:-1;;;;;6136:51:5;;;;;;;;;;;;;;;;;;;;;;:13;;;;;:26;;:51;;;;;;;;;;;;;;:13;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6136:51:5;6128:60;;;;;;6193:24;;;;:10;:24;;;;;;;;:41;;-1:-1:-1;;;;;;6193:41:5;-1:-1:-1;;;;;6193:41:5;;;;;;;;6238:17;;:7;:17;;;;;:25;;-1:-1:-1;6238:25:5;;;;;6267:4;:14;;;;;:39;;;;;;;;:54;;;6193:24;6336:143;-1:-1:-1;;;;;6356:15:5;;;;;;:7;:15;;;;;:21;6352:25;;6336:143;;;-1:-1:-1;;;;;6392:12:5;;;;;;:4;:12;;;;;;;;6407:1;6405:3;;6392:17;;;;;;;;:33;;6389:86;;;-1:-1:-1;;;;;6448:15:5;;;;;;:7;:15;;;;;:21;6437:1;;-1:-1:-1;6389:86:5;6379:3;;6336:143;;;-1:-1:-1;;;;;;6482:12:5;;;6502:1;6482:12;;;:4;:12;;;;;;;;6497:1;6495:3;;;6482:17;;;;;;;;:21;;;;-1:-1:-1;;;5827:680:5:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowanceEscrow(address,address,uint256)": {
        "notice": "Allowance given to an escrow address on a partition*"
      },
      "approveEscrow(address,uint256,uint256)": {
        "notice": "Approve an escrow address for the transfer of a partition*"
      },
      "buyPartition(uint256,uint256)": {
        "notice": "Buy a partition through TokenContract payment. Used in ERC20 standard",
        "params": {
          "partitionUid": ", amount"
        }
      },
      "confinePartition(address,uint256,uint256,uint256)": {
        "notice": "Confinement of a Partition for a given duration*"
      },
      "deconfinePartition(address,uint256)": {
        "notice": "Deconfinement of a Partition*"
      },
      "escrowTransfer(address,uint256,uint256)": {
        "notice": "transfer partition from escrow*"
      },
      "registerAccount()": {
        "notice": "Register an account*"
      },
      "registerController(address)": {
        "notice": "Register a controller*"
      },
      "registerEscrow(address)": {
        "notice": "Register an escrow address (this should be the caller smart contract address)*"
      },
      "revokeController(address)": {
        "notice": "Revoke a controller*"
      },
      "sellPartition(uint256)": {
        "notice": "Sell a partition through TokenContract payment. Used in ERC20 standard",
        "params": {
          "partitionUid": ", amount"
        }
      },
      "stopOptionByPromisor(uint256)": {
        "notice": "stop the Option Exercise on a Partition by escrow account or after expiration of the exercise*"
      },
      "transferByPartition(uint256,address,uint256)": {
        "notice": "Transfer a partition through TokenContract payment. Used in ERC20 standard",
        "params": {
          "partitionUid": ", receiver account"
        }
      },
      "whoIsOrigin()": {
        "notice": "Get the message sender (help to debug)*"
      }
    },
    "version": 1
  },
  "offset": [
    61,
    16054
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xD91AE8C2 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xEA3D0196 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEA3D0196 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xF76FAC0E EQ PUSH2 0x70F JUMPI DUP1 PUSH4 0xF90D7717 EQ PUSH2 0x73B JUMPI DUP1 PUSH4 0xFCC45A0A EQ PUSH2 0x758 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xD91AE8C2 EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0xD9F226E9 EQ PUSH2 0x6AF JUMPI DUP1 PUSH4 0xE13E57E9 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0xE7810D09 EQ PUSH2 0x6E3 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x9B504387 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9B504387 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xAA93B05E EQ PUSH2 0x619 JUMPI DUP1 PUSH4 0xBFD889AF EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0xCA1A35CF EQ PUSH2 0x681 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x740AB8F4 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0x76C657C9 EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0x8B3E76FD EQ PUSH2 0x5BD JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x39D3AD77 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4F30D687 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4F30D687 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x4FB5EA9D EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x63857A7B EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x68AA16FF EQ PUSH2 0x4CC JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x39D3AD77 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x3D10E825 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x438115A2 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x4C783BF5 EQ PUSH2 0x451 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x18A5BBDC GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18A5BBDC EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x19F46E81 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x1B52FD8E EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x2E51DFD8 EQ PUSH2 0x38B JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x4A87A4F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x8D4C858 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x1005E262 EQ PUSH2 0x264 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x775 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x90F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2FA JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x92B JUMP JUMPDEST PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x377 JUMPI INVALID JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB37 JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x250 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFC8 JUMP JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x58C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x574 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x112F JUMP JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1156 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x12F2 JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x66B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1416 JUMP JUMPDEST PUSH2 0x4B0 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1437 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x1534 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1701 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x17E5 JUMP JUMPDEST PUSH2 0x250 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1932 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x79F JUMPI INVALID JUMPDEST EQ PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B5 DUP4 CALLER DUP5 DUP5 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLER PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xFB5BFA42AA80B3ED270D6FF371CDC41B1AAA1A6DD5C44E63960F7B6FF25F032F SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 LT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP9 DUP6 MSTORE DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE MLOAD PUSH32 0x9D1AC4B899375AA3769348593B01EAE2706D94B90BC92A3D45E72F574B8F054B SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 AND DUP5 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST DUP2 PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x956 JUMPI INVALID JUMPDEST EQ PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x79CC679 PUSH1 0xE4 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x79CC6790 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SWAP8 SWAP1 SWAP8 SSTORE TIMESTAMP SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x3 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP3 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 ADD SWAP5 DUP6 SWAP1 SSTORE SWAP2 DUP2 MSTORE DUP2 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 SWAP3 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x2 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN EQ PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xBD6 JUMPI INVALID JUMPDEST EQ PUSH2 0xBE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC0A JUMPI INVALID JUMPDEST EQ PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xC35 JUMPI INVALID JUMPDEST EQ PUSH2 0xC3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0xCA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB2 DUP2 DUP5 ORIGIN DUP6 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE ORIGIN DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x2F8AE5F6F3D09A6D675498229FA3C6D3BA3D5FAAA90CFC85893ABB07589309FB SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP5 ADD SLOAD DUP5 MLOAD PUSH4 0x1CC74859 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 PUSH4 0x1CC74859 SWAP4 PUSH1 0x44 DUP1 DUP4 ADD SWAP5 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xDD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xE58 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 EQ ISZERO PUSH2 0xE50 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xE00 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 SWAP5 ADD DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xEF2 JUMPI INVALID JUMPDEST EQ PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x5C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1DAB PUSH1 0x5C SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x3 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE SWAP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER OR DUP3 SSTORE DUP2 DUP4 ADD SWAP6 SWAP1 SWAP6 SSTORE SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x105C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1054 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP1 DUP7 ADD DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP2 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x1 ADD PUSH2 0xFCD JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1097 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10C1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x105C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x111C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x1150 JUMPI INVALID JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1199 JUMPI INVALID JUMPDEST EQ PUSH2 0x11A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD SWAP1 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 DUP4 JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11F8 JUMPI INVALID JUMPDEST EQ PUSH2 0x1202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x122C JUMPI INVALID JUMPDEST EQ PUSH2 0x1236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1260 JUMPI INVALID JUMPDEST EQ PUSH2 0x126A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128C DUP2 DUP5 DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 MLOAD ORIGIN DUP2 MSTORE SWAP2 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP3 SWAP1 DUP7 AND SWAP2 PUSH32 0xD723526895FC65DB0ACF8A82FC5AD744CC7B5C1CA543E2C1554AF226C5D3B1B2 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1315 JUMPI INVALID JUMPDEST EQ PUSH2 0x131F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1349 JUMPI INVALID JUMPDEST EQ PUSH2 0x1353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x137D JUMPI INVALID JUMPDEST EQ PUSH2 0x1387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B9 DUP2 DUP6 DUP6 DUP6 PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND DUP2 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0xF3665006498C43504090A58C1D42CE5073B77CCC50E2FE916967087E52FD3A0C SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST ORIGIN SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1500 JUMPI INVALID JUMPDEST EQ PUSH2 0x150A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 DUP1 PUSH2 0x11CD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x157F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D78 PUSH1 0x33 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1650 JUMPI INVALID JUMPDEST EQ PUSH2 0x168C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x45 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D33 PUSH1 0x45 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x16D0 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1724 JUMPI INVALID JUMPDEST EQ PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1758 JUMPI INVALID JUMPDEST EQ PUSH2 0x1762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1784 DUP2 DUP4 ORIGIN PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1A6C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 MLOAD ORIGIN DUP2 MSTORE SWAP2 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0x5CBE58C63D4E8D44ED895CB43CC52BBE40BCF56A6F32E215112961D9921AAA60 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x180A JUMPI INVALID JUMPDEST EQ PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1835 JUMPI INVALID JUMPDEST EQ PUSH2 0x183F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN EQ PUSH2 0x1888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x18AC JUMPI INVALID JUMPDEST EQ PUSH2 0x18B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP2 DUP3 ADD SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1957 JUMPI INVALID JUMPDEST EQ PUSH2 0x1961 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1982 JUMPI INVALID JUMPDEST EQ PUSH2 0x198C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x19AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ORIGIN EQ PUSH2 0x19D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x19F6 JUMPI INVALID JUMPDEST EQ PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x6 DUP3 MSTORE DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP GT PUSH2 0x1A4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x1AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x1B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0x1BA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1C39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x3 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP1 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP6 SWAP1 SSTORE DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x1CFF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP6 ADD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP7 EQ ISZERO PUSH2 0x1CF7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C8C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 SWAP7 ADD DUP4 MSTORE SWAP5 SWAP1 MSTORE SWAP3 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP POP JUMP INVALID PUSH13 0x61207472616E73616374696F6E KECCAK256 PUSH5 0x6F697420C3 DUP4 0xC2 0xAA PUSH21 0x726520C383C2A96D6973652064657075697320756E KECCAK256 PUSH4 0x6F6D7074 PUSH6 0x2064652073C3 DUP4 0xC2 0xA9 PUSH18 0x7565737472656C6520726563697069656E74 KECCAK256 PUSH6 0x7374206C6520 PUSH17 0x726F707269C383C2A97461697265206465 KECCAK256 PUSH13 0x6120706172746974696F6E6C65 KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH5 0x652073C383 0xC2 0xA9 PUSH18 0x75657374726520646F697420C383C2AA7472 PUSH6 0x206175746F72 PUSH10 0x73C383C2A920C383C2A0 KECCAK256 PUSH14 0x6F646966696572206C6520737461 PUSH21 0x7573206465206C6120706172746974696F6EA26469 PUSH17 0x667358221220F2BCE88195764ED295A641 CHAINID LOG1 DIV ADD PUSH32 0xC912F613321E11B364FFB45B9D9C59EC64736F6C634300060C00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        61,
        16054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "25": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F"
    },
    "42": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD91AE8C2"
    },
    "49": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xEA3D0196"
    },
    "60": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "GT",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xEA3D0196"
    },
    "71": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x476"
    },
    "75": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF76FAC0E"
    },
    "82": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x70F"
    },
    "86": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF90D7717"
    },
    "93": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x73B"
    },
    "97": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFCC45A0A"
    },
    "104": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x758"
    },
    "108": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "112": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD91AE8C2"
    },
    "120": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x689"
    },
    "124": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD9F226E9"
    },
    "131": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6AF"
    },
    "135": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE13E57E9"
    },
    "142": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B7"
    },
    "146": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE7810D09"
    },
    "153": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E3"
    },
    "157": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "161": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9B504387"
    },
    "169": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "GT",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9B504387"
    },
    "180": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E3"
    },
    "184": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xAA93B05E"
    },
    "191": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x619"
    },
    "195": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBFD889AF"
    },
    "202": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x655"
    },
    "206": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCA1A35CF"
    },
    "213": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "214": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x681"
    },
    "217": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "218": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "221": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "222": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "224": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "229": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x504"
    },
    "233": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "234": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "235": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x740AB8F4"
    },
    "240": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "241": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x52A"
    },
    "244": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "246": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x76C657C9"
    },
    "251": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "252": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A0"
    },
    "255": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "256": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8B3E76FD"
    },
    "262": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "263": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5BD"
    },
    "266": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "267": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "270": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "271": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "272": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "273": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39D3AD77"
    },
    "278": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "GT",
      "path": "5"
    },
    "279": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x187"
    },
    "282": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "283": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "284": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4F30D687"
    },
    "289": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "GT",
      "path": "5"
    },
    "290": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x156"
    },
    "293": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "294": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "295": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4F30D687"
    },
    "300": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "301": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x459"
    },
    "304": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "305": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "306": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4FB5EA9D"
    },
    "311": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "312": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x476"
    },
    "315": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "316": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "317": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x63857A7B"
    },
    "322": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "323": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x493"
    },
    "326": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "327": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "328": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x68AA16FF"
    },
    "333": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "334": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4CC"
    },
    "337": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "338": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "341": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "342": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "343": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "344": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39D3AD77"
    },
    "349": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "350": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D3"
    },
    "353": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "354": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "355": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3D10E825"
    },
    "360": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "361": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F9"
    },
    "364": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "365": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "366": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x438115A2"
    },
    "371": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "372": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41F"
    },
    "375": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "376": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "377": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4C783BF5"
    },
    "382": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "383": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x451"
    },
    "386": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "387": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "390": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "391": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "392": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "393": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18A5BBDC"
    },
    "398": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "GT",
      "path": "5"
    },
    "399": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C3"
    },
    "402": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "403": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "404": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18A5BBDC"
    },
    "409": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "410": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2BE"
    },
    "413": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "414": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "415": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x19F46E81"
    },
    "420": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "421": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30C"
    },
    "424": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "425": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "426": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1B52FD8E"
    },
    "431": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "432": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32F"
    },
    "435": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "436": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "437": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2E51DFD8"
    },
    "442": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "443": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38B"
    },
    "446": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "447": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "450": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMP",
      "path": "5"
    },
    "451": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "452": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "453": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4A87A4F"
    },
    "458": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "459": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1EA"
    },
    "462": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "463": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "464": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8D4C858"
    },
    "469": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "470": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21E"
    },
    "473": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "474": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "475": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1005E262"
    },
    "480": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "EQ",
      "path": "5"
    },
    "481": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x264"
    },
    "484": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "485": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "486": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "488": {
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "489": {
      "first_revert": true,
      "fn": null,
      "offset": [
        61,
        16054
      ],
      "op": "REVERT",
      "path": "5"
    },
    "490": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "491": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "494": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "496": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "DUP1",
      "path": "5"
    },
    "497": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "498": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "SUB",
      "path": "5"
    },
    "499": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "501": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "DUP2",
      "path": "5"
    },
    "502": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "LT",
      "path": "5"
    },
    "503": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "504": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x200"
    },
    "507": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "508": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "510": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "DUP1",
      "path": "5"
    },
    "511": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "REVERT",
      "path": "5"
    },
    "512": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "513": {
      "op": "POP"
    },
    "514": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "DUP1",
      "path": "5"
    },
    "515": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "516": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "523": {
      "op": "SHL"
    },
    "524": {
      "op": "SUB"
    },
    "525": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "DUP3",
      "path": "5"
    },
    "528": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "ADD",
      "path": "5"
    },
    "529": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "530": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "AND",
      "path": "5"
    },
    "531": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "532": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "534": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "ADD",
      "path": "5"
    },
    "535": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "536": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x775"
    },
    "539": {
      "fn": "ERC1400.transferByPartition",
      "jump": "i",
      "offset": [
        4853,
        5823
      ],
      "op": "JUMP",
      "path": "5"
    },
    "540": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "541": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "STOP",
      "path": "5"
    },
    "542": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "543": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "546": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "548": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP1",
      "path": "5"
    },
    "549": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "550": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SUB",
      "path": "5"
    },
    "551": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "553": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP2",
      "path": "5"
    },
    "554": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "LT",
      "path": "5"
    },
    "555": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "556": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x234"
    },
    "559": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "560": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "562": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP1",
      "path": "5"
    },
    "563": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "REVERT",
      "path": "5"
    },
    "564": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "565": {
      "op": "POP"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "572": {
      "op": "SHL"
    },
    "573": {
      "op": "SUB"
    },
    "574": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP2",
      "path": "5"
    },
    "575": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "576": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "AND",
      "path": "5"
    },
    "577": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "578": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "580": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP2",
      "path": "5"
    },
    "581": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "ADD",
      "path": "5"
    },
    "582": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "583": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "584": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "586": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "ADD",
      "path": "5"
    },
    "587": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "588": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x808"
    },
    "591": {
      "fn": "ERC1400.approveEscrow",
      "jump": "i",
      "offset": [
        10919,
        11311
      ],
      "op": "JUMP",
      "path": "5"
    },
    "592": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "593": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "595": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP1",
      "path": "5"
    },
    "596": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "597": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "598": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "599": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "600": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP3",
      "path": "5"
    },
    "601": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "602": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "603": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "604": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "DUP2",
      "path": "5"
    },
    "605": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "606": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SUB",
      "path": "5"
    },
    "607": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "ADD",
      "path": "5"
    },
    "610": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "611": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "RETURN",
      "path": "5"
    },
    "612": {
      "offset": [
        1143,
        1197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "613": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x281"
    },
    "616": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "618": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP1",
      "path": "5"
    },
    "619": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "620": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SUB",
      "path": "5"
    },
    "621": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "623": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP2",
      "path": "5"
    },
    "624": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "LT",
      "path": "5"
    },
    "625": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "626": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27A"
    },
    "629": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "630": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "632": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP1",
      "path": "5"
    },
    "633": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "REVERT",
      "path": "5"
    },
    "634": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "offset": [
        1143,
        1197
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "637": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8DD"
    },
    "640": {
      "fn": "ERC1400.approveEscrow",
      "jump": "i",
      "offset": [
        1143,
        1197
      ],
      "op": "JUMP",
      "path": "5"
    },
    "641": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "642": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "644": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "645": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP1",
      "path": "5"
    },
    "646": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP6",
      "path": "5"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "653": {
      "op": "SHL"
    },
    "654": {
      "op": "SUB"
    },
    "655": {
      "offset": [
        1143,
        1197
      ],
      "op": "AND",
      "path": "5"
    },
    "656": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP2",
      "path": "5"
    },
    "657": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "658": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "660": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ADD",
      "path": "5"
    },
    "661": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "662": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP2",
      "path": "5"
    },
    "663": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "664": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "666": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ADD",
      "path": "5"
    },
    "667": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP4",
      "path": "5"
    },
    "668": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP2",
      "path": "5"
    },
    "669": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "670": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "672": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ADD",
      "path": "5"
    },
    "673": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP3",
      "path": "5"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "op": "SUB"
    },
    "682": {
      "offset": [
        1143,
        1197
      ],
      "op": "AND",
      "path": "5"
    },
    "683": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP2",
      "path": "5"
    },
    "684": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "685": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "687": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ADD",
      "path": "5"
    },
    "688": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "689": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "POP",
      "path": "5"
    },
    "690": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "POP",
      "path": "5"
    },
    "691": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "POP",
      "path": "5"
    },
    "692": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "POP",
      "path": "5"
    },
    "693": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "POP",
      "path": "5"
    },
    "694": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "696": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "697": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP1",
      "path": "5"
    },
    "698": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "699": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SUB",
      "path": "5"
    },
    "700": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "701": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "RETURN",
      "path": "5"
    },
    "702": {
      "offset": [
        1049,
        1091
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "703": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "706": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "708": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP1",
      "path": "5"
    },
    "709": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "710": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SUB",
      "path": "5"
    },
    "711": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "713": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP2",
      "path": "5"
    },
    "714": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "LT",
      "path": "5"
    },
    "715": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "716": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D4"
    },
    "719": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "720": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "722": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP1",
      "path": "5"
    },
    "723": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "REVERT",
      "path": "5"
    },
    "724": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "725": {
      "op": "POP"
    },
    "726": {
      "offset": [
        1049,
        1091
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "SUB"
    },
    "735": {
      "offset": [
        1049,
        1091
      ],
      "op": "AND",
      "path": "5"
    },
    "736": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90F"
    },
    "739": {
      "fn": "ERC1400.approveEscrow",
      "jump": "i",
      "offset": [
        1049,
        1091
      ],
      "op": "JUMP",
      "path": "5"
    },
    "740": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "741": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "743": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "744": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP1",
      "path": "5"
    },
    "745": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP4",
      "path": "5"
    },
    "746": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP2",
      "path": "5"
    },
    "747": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "748": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "750": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "ADD",
      "path": "5"
    },
    "751": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP3",
      "path": "5"
    },
    "752": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "754": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP2",
      "path": "5"
    },
    "755": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "GT",
      "path": "5"
    },
    "756": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "757": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FA"
    },
    "760": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "761": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "INVALID",
      "path": "5"
    },
    "762": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "763": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP2",
      "path": "5"
    },
    "764": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "765": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "767": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "ADD",
      "path": "5"
    },
    "768": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "769": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "POP",
      "path": "5"
    },
    "770": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "POP",
      "path": "5"
    },
    "771": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "POP",
      "path": "5"
    },
    "772": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "774": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "775": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP1",
      "path": "5"
    },
    "776": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "777": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SUB",
      "path": "5"
    },
    "778": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "779": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "RETURN",
      "path": "5"
    },
    "780": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "781": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "784": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "786": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "DUP1",
      "path": "5"
    },
    "787": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "788": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "SUB",
      "path": "5"
    },
    "789": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "791": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "DUP2",
      "path": "5"
    },
    "792": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "LT",
      "path": "5"
    },
    "793": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "794": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x322"
    },
    "797": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "798": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "800": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "DUP1",
      "path": "5"
    },
    "801": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "REVERT",
      "path": "5"
    },
    "802": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "803": {
      "op": "POP"
    },
    "804": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "DUP1",
      "path": "5"
    },
    "805": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "806": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "807": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "809": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "ADD",
      "path": "5"
    },
    "810": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "811": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92B"
    },
    "814": {
      "fn": "ERC1400.buyPartition",
      "jump": "i",
      "offset": [
        3516,
        4096
      ],
      "op": "JUMP",
      "path": "5"
    },
    "815": {
      "offset": [
        810,
        858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "816": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34C"
    },
    "819": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "821": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP1",
      "path": "5"
    },
    "822": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "823": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SUB",
      "path": "5"
    },
    "824": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "826": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP2",
      "path": "5"
    },
    "827": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "LT",
      "path": "5"
    },
    "828": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "829": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x345"
    },
    "832": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "833": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "835": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP1",
      "path": "5"
    },
    "836": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "REVERT",
      "path": "5"
    },
    "837": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "offset": [
        810,
        858
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "840": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xACF"
    },
    "843": {
      "fn": "ERC1400.buyPartition",
      "jump": "i",
      "offset": [
        810,
        858
      ],
      "op": "JUMP",
      "path": "5"
    },
    "844": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "845": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "847": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "848": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP1",
      "path": "5"
    },
    "849": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP6",
      "path": "5"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "856": {
      "op": "SHL"
    },
    "857": {
      "op": "SUB"
    },
    "858": {
      "offset": [
        810,
        858
      ],
      "op": "AND",
      "path": "5"
    },
    "859": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP2",
      "path": "5"
    },
    "860": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "861": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "863": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ADD",
      "path": "5"
    },
    "864": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP5",
      "path": "5"
    },
    "865": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP2",
      "path": "5"
    },
    "866": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "867": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "869": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ADD",
      "path": "5"
    },
    "870": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP4",
      "path": "5"
    },
    "871": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP2",
      "path": "5"
    },
    "872": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "873": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "875": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ADD",
      "path": "5"
    },
    "876": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP3",
      "path": "5"
    },
    "877": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "879": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP2",
      "path": "5"
    },
    "880": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "GT",
      "path": "5"
    },
    "881": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "882": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x377"
    },
    "885": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "886": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "INVALID",
      "path": "5"
    },
    "887": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "888": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP2",
      "path": "5"
    },
    "889": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "890": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "892": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ADD",
      "path": "5"
    },
    "893": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "894": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "POP",
      "path": "5"
    },
    "895": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "POP",
      "path": "5"
    },
    "896": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "POP",
      "path": "5"
    },
    "897": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "POP",
      "path": "5"
    },
    "898": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "POP",
      "path": "5"
    },
    "899": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "901": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "902": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP1",
      "path": "5"
    },
    "903": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "904": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SUB",
      "path": "5"
    },
    "905": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "906": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "RETURN",
      "path": "5"
    },
    "907": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "908": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1"
    },
    "911": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "913": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP1",
      "path": "5"
    },
    "914": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "915": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SUB",
      "path": "5"
    },
    "916": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "918": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "919": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "LT",
      "path": "5"
    },
    "920": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "921": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A1"
    },
    "924": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "925": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "927": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP1",
      "path": "5"
    },
    "928": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "REVERT",
      "path": "5"
    },
    "929": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "op": "SUB"
    },
    "939": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "940": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "941": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "942": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "AND",
      "path": "5"
    },
    "943": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "944": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "946": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "947": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "ADD",
      "path": "5"
    },
    "948": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "949": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "950": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "951": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "AND",
      "path": "5"
    },
    "952": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "953": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "955": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "ADD",
      "path": "5"
    },
    "956": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "957": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB05"
    },
    "960": {
      "fn": "ERC1400.allowanceEscrow",
      "jump": "i",
      "offset": [
        11379,
        11541
      ],
      "op": "JUMP",
      "path": "5"
    },
    "961": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "962": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "964": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP1",
      "path": "5"
    },
    "965": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "966": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "967": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP3",
      "path": "5"
    },
    "968": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "969": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "970": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "971": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "972": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "973": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SUB",
      "path": "5"
    },
    "974": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "976": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "ADD",
      "path": "5"
    },
    "977": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "978": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "RETURN",
      "path": "5"
    },
    "979": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "980": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "983": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "985": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "DUP1",
      "path": "5"
    },
    "986": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "987": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "SUB",
      "path": "5"
    },
    "988": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "990": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "DUP2",
      "path": "5"
    },
    "991": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "LT",
      "path": "5"
    },
    "992": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "993": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E9"
    },
    "996": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "997": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "999": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1000": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1001": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "op": "SUB"
    },
    "1012": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "AND",
      "path": "5"
    },
    "1013": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB37"
    },
    "1016": {
      "fn": "ERC1400.registerEscrow",
      "jump": "i",
      "offset": [
        10681,
        10845
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1017": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1018": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1"
    },
    "1021": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1023": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1024": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1025": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "SUB",
      "path": "5"
    },
    "1026": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1028": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1029": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "LT",
      "path": "5"
    },
    "1030": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1031": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40F"
    },
    "1034": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1035": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1037": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1038": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1039": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1048": {
      "op": "SHL"
    },
    "1049": {
      "op": "SUB"
    },
    "1050": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "AND",
      "path": "5"
    },
    "1051": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB72"
    },
    "1054": {
      "fn": "ERC1400.getHolderNbuid",
      "jump": "i",
      "offset": [
        1818,
        1928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1055": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1056": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1059": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1061": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1062": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1063": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "SUB",
      "path": "5"
    },
    "1064": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1066": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1067": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "LT",
      "path": "5"
    },
    "1068": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1069": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x435"
    },
    "1072": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1073": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1075": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1076": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1077": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1088": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1089": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "AND",
      "path": "5"
    },
    "1090": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1091": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1093": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1094": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "ADD",
      "path": "5"
    },
    "1095": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1096": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1097": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1099": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "ADD",
      "path": "5"
    },
    "1100": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1101": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB8D"
    },
    "1104": {
      "fn": "ERC1400.escrowTransfer",
      "jump": "i",
      "offset": [
        14873,
        15529
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1105": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7634,
        7712
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1106": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7634,
        7712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "1109": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7634,
        7712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD0C"
    },
    "1112": {
      "fn": "ERC1400.isControllable",
      "jump": "i",
      "offset": [
        7634,
        7712
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1113": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1114": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1117": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1119": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1120": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1121": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "SUB",
      "path": "5"
    },
    "1122": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1124": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1125": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "LT",
      "path": "5"
    },
    "1126": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1127": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x46F"
    },
    "1130": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1131": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1133": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1134": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1135": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1138": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD1C"
    },
    "1141": {
      "fn": "ERC1400.sellPartition",
      "jump": "i",
      "offset": [
        4219,
        4716
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1142": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1143": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1"
    },
    "1146": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1148": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1149": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1150": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "SUB",
      "path": "5"
    },
    "1151": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1153": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1154": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "LT",
      "path": "5"
    },
    "1155": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1156": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48C"
    },
    "1159": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1160": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1162": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1163": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1164": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1165": {
      "op": "POP"
    },
    "1166": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1167": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7C"
    },
    "1170": {
      "fn": "ERC1400.balanceByPartition",
      "jump": "i",
      "offset": [
        2794,
        2923
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1171": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1172": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B0"
    },
    "1175": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1177": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1178": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1179": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "SUB",
      "path": "5"
    },
    "1180": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1182": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1183": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "LT",
      "path": "5"
    },
    "1184": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1185": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A9"
    },
    "1188": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1189": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1191": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1192": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1193": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1196": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE91"
    },
    "1199": {
      "fn": "ERC1400.getPartitionOwner",
      "jump": "i",
      "offset": [
        1411,
        1540
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1200": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1201": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1203": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1204": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1211": {
      "op": "SHL"
    },
    "1212": {
      "op": "SUB"
    },
    "1213": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1214": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1215": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "AND",
      "path": "5"
    },
    "1216": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1217": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1218": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1219": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1220": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1221": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1222": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "SUB",
      "path": "5"
    },
    "1223": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1225": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "ADD",
      "path": "5"
    },
    "1226": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1227": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1228": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1229": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "1232": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1234": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1235": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1236": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "SUB",
      "path": "5"
    },
    "1237": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1239": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1240": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "LT",
      "path": "5"
    },
    "1241": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1242": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E2"
    },
    "1245": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1246": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1248": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1249": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1250": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1258": {
      "op": "SHL"
    },
    "1259": {
      "op": "SUB"
    },
    "1260": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1261": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1262": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "AND",
      "path": "5"
    },
    "1263": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1264": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1266": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1267": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "ADD",
      "path": "5"
    },
    "1268": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1269": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1270": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1272": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1273": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "ADD",
      "path": "5"
    },
    "1274": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1275": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1276": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1278": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "ADD",
      "path": "5"
    },
    "1279": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1280": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEAC"
    },
    "1283": {
      "fn": "ERC1400.confinePartition",
      "jump": "i",
      "offset": [
        11732,
        12468
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1284": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1285": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1"
    },
    "1288": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1290": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1291": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1292": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "SUB",
      "path": "5"
    },
    "1293": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1295": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1296": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "LT",
      "path": "5"
    },
    "1297": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1298": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x51A"
    },
    "1301": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1302": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1304": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1305": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1306": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "AND",
      "path": "5"
    },
    "1318": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFC8"
    },
    "1321": {
      "fn": "ERC1400.balanceOf",
      "jump": "i",
      "offset": [
        2926,
        3176
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1322": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1323": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x550"
    },
    "1326": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1328": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1329": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1330": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SUB",
      "path": "5"
    },
    "1331": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1333": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1334": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "LT",
      "path": "5"
    },
    "1335": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1336": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x540"
    },
    "1339": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1340": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1342": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1343": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1344": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1345": {
      "op": "POP"
    },
    "1346": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "op": "SUB"
    },
    "1355": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "AND",
      "path": "5"
    },
    "1356": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1063"
    },
    "1359": {
      "fn": "ERC1400.partitionsOf",
      "jump": "i",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1360": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1361": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1363": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1364": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1365": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1367": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1368": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1369": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1370": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1371": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1372": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1373": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1374": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "1375": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1376": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1377": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1378": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1379": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1380": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1381": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1382": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1383": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1384": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "1385": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1386": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1387": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1388": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "1389": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1390": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MUL",
      "path": "5"
    },
    "1391": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1392": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1393": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1394": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1396": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1397": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1398": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1399": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "LT",
      "path": "5"
    },
    "1400": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1401": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x58C"
    },
    "1404": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1405": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1406": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1407": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "1408": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1409": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1410": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1411": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "1412": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1413": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1415": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "1416": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x574"
    },
    "1419": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1420": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1421": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1422": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1423": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1424": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1425": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1426": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1427": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "ADD",
      "path": "5"
    },
    "1428": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1429": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1430": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1431": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "1432": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1434": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1435": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1436": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1437": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SUB",
      "path": "5"
    },
    "1438": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1439": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "RETURN",
      "path": "5"
    },
    "1440": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1441": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1"
    },
    "1444": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1446": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1447": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1448": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "SUB",
      "path": "5"
    },
    "1449": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1451": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1452": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "LT",
      "path": "5"
    },
    "1453": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1454": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B6"
    },
    "1457": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1458": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1460": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1461": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1462": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1465": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x112F"
    },
    "1468": {
      "fn": "ERC1400.getPartitionStatus",
      "jump": "i",
      "offset": [
        1544,
        1678
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1469": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1470": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1473": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1475": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1476": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1477": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "SUB",
      "path": "5"
    },
    "1478": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1480": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1481": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "LT",
      "path": "5"
    },
    "1482": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1483": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D3"
    },
    "1486": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1487": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1489": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1490": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1491": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "SUB"
    },
    "1502": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "AND",
      "path": "5"
    },
    "1503": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1156"
    },
    "1506": {
      "fn": "ERC1400.revokeController",
      "jump": "i",
      "offset": [
        7407,
        7631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1507": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1508": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1511": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1513": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1514": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1515": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "SUB",
      "path": "5"
    },
    "1516": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1518": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1519": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "LT",
      "path": "5"
    },
    "1520": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1521": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F9"
    },
    "1524": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1525": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1528": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1529": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1537": {
      "op": "SHL"
    },
    "1538": {
      "op": "SUB"
    },
    "1539": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1540": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1541": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1542": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "AND",
      "path": "5"
    },
    "1543": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1544": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1546": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1547": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "ADD",
      "path": "5"
    },
    "1548": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1549": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1550": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1551": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "AND",
      "path": "5"
    },
    "1552": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1553": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1555": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "ADD",
      "path": "5"
    },
    "1556": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1557": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11D5"
    },
    "1560": {
      "fn": "ERC1400.controllerTransfer",
      "jump": "i",
      "offset": [
        7716,
        8855
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1561": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1562": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1565": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1567": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1568": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1569": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "SUB",
      "path": "5"
    },
    "1570": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "1572": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1573": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "LT",
      "path": "5"
    },
    "1574": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1575": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x62F"
    },
    "1578": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1579": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1581": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1582": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1583": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1591": {
      "op": "SHL"
    },
    "1592": {
      "op": "SUB"
    },
    "1593": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1594": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1595": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1596": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "AND",
      "path": "5"
    },
    "1597": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1598": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1600": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1601": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "ADD",
      "path": "5"
    },
    "1602": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1603": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1604": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1605": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "AND",
      "path": "5"
    },
    "1606": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1607": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1609": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1610": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "ADD",
      "path": "5"
    },
    "1611": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1612": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1613": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1615": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "ADD",
      "path": "5"
    },
    "1616": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1617": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12F2"
    },
    "1620": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "jump": "i",
      "offset": [
        15533,
        16052
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1621": {
      "offset": [
        910,
        971
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1622": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1"
    },
    "1625": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1627": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1628": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1629": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SUB",
      "path": "5"
    },
    "1630": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1632": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1633": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "LT",
      "path": "5"
    },
    "1634": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1635": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66B"
    },
    "1638": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1639": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1641": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1642": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1643": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1651": {
      "op": "SHL"
    },
    "1652": {
      "op": "SUB"
    },
    "1653": {
      "offset": [
        910,
        971
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1654": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1655": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "AND",
      "path": "5"
    },
    "1656": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1657": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1659": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "ADD",
      "path": "5"
    },
    "1660": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1661": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1416"
    },
    "1664": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "jump": "i",
      "offset": [
        910,
        971
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1665": {
      "fn": "ERC1400.whoIsOrigin",
      "offset": [
        11596,
        11667
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1666": {
      "fn": "ERC1400.whoIsOrigin",
      "offset": [
        11596,
        11667
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B0"
    },
    "1669": {
      "fn": "ERC1400.whoIsOrigin",
      "offset": [
        11596,
        11667
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1433"
    },
    "1672": {
      "fn": "ERC1400.whoIsOrigin",
      "jump": "i",
      "offset": [
        11596,
        11667
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1673": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1674": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1677": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1679": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1680": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1681": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "SUB",
      "path": "5"
    },
    "1682": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1684": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1685": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "LT",
      "path": "5"
    },
    "1686": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1687": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x69F"
    },
    "1690": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1691": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1693": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1694": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1695": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "AND",
      "path": "5"
    },
    "1707": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1437"
    },
    "1710": {
      "fn": "ERC1400.registerController",
      "jump": "i",
      "offset": [
        7092,
        7371
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1711": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3212,
        3394
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1712": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3212,
        3394
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1715": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3212,
        3394
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1534"
    },
    "1718": {
      "fn": "ERC1400.registerAccount",
      "jump": "i",
      "offset": [
        3212,
        3394
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1719": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1720": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "1723": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1725": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1726": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1727": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "SUB",
      "path": "5"
    },
    "1728": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1730": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1731": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "LT",
      "path": "5"
    },
    "1732": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1733": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6CD"
    },
    "1736": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1737": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1739": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1740": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1741": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1742": {
      "op": "POP"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1749": {
      "op": "SHL"
    },
    "1750": {
      "op": "SUB"
    },
    "1751": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1752": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1753": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "AND",
      "path": "5"
    },
    "1754": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1755": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1757": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "ADD",
      "path": "5"
    },
    "1758": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1759": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15D5"
    },
    "1762": {
      "fn": "ERC1400.deconfinePartition",
      "jump": "i",
      "offset": [
        12514,
        13405
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1763": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1764": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C1"
    },
    "1767": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1769": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1770": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1771": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "SUB",
      "path": "5"
    },
    "1772": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1774": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1775": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "LT",
      "path": "5"
    },
    "1776": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1777": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F9"
    },
    "1780": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1781": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1783": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1784": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1785": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "op": "SUB"
    },
    "1795": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1796": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1797": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "AND",
      "path": "5"
    },
    "1798": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1799": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1801": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "ADD",
      "path": "5"
    },
    "1802": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1803": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16D9"
    },
    "1806": {
      "fn": "ERC1400.getUid",
      "jump": "i",
      "offset": [
        1932,
        2047
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1807": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1808": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21C"
    },
    "1811": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1813": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1814": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1815": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "SUB",
      "path": "5"
    },
    "1816": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1818": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1819": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "LT",
      "path": "5"
    },
    "1820": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1821": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x725"
    },
    "1824": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1825": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1827": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1828": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1829": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1830": {
      "op": "POP"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1837": {
      "op": "SHL"
    },
    "1838": {
      "op": "SUB"
    },
    "1839": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1840": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1841": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "AND",
      "path": "5"
    },
    "1842": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1843": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1845": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "ADD",
      "path": "5"
    },
    "1846": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1847": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1701"
    },
    "1850": {
      "fn": "ERC1400.controllerRedeem",
      "jump": "i",
      "offset": [
        8859,
        9916
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1851": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1852": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "1855": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1857": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1858": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1859": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "SUB",
      "path": "5"
    },
    "1860": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1862": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1863": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "LT",
      "path": "5"
    },
    "1864": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1865": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x751"
    },
    "1868": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1869": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1871": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1872": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1873": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1876": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17E5"
    },
    "1879": {
      "fn": "ERC1400.stopOptionByRecipient",
      "jump": "i",
      "offset": [
        14147,
        14825
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1880": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1881": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x250"
    },
    "1884": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1886": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1887": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1888": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "SUB",
      "path": "5"
    },
    "1889": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1891": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1892": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "LT",
      "path": "5"
    },
    "1893": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1894": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x76E"
    },
    "1897": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1898": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1900": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1901": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1902": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1903": {
      "op": "POP"
    },
    "1904": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "1905": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1932"
    },
    "1908": {
      "fn": "ERC1400.stopOptionByPromisor",
      "jump": "i",
      "offset": [
        13517,
        14144
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1909": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1916": {
      "op": "SHL"
    },
    "1917": {
      "op": "SUB"
    },
    "1918": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 0
    },
    "1919": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "AND",
      "path": "5"
    },
    "1920": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4983,
        5009
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1922": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1923": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1924": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1925": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4962
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1927": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1929": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1930": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1932": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1933": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4972
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1934": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1936": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4979
      ],
      "op": "ADD",
      "path": "5"
    },
    "1937": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4979
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1938": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1940": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        4979
      ],
      "op": "AND",
      "path": "5"
    },
    "1941": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1943": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1944": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "GT",
      "path": "5"
    },
    "1945": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1946": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79F"
    },
    "1949": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1950": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "INVALID",
      "path": "5"
    },
    "1951": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1952": {
      "branch": 118,
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4955,
        5009
      ],
      "op": "EQ",
      "path": "5"
    },
    "1953": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4947,
        5010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A9"
    },
    "1956": {
      "branch": 118,
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4947,
        5010
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1957": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4947,
        5010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1959": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4947,
        5010
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1960": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4947,
        5010
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1961": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4947,
        5010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1962": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5015,
        5079
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 1,
      "value": "0x7B5"
    },
    "1965": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5037,
        5049
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1966": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5051,
        5061
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1967": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5063,
        5071
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1968": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5073,
        5078
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1969": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5015,
        5036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6C"
    },
    "1972": {
      "fn": "ERC1400.transferByPartition",
      "jump": "i",
      "offset": [
        5015,
        5079
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1973": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5015,
        5079
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1974": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x40"
    },
    "1976": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1977": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1978": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1979": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1980": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1981": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5791,
        5801
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1982": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1984": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1985": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "ADD",
      "path": "5"
    },
    "1986": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "op": "SUB"
    },
    "1995": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1996": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "AND",
      "path": "5"
    },
    "1997": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1998": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1999": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "ADD",
      "path": "5"
    },
    "2000": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2001": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2003": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2004": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "ADD",
      "path": "5"
    },
    "2005": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2006": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2007": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2008": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2009": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2010": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xFB5BFA42AA80B3ED270D6FF371CDC41B1AAA1A6DD5C44E63960F7B6FF25F032F"
    },
    "2043": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2044": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2045": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2046": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "SUB",
      "path": "5"
    },
    "2047": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2049": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "ADD",
      "path": "5"
    },
    "2050": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2051": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        5757,
        5819
      ],
      "op": "LOG1",
      "path": "5"
    },
    "2052": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "POP",
      "path": "5"
    },
    "2053": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "POP",
      "path": "5"
    },
    "2054": {
      "fn": "ERC1400.transferByPartition",
      "offset": [
        4853,
        5823
      ],
      "op": "POP",
      "path": "5"
    },
    "2055": {
      "fn": "ERC1400.transferByPartition",
      "jump": "o",
      "offset": [
        4853,
        5823
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2056": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2057": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11011,
        11015
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2065": {
      "op": "SHL"
    },
    "2066": {
      "op": "SUB"
    },
    "2067": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11030,
        11050
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 3
    },
    "2068": {
      "branch": 119,
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11030,
        11050
      ],
      "op": "AND",
      "path": "5"
    },
    "2069": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11022,
        11051
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81D"
    },
    "2072": {
      "branch": 119,
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11022,
        11051
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2073": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11022,
        11051
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2075": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11022,
        11051
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2076": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11022,
        11051
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2077": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11022,
        11051
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2078": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "2080": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2081": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2082": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2083": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11082
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2085": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2087": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2088": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2090": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2091": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11096
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2092": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11103
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2094": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11103
      ],
      "op": "ADD",
      "path": "5"
    },
    "2095": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11072,
        11103
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2096": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11063,
        11103
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2097": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11063,
        11103
      ],
      "op": "LT",
      "path": "5"
    },
    "2098": {
      "branch": 120,
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11063,
        11103
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2099": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11055,
        11104
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x83B"
    },
    "2102": {
      "branch": 120,
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11055,
        11104
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2103": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11055,
        11104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2105": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11055,
        11104
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2106": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11055,
        11104
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2107": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11055,
        11104
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2108": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x0"
    },
    "2110": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2111": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2112": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2113": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2115": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2117": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2118": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2120": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2121": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11154
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2122": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11160
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "op": "SUB"
    },
    "2131": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11130,
        11160
      ],
      "op": "AND",
      "path": "5"
    },
    "2132": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11116,
        11126
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2133": {
      "branch": 121,
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11116,
        11160
      ],
      "op": "EQ",
      "path": "5"
    },
    "2134": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11108,
        11161
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x85E"
    },
    "2137": {
      "branch": 121,
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11108,
        11161
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2138": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11108,
        11161
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2140": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11108,
        11161
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2141": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11108,
        11161
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2142": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11108,
        11161
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2143": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11185,
        11195
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 6
    },
    "2144": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2146": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2147": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2148": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2149": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11184
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2151": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2153": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2154": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2155": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2156": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2158": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2159": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2160": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11196
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2167": {
      "op": "SHL"
    },
    "2168": {
      "op": "SUB"
    },
    "2169": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP10",
      "path": "5"
    },
    "2170": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "AND",
      "path": "5"
    },
    "2171": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2172": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2173": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2174": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2175": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2176": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2177": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2178": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2179": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11204
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2180": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2181": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2182": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2183": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2184": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2185": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2186": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2187": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2188": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11218
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2189": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11226
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2190": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11226
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2191": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11168,
        11226
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2192": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 7
    },
    "2193": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2194": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2195": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2196": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2197": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2198": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2199": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "ADD",
      "path": "5"
    },
    "2200": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2201": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2202": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2203": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2204": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2205": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2206": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "ADD",
      "path": "5"
    },
    "2207": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2208": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2209": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2210": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2212": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2213": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "ADD",
      "path": "5"
    },
    "2214": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2215": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2216": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2217": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2218": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x9D1AC4B899375AA3769348593B01EAE2706D94B90BC92A3D45E72F574B8F054B"
    },
    "2251": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2252": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2253": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2254": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SUB",
      "path": "5"
    },
    "2255": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2257": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "ADD",
      "path": "5"
    },
    "2258": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2259": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11237,
        11292
      ],
      "op": "LOG1",
      "path": "5"
    },
    "2260": {
      "op": "POP"
    },
    "2261": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        11303,
        11307
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x1"
    },
    "2263": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2264": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2265": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "POP",
      "path": "5"
    },
    "2266": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "POP",
      "path": "5"
    },
    "2267": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        10919,
        11311
      ],
      "op": "POP",
      "path": "5"
    },
    "2268": {
      "fn": "ERC1400.approveEscrow",
      "jump": "o",
      "offset": [
        10919,
        11311
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2269": {
      "offset": [
        1143,
        1197
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2270": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2272": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2274": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2275": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2277": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2278": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2279": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2280": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2282": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2283": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2284": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2285": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2286": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2288": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2289": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ADD",
      "path": "5"
    },
    "2290": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2291": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2293": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2294": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ADD",
      "path": "5"
    },
    "2295": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2296": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2298": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2299": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2300": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "ADD",
      "path": "5"
    },
    "2301": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "op": "SUB"
    },
    "2310": {
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2311": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2312": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "AND",
      "path": "5"
    },
    "2313": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2314": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2315": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2316": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "AND",
      "path": "5"
    },
    "2317": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1143,
        1197
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2318": {
      "fn": "ERC1400.approveEscrow",
      "jump": "o",
      "offset": [
        1143,
        1197
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2319": {
      "offset": [
        1049,
        1091
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2320": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2322": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2324": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2325": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2327": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2328": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2329": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2330": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2332": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2333": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2334": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2335": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2336": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2338": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2339": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2340": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "ADD",
      "path": "5"
    },
    "2341": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2342": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2344": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "AND",
      "path": "5"
    },
    "2345": {
      "fn": "ERC1400.approveEscrow",
      "offset": [
        1049,
        1091
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2346": {
      "fn": "ERC1400.approveEscrow",
      "jump": "o",
      "offset": [
        1049,
        1091
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2347": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3516,
        4096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2348": {
      "branch": 122,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3596,
        3613
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 9
    },
    "2349": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3588,
        3614
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x935"
    },
    "2352": {
      "branch": 122,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3588,
        3614
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2353": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3588,
        3614
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2355": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3588,
        3614
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2356": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3588,
        3614
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2357": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3588,
        3614
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2358": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3634,
        3644
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 10
    },
    "2359": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3656,
        3682
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2361": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2362": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2363": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2364": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3633
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2366": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2368": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2369": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2371": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2372": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3645
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2373": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2375": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3652
      ],
      "op": "ADD",
      "path": "5"
    },
    "2376": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3652
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2377": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3652
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2379": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3652
      ],
      "op": "AND",
      "path": "5"
    },
    "2380": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2382": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2383": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "GT",
      "path": "5"
    },
    "2384": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2385": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x956"
    },
    "2388": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2389": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "INVALID",
      "path": "5"
    },
    "2390": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2391": {
      "branch": 123,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3626,
        3682
      ],
      "op": "EQ",
      "path": "5"
    },
    "2392": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3618,
        3683
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x960"
    },
    "2395": {
      "branch": 123,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3618,
        3683
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2396": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3618,
        3683
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2398": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3618,
        3683
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2399": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3618,
        3683
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2400": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3618,
        3683
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2401": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3708
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x1"
    },
    "2403": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3708
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2404": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2406": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2407": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2408": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2415": {
      "op": "SHL"
    },
    "2416": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2417": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2418": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3719,
        3729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2419": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2421": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2422": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ADD",
      "path": "5"
    },
    "2423": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2424": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2425": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2426": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3734,
        3740
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2427": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3734,
        3740
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "op": "SUB"
    },
    "2436": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3708
      ],
      "op": "AND",
      "path": "5"
    },
    "2437": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3708
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2438": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3718
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "2443": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3718
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2444": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2446": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2447": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2448": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ADD",
      "path": "5"
    },
    "2449": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2450": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2452": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2453": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2454": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2455": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2456": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2457": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "SUB",
      "path": "5"
    },
    "2458": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ADD",
      "path": "5"
    },
    "2459": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2460": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3708
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2461": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2462": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2463": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2464": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2465": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2466": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AA"
    },
    "2469": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2470": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2472": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2473": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2474": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2475": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "POP",
      "path": "5"
    },
    "2476": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "GAS",
      "path": "5"
    },
    "2477": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "2478": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2479": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2480": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2481": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9BE"
    },
    "2484": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2485": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2486": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2488": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2489": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2490": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2491": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2493": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2494": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2495": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "POP",
      "path": "5"
    },
    "2496": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "POP",
      "path": "5"
    },
    "2497": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "POP",
      "path": "5"
    },
    "2498": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "POP",
      "path": "5"
    },
    "2499": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2501": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2502": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2503": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2505": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2506": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "LT",
      "path": "5"
    },
    "2507": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2508": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D4"
    },
    "2511": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2512": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2514": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2515": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2516": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2517": {
      "op": "POP"
    },
    "2518": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2519": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3740
      ],
      "op": "LT",
      "path": "5"
    },
    "2520": {
      "branch": 124,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3695,
        3740
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2521": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3687,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E1"
    },
    "2524": {
      "branch": 124,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3687,
        3741
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2525": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3687,
        3741
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2527": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3687,
        3741
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2528": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3687,
        3741
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2529": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3687,
        3741
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2530": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x1"
    },
    "2532": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2533": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2535": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2536": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2537": {
      "op": "PUSH4",
      "value": "0x79CC679"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2546": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2547": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3776,
        3786
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2548": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2550": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2551": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2552": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2553": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "2555": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2556": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2557": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2558": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2559": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2560": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2561": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2571": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2572": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "AND",
      "path": "5"
    },
    "2573": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2574": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3775
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x79CC6790"
    },
    "2579": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3775
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2580": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "2582": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2583": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2584": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2585": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2586": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2588": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2589": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2590": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2591": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2592": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2593": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2594": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "SUB",
      "path": "5"
    },
    "2595": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ADD",
      "path": "5"
    },
    "2596": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2597": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2599": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3766
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2600": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2601": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2602": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2603": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2604": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2605": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA35"
    },
    "2608": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2609": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2611": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2612": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2613": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2614": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "POP",
      "path": "5"
    },
    "2615": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "GAS",
      "path": "5"
    },
    "2616": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "CALL",
      "path": "5"
    },
    "2617": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2618": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2619": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2620": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA49"
    },
    "2623": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2624": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2625": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2627": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2628": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2629": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2630": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2632": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2633": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2634": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "POP",
      "path": "5"
    },
    "2635": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "POP",
      "path": "5"
    },
    "2636": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "POP",
      "path": "5"
    },
    "2637": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "POP",
      "path": "5"
    },
    "2638": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2640": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2641": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2642": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2644": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2645": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "LT",
      "path": "5"
    },
    "2646": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2647": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5F"
    },
    "2650": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2651": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2653": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2654": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2655": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "branch": 125,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3753,
        3795
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2658": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3745,
        3796
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA6A"
    },
    "2661": {
      "branch": 125,
      "fn": "ERC1400.buyPartition",
      "offset": [
        3745,
        3796
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2662": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3745,
        3796
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2664": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3745,
        3796
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2665": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3745,
        3796
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2666": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3745,
        3796
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2667": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x0"
    },
    "2669": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2670": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2671": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2672": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3811
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2674": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2676": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2677": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2678": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2679": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2681": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2682": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2683": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3825
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2684": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2685": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2692": {
      "op": "SHL"
    },
    "2693": {
      "op": "SUB"
    },
    "2694": {
      "op": "NOT"
    },
    "2695": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "AND",
      "path": "5"
    },
    "2696": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3834,
        3844
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2697": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2698": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2699": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "OR",
      "path": "5"
    },
    "2700": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2701": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3801,
        3844
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2704": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3848,
        3879
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 14
    },
    "2705": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3848,
        3879
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2706": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3848,
        3879
      ],
      "op": "ADD",
      "path": "5"
    },
    "2707": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3848,
        3888
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2708": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3848,
        3888
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2709": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3848,
        3888
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2710": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3848,
        3888
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2711": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3928,
        3931
      ],
      "op": "TIMESTAMP",
      "path": "5",
      "statement": 15
    },
    "2712": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3892,
        3925
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2713": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3892,
        3925
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2714": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3892,
        3925
      ],
      "op": "ADD",
      "path": "5"
    },
    "2715": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3892,
        3931
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2716": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3892,
        3931
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2717": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3892,
        3931
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2718": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3892,
        3931
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2719": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3966
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x3"
    },
    "2721": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3966
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2722": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3966
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2723": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3966
      ],
      "op": "ADD",
      "path": "5"
    },
    "2724": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3998
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2725": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3998
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2728": {
      "op": "NOT"
    },
    "2729": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3998
      ],
      "op": "AND",
      "path": "5"
    },
    "2730": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3998
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2731": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        3935,
        3998
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2732": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 17
    },
    "2733": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2734": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2735": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2737": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2738": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2739": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2740": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2741": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4022
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2742": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2743": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2744": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2745": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2746": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "ADD",
      "path": "5"
    },
    "2747": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2748": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2749": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2750": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4003,
        4030
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2751": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4050
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 18
    },
    "2752": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4050
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2753": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4050
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2754": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4050
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2755": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4050
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2756": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4050
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2757": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2758": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2759": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2760": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2761": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2762": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2763": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2764": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4077
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2765": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        4034,
        4092
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2766": {
      "fn": "ERC1400.buyPartition",
      "jump": "o",
      "offset": [
        3516,
        4096
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2767": {
      "offset": [
        810,
        858
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2768": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2770": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2772": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2773": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2774": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2775": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2777": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2778": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2779": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2780": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2782": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2783": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2784": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2785": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2786": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2787": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2789": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2790": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ADD",
      "path": "5"
    },
    "2791": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2792": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2793": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2794": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ADD",
      "path": "5"
    },
    "2795": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2796": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2798": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2799": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2800": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "ADD",
      "path": "5"
    },
    "2801": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2808": {
      "op": "SHL"
    },
    "2809": {
      "op": "SUB"
    },
    "2810": {
      "offset": [
        810,
        858
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2811": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2812": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "AND",
      "path": "5"
    },
    "2813": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2814": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2815": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2816": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2818": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "AND",
      "path": "5"
    },
    "2819": {
      "fn": "ERC1400.buyPartition",
      "offset": [
        810,
        858
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2820": {
      "fn": "ERC1400.buyPartition",
      "jump": "o",
      "offset": [
        810,
        858
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2821": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11379,
        11541
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2828": {
      "op": "SHL"
    },
    "2829": {
      "op": "SUB"
    },
    "2830": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 19
    },
    "2831": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2832": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "AND",
      "path": "5"
    },
    "2833": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11473,
        11480
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2835": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2836": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2837": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2838": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11508
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2840": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2842": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2843": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2844": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2845": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2847": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2848": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2849": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11515
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2850": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2851": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2852": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2853": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "AND",
      "path": "5"
    },
    "2854": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2855": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2856": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2857": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2858": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2859": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2860": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2861": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11523
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2862": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2863": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2864": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2865": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2866": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2867": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2868": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2869": {
      "fn": "ERC1400.allowanceEscrow",
      "offset": [
        11492,
        11537
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2870": {
      "fn": "ERC1400.allowanceEscrow",
      "jump": "o",
      "offset": [
        11379,
        11541
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2871": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2878": {
      "op": "SHL"
    },
    "2879": {
      "op": "SUB"
    },
    "2880": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 20
    },
    "2881": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "AND",
      "path": "5"
    },
    "2882": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10737,
        10741
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2884": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2885": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2886": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2887": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10753
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2889": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2891": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2892": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2894": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2895": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10761
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2896": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2897": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2898": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10746,
        10771
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2899": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10797
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x1"
    },
    "2901": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10797
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2902": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10797
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2903": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10797
      ],
      "op": "ADD",
      "path": "5"
    },
    "2904": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2905": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2906": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10800,
        10826
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2908": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10800,
        10826
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2911": {
      "op": "NOT"
    },
    "2912": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2913": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2914": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "AND",
      "path": "5"
    },
    "2915": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2916": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10800,
        10826
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2917": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2918": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "MUL",
      "path": "5"
    },
    "2919": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "OR",
      "path": "5"
    },
    "2920": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2921": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10775,
        10826
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10837,
        10841
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 22,
      "value": "0x1"
    },
    "2925": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10837,
        10841
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2926": {
      "fn": "ERC1400.registerEscrow",
      "offset": [
        10681,
        10845
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2927": {
      "op": "POP"
    },
    "2928": {
      "op": "POP"
    },
    "2929": {
      "fn": "ERC1400.registerEscrow",
      "jump": "o",
      "offset": [
        10681,
        10845
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2930": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1818,
        1928
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "op": "SUB"
    },
    "2939": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "AND",
      "path": "5",
      "statement": 23
    },
    "2940": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1877,
        1881
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2942": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2943": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2944": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2945": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2947": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2949": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2950": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2952": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2953": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1916
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2954": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1922
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2955": {
      "fn": "ERC1400.getHolderNbuid",
      "offset": [
        1903,
        1922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2956": {
      "fn": "ERC1400.getHolderNbuid",
      "jump": "o",
      "offset": [
        1818,
        1928
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2957": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2958": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x0"
    },
    "2960": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2961": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2962": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2963": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        14989
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2965": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2967": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2968": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2970": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2971": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15003
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2972": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15013
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2974": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15013
      ],
      "op": "ADD",
      "path": "5"
    },
    "2975": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15013
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2982": {
      "op": "SHL"
    },
    "2983": {
      "op": "SUB"
    },
    "2984": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14981,
        15013
      ],
      "op": "AND",
      "path": "5"
    },
    "2985": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14968,
        14977
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "2986": {
      "branch": 126,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14968,
        15013
      ],
      "op": "EQ",
      "path": "5"
    },
    "2987": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14960,
        15014
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB3"
    },
    "2990": {
      "branch": 126,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14960,
        15014
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2991": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14960,
        15014
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2993": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14960,
        15014
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2994": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14960,
        15014
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2995": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14960,
        15014
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2996": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15057,
        15083
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x2"
    },
    "2998": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15035,
        15045
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2999": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3001": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3002": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3003": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3004": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15034
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3006": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3008": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3009": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3011": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3012": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15046
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3013": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3015": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15053
      ],
      "op": "ADD",
      "path": "5"
    },
    "3016": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15053
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3017": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3019": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15053
      ],
      "op": "AND",
      "path": "5"
    },
    "3020": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3022": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3023": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "GT",
      "path": "5"
    },
    "3024": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3025": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD6"
    },
    "3028": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3029": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "INVALID",
      "path": "5"
    },
    "3030": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3031": {
      "branch": 127,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15027,
        15083
      ],
      "op": "EQ",
      "path": "5"
    },
    "3032": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15019,
        15084
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBE0"
    },
    "3035": {
      "branch": 127,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15019,
        15084
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3036": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15019,
        15084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3038": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15019,
        15084
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3039": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15019,
        15084
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3040": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15019,
        15084
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3047": {
      "op": "SHL"
    },
    "3048": {
      "op": "SUB"
    },
    "3049": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 26
    },
    "3050": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "AND",
      "path": "5"
    },
    "3051": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15122,
        15148
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3053": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3054": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3055": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3056": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15103
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3058": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3060": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3061": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3063": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3064": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15111
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3065": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15118
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3067": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15118
      ],
      "op": "ADD",
      "path": "5"
    },
    "3068": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15118
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3069": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15118
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3071": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15118
      ],
      "op": "AND",
      "path": "5"
    },
    "3072": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3074": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3075": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "GT",
      "path": "5"
    },
    "3076": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3077": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC0A"
    },
    "3080": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3081": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "INVALID",
      "path": "5"
    },
    "3082": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3083": {
      "branch": 128,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15096,
        15148
      ],
      "op": "EQ",
      "path": "5"
    },
    "3084": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15088,
        15149
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC14"
    },
    "3087": {
      "branch": 128,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15088,
        15149
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3088": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15088,
        15149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3090": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15088,
        15149
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3091": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15088,
        15149
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3092": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15088,
        15149
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3093": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15169,
        15178
      ],
      "op": "ORIGIN",
      "path": "5",
      "statement": 27
    },
    "3094": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15190,
        15216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3096": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3097": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3098": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3099": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15168
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3101": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3103": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3104": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3106": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3107": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15179
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3108": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3110": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15186
      ],
      "op": "ADD",
      "path": "5"
    },
    "3111": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15186
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3112": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3114": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15186
      ],
      "op": "AND",
      "path": "5"
    },
    "3115": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3117": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3118": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "GT",
      "path": "5"
    },
    "3119": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3120": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC35"
    },
    "3123": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3124": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "INVALID",
      "path": "5"
    },
    "3125": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3126": {
      "branch": 129,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15161,
        15216
      ],
      "op": "EQ",
      "path": "5"
    },
    "3127": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15153,
        15217
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3F"
    },
    "3130": {
      "branch": 129,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15153,
        15217
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3131": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15153,
        15217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3133": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15153,
        15217
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3134": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15153,
        15217
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3135": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15153,
        15217
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3136": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 28,
      "value": "0x0"
    },
    "3138": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3139": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3140": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3141": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15251
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3143": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3145": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3146": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3148": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3149": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15265
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3150": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15272
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3157": {
      "op": "SHL"
    },
    "3158": {
      "op": "SUB"
    },
    "3159": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15243,
        15272
      ],
      "op": "AND",
      "path": "5"
    },
    "3160": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15229,
        15239
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3161": {
      "branch": 130,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15229,
        15272
      ],
      "op": "EQ",
      "path": "5"
    },
    "3162": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15221,
        15273
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC62"
    },
    "3165": {
      "branch": 130,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15221,
        15273
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3166": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15221,
        15273
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3168": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15221,
        15273
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3169": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15221,
        15273
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3170": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15221,
        15273
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3171": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 29,
      "value": "0x0"
    },
    "3173": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3174": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3175": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3176": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15305
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3178": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3180": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3181": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3183": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3184": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15319
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3185": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15325
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3192": {
      "op": "SHL"
    },
    "3193": {
      "op": "SUB"
    },
    "3194": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15285,
        15325
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3195": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15285,
        15325
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3196": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15285,
        15325
      ],
      "op": "AND",
      "path": "5"
    },
    "3197": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15325
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3198": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15295,
        15325
      ],
      "op": "AND",
      "path": "5"
    },
    "3199": {
      "branch": 131,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15285,
        15325
      ],
      "op": "EQ",
      "path": "5"
    },
    "3200": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15277,
        15326
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC88"
    },
    "3203": {
      "branch": 131,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15277,
        15326
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3204": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15277,
        15326
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3206": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15277,
        15326
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3207": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15277,
        15326
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3208": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15277,
        15326
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3209": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 30,
      "value": "0x0"
    },
    "3211": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3212": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3213": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3214": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3216": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3218": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3219": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3221": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3222": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15367
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3223": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15382
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3225": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15382
      ],
      "op": "ADD",
      "path": "5"
    },
    "3226": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15345,
        15382
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3227": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15338,
        15341
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3228": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15338,
        15382
      ],
      "op": "GT",
      "path": "5"
    },
    "3229": {
      "branch": 132,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15338,
        15382
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3230": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15330,
        15383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCA6"
    },
    "3233": {
      "branch": 132,
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15330,
        15383
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3234": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15330,
        15383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3236": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15330,
        15383
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3237": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15330,
        15383
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3238": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15330,
        15383
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3239": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15388,
        15449
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 31,
      "value": "0xCB2"
    },
    "3242": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15410,
        15422
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3243": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15424,
        15430
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3244": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15432,
        15441
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "3245": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15443,
        15448
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3246": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15388,
        15409
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6C"
    },
    "3249": {
      "fn": "ERC1400.escrowTransfer",
      "jump": "i",
      "offset": [
        15388,
        15449
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3250": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15388,
        15449
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3251": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 32,
      "value": "0x40"
    },
    "3253": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3254": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3255": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15474,
        15484
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3256": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3257": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3264": {
      "op": "SHL"
    },
    "3265": {
      "op": "SUB"
    },
    "3266": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3267": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "AND",
      "path": "5"
    },
    "3268": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3270": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3271": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "ADD",
      "path": "5"
    },
    "3272": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3273": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15494,
        15503
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "3274": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3275": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3276": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "ADD",
      "path": "5"
    },
    "3277": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3278": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "3280": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3281": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "ADD",
      "path": "5"
    },
    "3282": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3283": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3284": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3285": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "3287": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3288": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "ADD",
      "path": "5"
    },
    "3289": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3290": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3291": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3292": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3293": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3294": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x2F8AE5F6F3D09A6D675498229FA3C6D3BA3D5FAAA90CFC85893ABB07589309FB"
    },
    "3327": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3328": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3329": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3330": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "SUB",
      "path": "5"
    },
    "3331": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "3333": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "ADD",
      "path": "5"
    },
    "3334": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3335": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        15459,
        15525
      ],
      "op": "LOG1",
      "path": "5"
    },
    "3336": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "POP",
      "path": "5"
    },
    "3337": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "POP",
      "path": "5"
    },
    "3338": {
      "fn": "ERC1400.escrowTransfer",
      "offset": [
        14873,
        15529
      ],
      "op": "POP",
      "path": "5"
    },
    "3339": {
      "fn": "ERC1400.escrowTransfer",
      "jump": "o",
      "offset": [
        14873,
        15529
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3340": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7634,
        7712
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3341": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7683,
        7687
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3343": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7699,
        7708
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 33
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3348": {
      "op": "SHL"
    },
    "3349": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7699,
        7708
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3350": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7699,
        7708
      ],
      "op": "DIV",
      "path": "5"
    },
    "3351": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7699,
        7708
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3353": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7699,
        7708
      ],
      "op": "AND",
      "path": "5"
    },
    "3354": {
      "fn": "ERC1400.isControllable",
      "offset": [
        7699,
        7708
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3355": {
      "fn": "ERC1400.isControllable",
      "jump": "o",
      "offset": [
        7634,
        7712
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3356": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4219,
        4716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3357": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x0"
    },
    "3359": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3360": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3361": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3362": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4308
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3364": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3366": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3367": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3369": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3370": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4322
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3371": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4328
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3378": {
      "op": "SHL"
    },
    "3379": {
      "op": "SUB"
    },
    "3380": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4298,
        4328
      ],
      "op": "AND",
      "path": "5"
    },
    "3381": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4284,
        4294
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3382": {
      "branch": 133,
      "fn": "ERC1400.sellPartition",
      "offset": [
        4284,
        4328
      ],
      "op": "EQ",
      "path": "5"
    },
    "3383": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4276,
        4329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3F"
    },
    "3386": {
      "branch": 133,
      "fn": "ERC1400.sellPartition",
      "offset": [
        4276,
        4329
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3387": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4276,
        4329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3389": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4276,
        4329
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3390": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4276,
        4329
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3391": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4276,
        4329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3392": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x1"
    },
    "3394": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3395": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3396": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3398": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3399": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3400": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3401": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3403": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3405": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3406": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3407": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3408": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3410": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3411": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3412": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4400
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3413": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4407
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3414": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4407
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3415": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4407
      ],
      "op": "ADD",
      "path": "5"
    },
    "3416": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4376,
        4407
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3417": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3418": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3419": {
      "op": "PUSH4",
      "value": "0x1CC74859"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3426": {
      "op": "SHL"
    },
    "3427": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3428": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3429": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4364,
        4374
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3430": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3432": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3433": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ADD",
      "path": "5"
    },
    "3434": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3435": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "3437": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3438": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ADD",
      "path": "5"
    },
    "3439": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3440": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3441": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3442": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3443": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3444": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3451": {
      "op": "SHL"
    },
    "3452": {
      "op": "SUB"
    },
    "3453": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3454": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3455": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "AND",
      "path": "5"
    },
    "3456": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3457": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4363
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1CC74859"
    },
    "3462": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4363
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3463": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "3465": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3466": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3467": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ADD",
      "path": "5"
    },
    "3468": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3469": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3470": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3471": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3472": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3473": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SUB",
      "path": "5"
    },
    "3474": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ADD",
      "path": "5"
    },
    "3475": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3476": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3477": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3478": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4354
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3479": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3480": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "3481": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3482": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3483": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3484": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA4"
    },
    "3487": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3488": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3490": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3491": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3492": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3493": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "POP",
      "path": "5"
    },
    "3494": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "GAS",
      "path": "5"
    },
    "3495": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "CALL",
      "path": "5"
    },
    "3496": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3497": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3498": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3499": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB8"
    },
    "3502": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3503": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3504": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3506": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3507": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3508": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3509": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3511": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3512": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3513": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "POP",
      "path": "5"
    },
    "3514": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "POP",
      "path": "5"
    },
    "3515": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "POP",
      "path": "5"
    },
    "3516": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "POP",
      "path": "5"
    },
    "3517": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3519": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3520": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3521": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3523": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3524": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "LT",
      "path": "5"
    },
    "3525": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3526": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDCE"
    },
    "3529": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3530": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3532": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3533": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3534": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3535": {
      "op": "POP"
    },
    "3536": {
      "branch": 134,
      "fn": "ERC1400.sellPartition",
      "offset": [
        4341,
        4408
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3537": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4333,
        4409
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD9"
    },
    "3540": {
      "branch": 134,
      "fn": "ERC1400.sellPartition",
      "offset": [
        4333,
        4409
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3541": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4333,
        4409
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3543": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4333,
        4409
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3544": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4333,
        4409
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3545": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4333,
        4409
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3546": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4448,
        4449
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 36,
      "value": "0x0"
    },
    "3548": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3549": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3550": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3551": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3553": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3555": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3556": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3557": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3558": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3560": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3561": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4438
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3562": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4445
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3564": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4445
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3565": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4445
      ],
      "op": "ADD",
      "path": "5"
    },
    "3566": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4449
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3567": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3568": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4414,
        4449
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3569": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4484
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 37,
      "value": "0x3"
    },
    "3571": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4484
      ],
      "op": "ADD",
      "path": "5"
    },
    "3572": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3573": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3576": {
      "op": "NOT"
    },
    "3577": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "AND",
      "path": "5"
    },
    "3578": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3579": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3580": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "OR",
      "path": "5"
    },
    "3581": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3582": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4453,
        4514
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3583": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4448,
        4449
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3584": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4529,
        4684
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3585": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4557,
        4567
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3586": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3588": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3589": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3590": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3591": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4556
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3593": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3595": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3596": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3598": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3599": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4568
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3600": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4549,
        4574
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3601": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4545,
        4574
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3602": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4545,
        4574
      ],
      "op": "LT",
      "path": "5"
    },
    "3603": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4529,
        4684
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3604": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4529,
        4684
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE58"
    },
    "3607": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4529,
        4684
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3608": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4594,
        4604
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3609": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3611": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3612": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3613": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3614": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4593
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3616": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3618": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3619": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3620": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3621": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3623": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3624": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3625": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4605
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3626": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4608,
        4609
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3628": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4606,
        4609
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3629": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4606,
        4609
      ],
      "op": "ADD",
      "path": "5"
    },
    "3630": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3631": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3632": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3633": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3634": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3635": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3636": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3637": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4610
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3638": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4626
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3639": {
      "branch": 135,
      "fn": "ERC1400.sellPartition",
      "offset": [
        4589,
        4626
      ],
      "op": "EQ",
      "path": "5"
    },
    "3640": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4586,
        4680
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3641": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4586,
        4680
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE50"
    },
    "3644": {
      "branch": 135,
      "fn": "ERC1400.sellPartition",
      "offset": [
        4586,
        4680
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3645": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4657,
        4667
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 38
    },
    "3646": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3648": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3649": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3650": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3651": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3653": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3655": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3656": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3658": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3659": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4668
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3660": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4649,
        4674
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3661": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4638,
        4639
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 39
    },
    "3662": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4638,
        4639
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3663": {
      "op": "POP"
    },
    "3664": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4586,
        4680
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3665": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4576,
        4579
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 40,
      "value": "0x1"
    },
    "3667": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4576,
        4579
      ],
      "op": "ADD",
      "path": "5"
    },
    "3668": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4529,
        4684
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE00"
    },
    "3671": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4529,
        4684
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3672": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4529,
        4684
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3673": {
      "op": "POP"
    },
    "3674": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4692,
        4702
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 41
    },
    "3675": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4711,
        4712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3677": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3678": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3679": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3680": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4691
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3682": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3684": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3685": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3686": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3687": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3689": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3690": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3691": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4703
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3692": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4706,
        4707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3694": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4704,
        4707
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3695": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4704,
        4707
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3696": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4704,
        4707
      ],
      "op": "ADD",
      "path": "5"
    },
    "3697": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3698": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3699": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3700": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3701": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3702": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3703": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3704": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4708
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3705": {
      "fn": "ERC1400.sellPartition",
      "offset": [
        4687,
        4712
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "fn": "ERC1400.sellPartition",
      "jump": "o",
      "offset": [
        4219,
        4716
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3708": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2794,
        2923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3709": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2868,
        2875
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3711": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 42
    },
    "3712": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3713": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3714": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3716": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3718": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3719": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3721": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3722": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2912
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3723": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3725": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2919
      ],
      "op": "ADD",
      "path": "5"
    },
    "3726": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2919
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3727": {
      "fn": "ERC1400.balanceByPartition",
      "offset": [
        2888,
        2919
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3728": {
      "fn": "ERC1400.balanceByPartition",
      "jump": "o",
      "offset": [
        2794,
        2923
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3729": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1411,
        1540
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3730": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1481,
        1488
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3732": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 43
    },
    "3733": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3734": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3735": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1515
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3737": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3739": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3740": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3742": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3743": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1529
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3744": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1535
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1535
      ],
      "op": "AND",
      "path": "5"
    },
    "3754": {
      "fn": "ERC1400.getPartitionOwner",
      "offset": [
        1505,
        1535
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3755": {
      "fn": "ERC1400.getPartitionOwner",
      "jump": "o",
      "offset": [
        1411,
        1540
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3756": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11732,
        12468
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3757": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11862,
        11866
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3759": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 44
    },
    "3760": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3761": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3762": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11902
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3764": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3766": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3767": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3769": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3770": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11916
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3771": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11922
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3778": {
      "op": "SHL"
    },
    "3779": {
      "op": "SUB"
    },
    "3780": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11892,
        11922
      ],
      "op": "AND",
      "path": "5"
    },
    "3781": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11879,
        11888
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "3782": {
      "branch": 136,
      "fn": "ERC1400.confinePartition",
      "offset": [
        11879,
        11922
      ],
      "op": "EQ",
      "path": "5"
    },
    "3783": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11871,
        11923
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xECF"
    },
    "3786": {
      "branch": 136,
      "fn": "ERC1400.confinePartition",
      "offset": [
        11871,
        11923
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3787": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11871,
        11923
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3789": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11871,
        11923
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3790": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11871,
        11923
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3791": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11871,
        11923
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3792": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11965,
        11991
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 45,
      "value": "0x2"
    },
    "3794": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11943,
        11953
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3795": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3797": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3798": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3799": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3800": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3802": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3804": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3805": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3807": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3808": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11954
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3809": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3811": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11961
      ],
      "op": "ADD",
      "path": "5"
    },
    "3812": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11961
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3813": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11961
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3815": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11961
      ],
      "op": "AND",
      "path": "5"
    },
    "3816": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3818": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3819": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "GT",
      "path": "5"
    },
    "3820": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3821": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEF2"
    },
    "3824": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3825": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "INVALID",
      "path": "5"
    },
    "3826": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3827": {
      "branch": 137,
      "fn": "ERC1400.confinePartition",
      "offset": [
        11935,
        11991
      ],
      "op": "EQ",
      "path": "5"
    },
    "3828": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11927,
        11992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEFC"
    },
    "3831": {
      "branch": 137,
      "fn": "ERC1400.confinePartition",
      "offset": [
        11927,
        11992
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3832": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11927,
        11992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3834": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11927,
        11992
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3835": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11927,
        11992
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3836": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11927,
        11992
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3837": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12021,
        12030
      ],
      "op": "ORIGIN",
      "path": "5",
      "statement": 46
    },
    "3838": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3840": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3841": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3842": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3843": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12020
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "3845": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3847": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3848": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3849": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3850": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3852": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3853": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3854": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12031
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3855": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12032,
        12042
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3856": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12043
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3857": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3858": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12043
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3859": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12043
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3860": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12043
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3861": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12043
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3862": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12043
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3863": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3864": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3865": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3866": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3867": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3868": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3869": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3870": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3871": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12057
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3872": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12074
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3873": {
      "op": "GT"
    },
    "3874": {
      "branch": 138,
      "fn": "ERC1400.confinePartition",
      "offset": [
        12004,
        12074
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3875": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5D"
    },
    "3878": {
      "branch": 138,
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3879": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3881": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3882": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3888": {
      "op": "SHL"
    },
    "3889": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3890": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3891": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3893": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "ADD",
      "path": "5"
    },
    "3894": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3895": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3896": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3898": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "ADD",
      "path": "5"
    },
    "3899": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3900": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3901": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "SUB",
      "path": "5"
    },
    "3902": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3903": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3904": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5C"
    },
    "3906": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3907": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3908": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3910": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "ADD",
      "path": "5"
    },
    "3911": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3912": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DAB"
    },
    "3915": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5C"
    },
    "3917": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3918": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "3919": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "3921": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "ADD",
      "path": "5"
    },
    "3922": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3923": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "POP",
      "path": "5"
    },
    "3924": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "POP",
      "path": "5"
    },
    "3925": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3927": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3928": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3929": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3930": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "SUB",
      "path": "5"
    },
    "3931": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3932": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3933": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        11996,
        12171
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3934": {
      "op": "POP"
    },
    "3935": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 47,
      "value": "0x0"
    },
    "3937": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3938": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3939": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3940": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3942": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3944": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3945": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3946": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3947": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3949": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3950": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3951": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12200
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3952": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3954": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3955": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12207
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3956": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12207
      ],
      "op": "ADD",
      "path": "5"
    },
    "3957": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3958": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3961": {
      "op": "NOT"
    },
    "3962": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "AND",
      "path": "5"
    },
    "3963": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12210,
        12241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3965": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3966": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3967": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "OR",
      "path": "5"
    },
    "3968": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3969": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3970": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12176,
        12241
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3971": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12253
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 48,
      "value": "0x5"
    },
    "3973": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12267
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3974": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12267
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3975": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12267
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3976": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12267
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3977": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12267
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3978": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3979": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3986": {
      "op": "SHL"
    },
    "3987": {
      "op": "SUB"
    },
    "3988": {
      "op": "NOT"
    },
    "3989": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3990": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3991": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "AND",
      "path": "5"
    },
    "3992": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12277,
        12287
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3993": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "OR",
      "path": "5"
    },
    "3994": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3995": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12245,
        12287
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3996": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12291,
        12328
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 49
    },
    "3997": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12291,
        12328
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3998": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12291,
        12328
      ],
      "op": "ADD",
      "path": "5"
    },
    "3999": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12291,
        12345
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4000": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12291,
        12345
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4001": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12291,
        12345
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "4002": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12291,
        12345
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4003": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12349,
        12385
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 50
    },
    "4004": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12349,
        12385
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4005": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12349,
        12385
      ],
      "op": "ADD",
      "path": "5"
    },
    "4006": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12349,
        12401
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4007": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12349,
        12401
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4008": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12349,
        12401
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4009": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12349,
        12401
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4010": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12437
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 51
    },
    "4011": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12437
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4012": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12437
      ],
      "op": "ADD",
      "path": "5"
    },
    "4013": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4014": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "op": "SUB"
    },
    "4023": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4024": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4025": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4026": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "AND",
      "path": "5"
    },
    "4027": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4028": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4029": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4030": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "AND",
      "path": "5"
    },
    "4031": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4032": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4033": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4034": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "OR",
      "path": "5"
    },
    "4035": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4036": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4037": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12405,
        12449
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4038": {
      "fn": "ERC1400.confinePartition",
      "offset": [
        12210,
        12241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4039": {
      "fn": "ERC1400.confinePartition",
      "jump": "o",
      "offset": [
        11732,
        12468
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4040": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4041": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2984,
        2991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4043": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2984,
        2991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4044": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2984,
        2991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4045": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3018,
        3156
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "SUB"
    },
    "4054": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4055": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "AND",
      "path": "5"
    },
    "4056": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4058": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4059": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4060": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4061": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3045
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4063": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4065": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4066": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4068": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4069": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3052
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4070": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3038,
        3058
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4071": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3034,
        3058
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4072": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3034,
        3058
      ],
      "op": "LT",
      "path": "5"
    },
    "4073": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3018,
        3156
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4074": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3018,
        3156
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x105C"
    },
    "4077": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3018,
        3156
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4084": {
      "op": "SHL"
    },
    "4085": {
      "op": "SUB"
    },
    "4086": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4087": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "AND",
      "path": "5"
    },
    "4088": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4090": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4091": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4092": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4093": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3077
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4095": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4097": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4098": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4099": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4100": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4102": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4103": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4104": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3084
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4105": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3087,
        3088
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4107": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3085,
        3088
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4108": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3085,
        3088
      ],
      "op": "ADD",
      "path": "5"
    },
    "4109": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4110": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4111": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4112": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4113": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4114": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4115": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4116": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3089
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4117": {
      "branch": 139,
      "fn": "ERC1400.balanceOf",
      "offset": [
        3073,
        3094
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4118": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3070,
        3152
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1054"
    },
    "4121": {
      "branch": 139,
      "fn": "ERC1400.balanceOf",
      "offset": [
        3070,
        3152
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4128": {
      "op": "SHL"
    },
    "4129": {
      "op": "SUB"
    },
    "4130": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 52
    },
    "4131": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "AND",
      "path": "5"
    },
    "4132": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4134": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4135": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4136": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4137": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3126
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4139": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4141": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4142": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4143": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4144": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4146": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4147": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4148": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3133
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4149": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3136,
        3137
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4151": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3134,
        3137
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4152": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3134,
        3137
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4153": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3134,
        3137
      ],
      "op": "ADD",
      "path": "5"
    },
    "4154": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4155": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4156": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4157": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4158": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4159": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4160": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4161": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4162": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3122,
        3138
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4163": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4164": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4165": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3121
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4167": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4168": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4169": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4170": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4171": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4172": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3139
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4173": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "4174": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3111,
        3146
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4175": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3102,
        3146
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4176": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3102,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4177": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3102,
        3146
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4178": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3102,
        3146
      ],
      "op": "ADD",
      "path": "5"
    },
    "4179": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3102,
        3146
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4180": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3070,
        3152
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4181": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3060,
        3063
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 53,
      "value": "0x1"
    },
    "4183": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3060,
        3063
      ],
      "op": "ADD",
      "path": "5"
    },
    "4184": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3018,
        3156
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFCD"
    },
    "4187": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3018,
        3156
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4188": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3018,
        3156
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4189": {
      "op": "POP"
    },
    "4190": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        3167,
        3172
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 54
    },
    "4191": {
      "fn": "ERC1400.balanceOf",
      "offset": [
        2926,
        3176
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4192": {
      "op": "POP"
    },
    "4193": {
      "op": "POP"
    },
    "4194": {
      "fn": "ERC1400.balanceOf",
      "jump": "o",
      "offset": [
        2926,
        3176
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4195": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2530,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4202": {
      "op": "SHL"
    },
    "4203": {
      "op": "SUB"
    },
    "4204": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4205": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "AND",
      "path": "5"
    },
    "4206": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4208": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4209": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4210": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4211": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4213": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4215": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4216": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4218": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4219": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2669
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4220": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2655,
        2675
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4221": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2591,
        2607
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4223": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2591,
        2607
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4224": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2591,
        2607
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4225": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2591,
        2607
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4226": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4235": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4236": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "GT",
      "path": "5"
    },
    "4237": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4238": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4239": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1097"
    },
    "4242": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4243": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4245": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4246": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4247": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4248": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "POP",
      "path": "5"
    },
    "4249": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4251": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4252": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4253": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4254": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4255": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4256": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4257": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4259": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "MUL",
      "path": "5"
    },
    "4260": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4262": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "ADD",
      "path": "5"
    },
    "4263": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4264": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "ADD",
      "path": "5"
    },
    "4265": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4267": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4268": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4269": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4270": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C1"
    },
    "4273": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4274": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4275": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4277": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "ADD",
      "path": "5"
    },
    "4278": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4280": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4281": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "MUL",
      "path": "5"
    },
    "4282": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4283": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "4284": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4285": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "4286": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "ADD",
      "path": "5"
    },
    "4287": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4288": {
      "op": "POP"
    },
    "4289": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4290": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2641,
        2676
      ],
      "op": "POP",
      "path": "5"
    },
    "4291": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2614,
        2676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4292": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2614,
        2676
      ],
      "op": "POP",
      "path": "5"
    },
    "4293": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2684,
        2690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4295": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2680,
        2766
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4302": {
      "op": "SHL"
    },
    "4303": {
      "op": "SUB"
    },
    "4304": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4305": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "AND",
      "path": "5"
    },
    "4306": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4308": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4309": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4310": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4311": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2707
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4313": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4315": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4316": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4318": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4319": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2714
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4320": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2700,
        2720
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4321": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2696,
        2720
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4322": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2696,
        2720
      ],
      "op": "LT",
      "path": "5"
    },
    "4323": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2680,
        2766
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4324": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2680,
        2766
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x105C"
    },
    "4327": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2680,
        2766
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4334": {
      "op": "SHL"
    },
    "4335": {
      "op": "SUB"
    },
    "4336": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 55
    },
    "4337": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "AND",
      "path": "5"
    },
    "4338": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4340": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4341": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4342": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4343": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2749
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4345": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4347": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4348": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4349": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4350": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4352": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4353": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4354": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2756
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4355": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2759,
        2760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4357": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2757,
        2760
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4358": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2757,
        2760
      ],
      "op": "ADD",
      "path": "5"
    },
    "4359": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4360": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4361": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4362": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4363": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4364": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4365": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4366": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2745,
        2761
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4367": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4368": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4369": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2739
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4370": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2739
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4371": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2757,
        2758
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4372": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2757,
        2758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4373": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4374": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "LT",
      "path": "5"
    },
    "4375": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x111C"
    },
    "4378": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4379": {
      "dev": "Index out of range",
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4380": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4381": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4383": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4384": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4385": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "MUL",
      "path": "5"
    },
    "4386": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4387": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4388": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4389": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "ADD",
      "path": "5"
    },
    "4390": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2742
      ],
      "op": "ADD",
      "path": "5"
    },
    "4391": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2732,
        2761
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4392": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2722,
        2725
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 56,
      "value": "0x1"
    },
    "4394": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2722,
        2725
      ],
      "op": "ADD",
      "path": "5"
    },
    "4395": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2680,
        2766
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C7"
    },
    "4398": {
      "fn": "ERC1400.partitionsOf",
      "offset": [
        2680,
        2766
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4399": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4400": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1615,
        1619
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4402": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 57
    },
    "4403": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4404": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4405": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4407": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4409": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4410": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4411": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4412": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4414": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4415": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1665
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4416": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4418": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1672
      ],
      "op": "ADD",
      "path": "5"
    },
    "4419": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1672
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4420": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4422": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1672
      ],
      "op": "AND",
      "path": "5"
    },
    "4423": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1641,
        1672
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4424": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1636,
        1673
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4425": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1636,
        1673
      ],
      "op": "GT",
      "path": "5"
    },
    "4426": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1636,
        1673
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4427": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1636,
        1673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1150"
    },
    "4430": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1636,
        1673
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4431": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1636,
        1673
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4432": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1636,
        1673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4433": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1629,
        1673
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4434": {
      "fn": "ERC1400.getPartitionStatus",
      "offset": [
        1544,
        1678
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4435": {
      "op": "POP"
    },
    "4436": {
      "op": "POP"
    },
    "4437": {
      "fn": "ERC1400.getPartitionStatus",
      "jump": "o",
      "offset": [
        1544,
        1678
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4438": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4439": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7486,
        7493
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 58,
      "value": "0x0"
    },
    "4441": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7486,
        7493
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4448": {
      "op": "SHL"
    },
    "4449": {
      "op": "SUB"
    },
    "4450": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7486,
        7493
      ],
      "op": "AND",
      "path": "5"
    },
    "4451": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7472,
        7482
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4452": {
      "branch": 140,
      "fn": "ERC1400.revokeController",
      "offset": [
        7472,
        7493
      ],
      "op": "EQ",
      "path": "5"
    },
    "4453": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7464,
        7494
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x116D"
    },
    "4456": {
      "branch": 140,
      "fn": "ERC1400.revokeController",
      "offset": [
        7464,
        7494
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4457": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7464,
        7494
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4459": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7464,
        7494
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4460": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7464,
        7494
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4461": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7464,
        7494
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4462": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7536,
        7566
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 59,
      "value": "0x1"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4470": {
      "op": "SHL"
    },
    "4471": {
      "op": "SUB"
    },
    "4472": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4473": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "AND",
      "path": "5"
    },
    "4474": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4476": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4477": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4478": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4479": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7513
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4481": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4483": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4484": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4486": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4487": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7525
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4488": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7532
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4490": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7532
      ],
      "op": "ADD",
      "path": "5"
    },
    "4491": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7532
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4492": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7532
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4494": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7532
      ],
      "op": "AND",
      "path": "5"
    },
    "4495": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4497": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4498": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "GT",
      "path": "5"
    },
    "4499": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4500": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1199"
    },
    "4503": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4504": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4505": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4506": {
      "branch": 141,
      "fn": "ERC1400.revokeController",
      "offset": [
        7506,
        7566
      ],
      "op": "EQ",
      "path": "5"
    },
    "4507": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7498,
        7567
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A3"
    },
    "4510": {
      "branch": 141,
      "fn": "ERC1400.revokeController",
      "offset": [
        7498,
        7567
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4511": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7498,
        7567
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4513": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7498,
        7567
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4514": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7498,
        7567
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4515": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7498,
        7567
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4522": {
      "op": "SHL"
    },
    "4523": {
      "op": "SUB"
    },
    "4524": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 60
    },
    "4525": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "AND",
      "path": "5"
    },
    "4526": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7601,
        7627
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4528": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4529": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4530": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4531": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7579
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4533": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4535": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4536": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4538": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4539": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7591
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4540": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4542": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4543": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4544": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7598
      ],
      "op": "ADD",
      "path": "5"
    },
    "4545": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4546": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4547": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4548": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4551": {
      "op": "NOT"
    },
    "4552": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4553": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4554": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "AND",
      "path": "5"
    },
    "4555": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4556": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7601,
        7627
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4557": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4558": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "MUL",
      "path": "5"
    },
    "4559": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "OR",
      "path": "5"
    },
    "4560": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4561": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4562": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7572,
        7627
      ],
      "op": "POP",
      "path": "5"
    },
    "4563": {
      "fn": "ERC1400.revokeController",
      "offset": [
        7407,
        7631
      ],
      "op": "POP",
      "path": "5"
    },
    "4564": {
      "fn": "ERC1400.revokeController",
      "jump": "o",
      "offset": [
        7407,
        7631
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4565": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4566": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7847,
        7877
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 61,
      "value": "0x1"
    },
    "4568": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7826,
        7835
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "4569": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4571": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4572": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4573": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4574": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7825
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4576": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4578": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4579": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4581": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4582": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7836
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4583": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7843
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4585": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7843
      ],
      "op": "ADD",
      "path": "5"
    },
    "4586": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7843
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4587": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7843
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4589": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7843
      ],
      "op": "AND",
      "path": "5"
    },
    "4590": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4592": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4593": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "GT",
      "path": "5"
    },
    "4594": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4595": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F8"
    },
    "4598": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4599": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4600": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4601": {
      "branch": 142,
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7818,
        7877
      ],
      "op": "EQ",
      "path": "5"
    },
    "4602": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7810,
        7878
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1202"
    },
    "4605": {
      "branch": 142,
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7810,
        7878
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4606": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7810,
        7878
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4608": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7810,
        7878
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4609": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7810,
        7878
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4610": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7810,
        7878
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "op": "SUB"
    },
    "4619": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 62
    },
    "4620": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "AND",
      "path": "5"
    },
    "4621": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7916,
        7942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4623": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4624": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4625": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4626": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7897
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4628": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4630": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4631": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4633": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4634": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7905
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4635": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7912
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4637": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7912
      ],
      "op": "ADD",
      "path": "5"
    },
    "4638": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7912
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4639": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7912
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4641": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7912
      ],
      "op": "AND",
      "path": "5"
    },
    "4642": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4644": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4645": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "GT",
      "path": "5"
    },
    "4646": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4647": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122C"
    },
    "4650": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4651": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4652": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4653": {
      "branch": 143,
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7890,
        7942
      ],
      "op": "EQ",
      "path": "5"
    },
    "4654": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7882,
        7943
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1236"
    },
    "4657": {
      "branch": 143,
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7882,
        7943
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4658": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7882,
        7943
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4660": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7882,
        7943
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4661": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7882,
        7943
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4662": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7882,
        7943
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "op": "SUB"
    },
    "4671": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 63
    },
    "4672": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "AND",
      "path": "5"
    },
    "4673": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7983,
        8009
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4675": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4676": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4677": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4678": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7962
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4680": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4682": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4683": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4685": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4686": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7972
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4687": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4689": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7979
      ],
      "op": "ADD",
      "path": "5"
    },
    "4690": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7979
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4691": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4693": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        7979
      ],
      "op": "AND",
      "path": "5"
    },
    "4694": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4696": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4697": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "GT",
      "path": "5"
    },
    "4698": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4699": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1260"
    },
    "4702": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4703": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4704": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4705": {
      "branch": 144,
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7955,
        8009
      ],
      "op": "EQ",
      "path": "5"
    },
    "4706": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7947,
        8010
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x126A"
    },
    "4709": {
      "branch": 144,
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7947,
        8010
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4710": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7947,
        8010
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4712": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7947,
        8010
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4713": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7947,
        8010
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4714": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7947,
        8010
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4715": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8015,
        8101
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 64,
      "value": "0x128C"
    },
    "4718": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8037,
        8049
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4719": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8051,
        8057
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4720": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8059,
        8067
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4721": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8079
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4723": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4725": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8080,
        8092
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4726": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4727": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4728": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4730": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "5"
    },
    "4731": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4732": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4733": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4734": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4736": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "ADD",
      "path": "5"
    },
    "4737": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4739": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8093
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4740": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4742": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8100
      ],
      "op": "ADD",
      "path": "5"
    },
    "4743": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8069,
        8100
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4744": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8015,
        8036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6C"
    },
    "4747": {
      "fn": "ERC1400.controllerTransfer",
      "jump": "i",
      "offset": [
        8015,
        8101
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4748": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8015,
        8101
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4749": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 65,
      "value": "0x0"
    },
    "4751": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4752": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4753": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4754": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8815
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4756": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4758": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4759": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4760": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4761": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4763": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4764": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4765": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4766": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8829
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4767": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8836
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4769": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8836
      ],
      "op": "ADD",
      "path": "5"
    },
    "4770": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8805,
        8836
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4771": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4772": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4773": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8776,
        8785
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "4774": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4775": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4776": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4777": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4778": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "ADD",
      "path": "5"
    },
    "4779": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4780": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4781": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4782": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "ADD",
      "path": "5"
    },
    "4783": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4784": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4785": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4786": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4787": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4794": {
      "op": "SHL"
    },
    "4795": {
      "op": "SUB"
    },
    "4796": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4797": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4798": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "AND",
      "path": "5"
    },
    "4799": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4800": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4801": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4802": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "AND",
      "path": "5"
    },
    "4803": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4804": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xD723526895FC65DB0ACF8A82FC5AD744CC7B5C1CA543E2C1554AF226C5D3B1B2"
    },
    "4837": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4838": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4839": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4840": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SUB",
      "path": "5"
    },
    "4841": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4843": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "ADD",
      "path": "5"
    },
    "4844": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4845": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        8757,
        8851
      ],
      "op": "LOG3",
      "path": "5"
    },
    "4846": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "POP",
      "path": "5"
    },
    "4847": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "POP",
      "path": "5"
    },
    "4848": {
      "fn": "ERC1400.controllerTransfer",
      "offset": [
        7716,
        8855
      ],
      "op": "POP",
      "path": "5"
    },
    "4849": {
      "fn": "ERC1400.controllerTransfer",
      "jump": "o",
      "offset": [
        7716,
        8855
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4850": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4851": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15685,
        15711
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 66,
      "value": "0x2"
    },
    "4853": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15663,
        15673
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4854": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4856": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4857": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4858": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4859": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15662
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4861": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4863": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4864": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4866": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4867": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15674
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4868": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4870": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15681
      ],
      "op": "ADD",
      "path": "5"
    },
    "4871": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15681
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4872": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15681
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4874": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15681
      ],
      "op": "AND",
      "path": "5"
    },
    "4875": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4877": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4878": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "GT",
      "path": "5"
    },
    "4879": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4880": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1315"
    },
    "4883": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4884": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4885": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4886": {
      "branch": 145,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15655,
        15711
      ],
      "op": "EQ",
      "path": "5"
    },
    "4887": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15647,
        15712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x131F"
    },
    "4890": {
      "branch": 145,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15647,
        15712
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4891": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15647,
        15712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4893": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15647,
        15712
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4894": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15647,
        15712
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4895": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15647,
        15712
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4902": {
      "op": "SHL"
    },
    "4903": {
      "op": "SUB"
    },
    "4904": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 67
    },
    "4905": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "AND",
      "path": "5"
    },
    "4906": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15750,
        15776
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4908": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4909": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4910": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4911": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4913": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4915": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4916": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4918": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4919": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15739
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4920": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15746
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4922": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15746
      ],
      "op": "ADD",
      "path": "5"
    },
    "4923": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15746
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4924": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15746
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4926": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15746
      ],
      "op": "AND",
      "path": "5"
    },
    "4927": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4929": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4930": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "GT",
      "path": "5"
    },
    "4931": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4932": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1349"
    },
    "4935": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4936": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4937": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4938": {
      "branch": 146,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15724,
        15776
      ],
      "op": "EQ",
      "path": "5"
    },
    "4939": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15716,
        15777
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1353"
    },
    "4942": {
      "branch": 146,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15716,
        15777
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4943": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15716,
        15777
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4945": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15716,
        15777
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4946": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15716,
        15777
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4947": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15716,
        15777
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "op": "SUB"
    },
    "4956": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 68
    },
    "4957": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "AND",
      "path": "5"
    },
    "4958": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15818,
        15844
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4960": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4961": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4962": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4963": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15796
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4965": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4967": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4968": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4970": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4971": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15807
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4972": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4974": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15814
      ],
      "op": "ADD",
      "path": "5"
    },
    "4975": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15814
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4976": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4978": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15814
      ],
      "op": "AND",
      "path": "5"
    },
    "4979": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4981": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4982": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "GT",
      "path": "5"
    },
    "4983": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4984": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x137D"
    },
    "4987": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4988": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "INVALID",
      "path": "5"
    },
    "4989": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4990": {
      "branch": 147,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15789,
        15844
      ],
      "op": "EQ",
      "path": "5"
    },
    "4991": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15781,
        15845
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1387"
    },
    "4994": {
      "branch": 147,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15781,
        15845
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4995": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15781,
        15845
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4997": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15781,
        15845
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4998": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15781,
        15845
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4999": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15781,
        15845
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5000": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 69,
      "value": "0x0"
    },
    "5002": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5003": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5004": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5005": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15877
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5007": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5009": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5010": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5012": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5013": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15891
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5014": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15897
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5021": {
      "op": "SHL"
    },
    "5022": {
      "op": "SUB"
    },
    "5023": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15857,
        15897
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5024": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15857,
        15897
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5025": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15857,
        15897
      ],
      "op": "AND",
      "path": "5"
    },
    "5026": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15897
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5027": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15867,
        15897
      ],
      "op": "AND",
      "path": "5"
    },
    "5028": {
      "branch": 148,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15857,
        15897
      ],
      "op": "EQ",
      "path": "5"
    },
    "5029": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15849,
        15898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13AD"
    },
    "5032": {
      "branch": 148,
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15849,
        15898
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5033": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15849,
        15898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5035": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15849,
        15898
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5036": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15849,
        15898
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5037": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15849,
        15898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5038": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15903,
        15964
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 70,
      "value": "0x13B9"
    },
    "5041": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15925,
        15937
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5042": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15939,
        15945
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5043": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15947,
        15956
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5044": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15958,
        15963
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5045": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15903,
        15924
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6C"
    },
    "5048": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "jump": "i",
      "offset": [
        15903,
        15964
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5049": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15903,
        15964
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5050": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 71,
      "value": "0x40"
    },
    "5052": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5053": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5054": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15997,
        16007
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5055": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5056": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5063": {
      "op": "SHL"
    },
    "5064": {
      "op": "SUB"
    },
    "5065": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5066": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5067": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "AND",
      "path": "5"
    },
    "5068": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5070": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5071": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "ADD",
      "path": "5"
    },
    "5072": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5073": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5074": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "AND",
      "path": "5"
    },
    "5075": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5076": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5077": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "ADD",
      "path": "5"
    },
    "5078": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5079": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5081": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5082": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "ADD",
      "path": "5"
    },
    "5083": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5084": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5085": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5086": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "5088": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5089": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "ADD",
      "path": "5"
    },
    "5090": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5091": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5092": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5093": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5094": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5095": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xF3665006498C43504090A58C1D42CE5073B77CCC50E2FE916967087E52FD3A0C"
    },
    "5128": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5129": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5130": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5131": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "SUB",
      "path": "5"
    },
    "5132": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "5134": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "ADD",
      "path": "5"
    },
    "5135": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5136": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15974,
        16048
      ],
      "op": "LOG1",
      "path": "5"
    },
    "5137": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "POP",
      "path": "5"
    },
    "5138": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "POP",
      "path": "5"
    },
    "5139": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "POP",
      "path": "5"
    },
    "5140": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        15533,
        16052
      ],
      "op": "POP",
      "path": "5"
    },
    "5141": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "jump": "o",
      "offset": [
        15533,
        16052
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5142": {
      "offset": [
        910,
        971
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5143": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5145": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5147": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5148": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5149": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5150": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5152": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5153": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5154": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5155": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5157": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5158": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5159": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5160": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5161": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5162": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5163": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5164": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5165": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5166": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5167": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5168": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5169": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "offset": [
        910,
        971
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5170": {
      "fn": "ERC1400.escrowExplicitTransfer",
      "jump": "o",
      "offset": [
        910,
        971
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5171": {
      "fn": "ERC1400.whoIsOrigin",
      "offset": [
        11596,
        11667
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5172": {
      "fn": "ERC1400.whoIsOrigin",
      "offset": [
        11654,
        11663
      ],
      "op": "ORIGIN",
      "path": "5",
      "statement": 72
    },
    "5173": {
      "fn": "ERC1400.whoIsOrigin",
      "offset": [
        11596,
        11667
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5174": {
      "fn": "ERC1400.whoIsOrigin",
      "jump": "o",
      "offset": [
        11596,
        11667
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5175": {
      "fn": "ERC1400.registerController",
      "offset": [
        7092,
        7371
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5176": {
      "fn": "ERC1400.registerController",
      "offset": [
        7173,
        7180
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 73,
      "value": "0x0"
    },
    "5178": {
      "fn": "ERC1400.registerController",
      "offset": [
        7173,
        7180
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5185": {
      "op": "SHL"
    },
    "5186": {
      "op": "SUB"
    },
    "5187": {
      "fn": "ERC1400.registerController",
      "offset": [
        7173,
        7180
      ],
      "op": "AND",
      "path": "5"
    },
    "5188": {
      "fn": "ERC1400.registerController",
      "offset": [
        7159,
        7169
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5189": {
      "branch": 149,
      "fn": "ERC1400.registerController",
      "offset": [
        7159,
        7180
      ],
      "op": "EQ",
      "path": "5"
    },
    "5190": {
      "fn": "ERC1400.registerController",
      "offset": [
        7151,
        7181
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x144E"
    },
    "5193": {
      "branch": 149,
      "fn": "ERC1400.registerController",
      "offset": [
        7151,
        7181
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5194": {
      "fn": "ERC1400.registerController",
      "offset": [
        7151,
        7181
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5196": {
      "fn": "ERC1400.registerController",
      "offset": [
        7151,
        7181
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5197": {
      "fn": "ERC1400.registerController",
      "offset": [
        7151,
        7181
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5198": {
      "fn": "ERC1400.registerController",
      "offset": [
        7151,
        7181
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5199": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 74,
      "value": "0x1"
    },
    "5201": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5202": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5204": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5205": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5206": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5213": {
      "op": "SHL"
    },
    "5214": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5215": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5222": {
      "op": "SHL"
    },
    "5223": {
      "op": "SUB"
    },
    "5224": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5225": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5226": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "AND",
      "path": "5"
    },
    "5227": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5229": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5230": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ADD",
      "path": "5"
    },
    "5231": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5232": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5233": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5234": {
      "fn": "ERC1400.registerController",
      "offset": [
        7232,
        7233
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5236": {
      "fn": "ERC1400.registerController",
      "offset": [
        7232,
        7233
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5237": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5238": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5239": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5240": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "AND",
      "path": "5"
    },
    "5241": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5242": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7216
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "5247": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7216
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5248": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5250": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5251": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5252": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ADD",
      "path": "5"
    },
    "5253": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5254": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5256": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5257": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5258": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5259": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5260": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5261": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5262": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "SUB",
      "path": "5"
    },
    "5263": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ADD",
      "path": "5"
    },
    "5264": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5265": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7206
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5266": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5267": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "5268": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5269": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5270": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5271": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x149F"
    },
    "5274": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5275": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5277": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5278": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5279": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5280": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "POP",
      "path": "5"
    },
    "5281": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "GAS",
      "path": "5"
    },
    "5282": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "5283": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5284": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5285": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5286": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14B3"
    },
    "5289": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5290": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5291": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5293": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5294": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "5295": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5296": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5298": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5299": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5300": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "POP",
      "path": "5"
    },
    "5301": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "POP",
      "path": "5"
    },
    "5302": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "POP",
      "path": "5"
    },
    "5303": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "POP",
      "path": "5"
    },
    "5304": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5306": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5307": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5308": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5310": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5311": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "LT",
      "path": "5"
    },
    "5312": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5313": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C9"
    },
    "5316": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5317": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5319": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5320": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5321": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7228
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5324": {
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7233
      ],
      "op": "LT",
      "path": "5"
    },
    "5325": {
      "branch": 150,
      "fn": "ERC1400.registerController",
      "offset": [
        7193,
        7233
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5326": {
      "fn": "ERC1400.registerController",
      "offset": [
        7185,
        7234
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14D6"
    },
    "5329": {
      "branch": 150,
      "fn": "ERC1400.registerController",
      "offset": [
        7185,
        7234
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5330": {
      "fn": "ERC1400.registerController",
      "offset": [
        7185,
        7234
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5332": {
      "fn": "ERC1400.registerController",
      "offset": [
        7185,
        7234
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5333": {
      "fn": "ERC1400.registerController",
      "offset": [
        7185,
        7234
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5334": {
      "fn": "ERC1400.registerController",
      "offset": [
        7185,
        7234
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5341": {
      "op": "SHL"
    },
    "5342": {
      "op": "SUB"
    },
    "5343": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 75
    },
    "5344": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "AND",
      "path": "5"
    },
    "5345": {
      "fn": "ERC1400.registerController",
      "offset": [
        7276,
        7302
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5347": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5348": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5349": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5350": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5352": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5354": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5355": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5357": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5358": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7265
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5359": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7272
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5361": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7272
      ],
      "op": "ADD",
      "path": "5"
    },
    "5362": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7272
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5363": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7272
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5365": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7272
      ],
      "op": "AND",
      "path": "5"
    },
    "5366": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5368": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5369": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "GT",
      "path": "5"
    },
    "5370": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5371": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1500"
    },
    "5374": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5375": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "INVALID",
      "path": "5"
    },
    "5376": {
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5377": {
      "branch": 151,
      "fn": "ERC1400.registerController",
      "offset": [
        7246,
        7302
      ],
      "op": "EQ",
      "path": "5"
    },
    "5378": {
      "fn": "ERC1400.registerController",
      "offset": [
        7238,
        7303
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x150A"
    },
    "5381": {
      "branch": 151,
      "fn": "ERC1400.registerController",
      "offset": [
        7238,
        7303
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5382": {
      "fn": "ERC1400.registerController",
      "offset": [
        7238,
        7303
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5384": {
      "fn": "ERC1400.registerController",
      "offset": [
        7238,
        7303
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5385": {
      "fn": "ERC1400.registerController",
      "offset": [
        7238,
        7303
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5386": {
      "fn": "ERC1400.registerController",
      "offset": [
        7238,
        7303
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5393": {
      "op": "SHL"
    },
    "5394": {
      "op": "SUB"
    },
    "5395": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 76
    },
    "5396": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "AND",
      "path": "5"
    },
    "5397": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5399": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5400": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5401": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5402": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7315
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5404": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5406": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5407": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5409": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5410": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7327
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5411": {
      "fn": "ERC1400.registerController",
      "offset": [
        7337,
        7367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5413": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7334
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5414": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7334
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5415": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7334
      ],
      "op": "ADD",
      "path": "5"
    },
    "5416": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7367
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5417": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7367
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5418": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5420": {
      "op": "NOT"
    },
    "5421": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7367
      ],
      "op": "AND",
      "path": "5"
    },
    "5422": {
      "fn": "ERC1400.registerController",
      "offset": [
        7337,
        7367
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5423": {
      "fn": "ERC1400.registerController",
      "offset": [
        7337,
        7367
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5424": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CD"
    },
    "5427": {
      "fn": "ERC1400.registerController",
      "offset": [
        7308,
        7367
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5428": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3212,
        3394
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5429": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3270
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 77,
      "value": "0x1"
    },
    "5431": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3270
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5432": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5434": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5435": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5436": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5443": {
      "op": "SHL"
    },
    "5444": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5445": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5446": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3281,
        3291
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5447": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5449": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5450": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ADD",
      "path": "5"
    },
    "5451": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5452": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5453": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5454": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3296,
        3297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5456": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3296,
        3297
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5463": {
      "op": "SHL"
    },
    "5464": {
      "op": "SUB"
    },
    "5465": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3270
      ],
      "op": "AND",
      "path": "5"
    },
    "5466": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3270
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5467": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3280
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "5472": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3280
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5473": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5475": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5476": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5477": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ADD",
      "path": "5"
    },
    "5478": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5479": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5481": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5482": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5483": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5484": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5485": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5486": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "SUB",
      "path": "5"
    },
    "5487": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ADD",
      "path": "5"
    },
    "5488": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5489": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3270
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5490": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5491": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "5492": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5493": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5494": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5495": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x157F"
    },
    "5498": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5499": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5501": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5502": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5503": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5504": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "POP",
      "path": "5"
    },
    "5505": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "GAS",
      "path": "5"
    },
    "5506": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "5507": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5508": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5509": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5510": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1593"
    },
    "5513": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5514": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5515": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5517": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5518": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "5519": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5520": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5522": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5523": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5524": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "POP",
      "path": "5"
    },
    "5525": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "POP",
      "path": "5"
    },
    "5526": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "POP",
      "path": "5"
    },
    "5527": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "POP",
      "path": "5"
    },
    "5528": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5530": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5531": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5532": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5534": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5535": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "LT",
      "path": "5"
    },
    "5536": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5537": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15A9"
    },
    "5540": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5541": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5543": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5544": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5545": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5548": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3297
      ],
      "op": "LT",
      "path": "5"
    },
    "5549": {
      "branch": 152,
      "fn": "ERC1400.registerAccount",
      "offset": [
        3257,
        3297
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5550": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3249,
        3298
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15B6"
    },
    "5553": {
      "branch": 152,
      "fn": "ERC1400.registerAccount",
      "offset": [
        3249,
        3298
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5554": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3249,
        3298
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5556": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3249,
        3298
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5557": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3249,
        3298
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5558": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3249,
        3298
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5559": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3310,
        3320
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 78
    },
    "5560": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3330,
        3331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5562": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5563": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5564": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5565": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3309
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5567": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5569": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5570": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5572": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5573": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3321
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5574": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3331
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5575": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3331
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5576": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3302,
        3331
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5577": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3335,
        3361
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 79,
      "value": "0x1"
    },
    "5579": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3335,
        3361
      ],
      "op": "ADD",
      "path": "5"
    },
    "5580": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3335,
        3390
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5581": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3335,
        3390
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5584": {
      "op": "NOT"
    },
    "5585": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3335,
        3390
      ],
      "op": "AND",
      "path": "5"
    },
    "5586": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3335,
        3390
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5587": {
      "fn": "ERC1400.registerAccount",
      "offset": [
        3335,
        3390
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5588": {
      "fn": "ERC1400.registerAccount",
      "jump": "o",
      "offset": [
        3212,
        3394
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5589": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5590": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12599,
        12603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5592": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 80
    },
    "5593": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5594": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5595": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12669
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5597": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5599": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5600": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5602": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5603": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12683
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5604": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12689
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5611": {
      "op": "SHL"
    },
    "5612": {
      "op": "SUB"
    },
    "5613": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12702
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5614": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12702
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5615": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12702
      ],
      "op": "AND",
      "path": "5"
    },
    "5616": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12689
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5617": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12689
      ],
      "op": "AND",
      "path": "5"
    },
    "5618": {
      "branch": 153,
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12659,
        12702
      ],
      "op": "EQ",
      "path": "5"
    },
    "5619": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x162D"
    },
    "5622": {
      "branch": 153,
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5623": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5625": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5626": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5632": {
      "op": "SHL"
    },
    "5633": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5634": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5635": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5637": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "ADD",
      "path": "5"
    },
    "5638": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5639": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5640": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5642": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "ADD",
      "path": "5"
    },
    "5643": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5644": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5645": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "SUB",
      "path": "5"
    },
    "5646": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5647": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5648": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x33"
    },
    "5650": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5651": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5652": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5654": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "ADD",
      "path": "5"
    },
    "5655": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5656": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D78"
    },
    "5659": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x33"
    },
    "5661": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5662": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5663": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5665": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "ADD",
      "path": "5"
    },
    "5666": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5667": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "POP",
      "path": "5"
    },
    "5668": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "POP",
      "path": "5"
    },
    "5669": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5671": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5672": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5673": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5674": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "SUB",
      "path": "5"
    },
    "5675": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5676": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5677": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12651,
        12758
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5678": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12922,
        12948
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 81,
      "value": "0x2"
    },
    "5680": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12900,
        12910
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5681": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5683": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5684": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5685": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5686": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12899
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5688": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5690": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5691": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5693": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5694": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12911
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5695": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5697": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12918
      ],
      "op": "ADD",
      "path": "5"
    },
    "5698": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12918
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5699": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12918
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5701": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12918
      ],
      "op": "AND",
      "path": "5"
    },
    "5702": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5704": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5705": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "GT",
      "path": "5"
    },
    "5706": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5707": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1650"
    },
    "5710": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5711": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "INVALID",
      "path": "5"
    },
    "5712": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5713": {
      "branch": 154,
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12892,
        12948
      ],
      "op": "EQ",
      "path": "5"
    },
    "5714": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168C"
    },
    "5717": {
      "branch": 154,
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5718": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5720": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5729": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5730": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5732": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "ADD",
      "path": "5"
    },
    "5733": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5734": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5735": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5737": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "ADD",
      "path": "5"
    },
    "5738": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5739": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5740": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "SUB",
      "path": "5"
    },
    "5741": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5742": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5743": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x45"
    },
    "5745": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5746": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5747": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5749": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "ADD",
      "path": "5"
    },
    "5750": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5751": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D33"
    },
    "5754": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x45"
    },
    "5756": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5757": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "5758": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5760": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "ADD",
      "path": "5"
    },
    "5761": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5762": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "POP",
      "path": "5"
    },
    "5763": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "POP",
      "path": "5"
    },
    "5764": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5766": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5767": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5768": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5769": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "SUB",
      "path": "5"
    },
    "5770": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5771": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5772": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12884,
        13022
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5773": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13253,
        13282
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 82,
      "value": "0x0"
    },
    "5775": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5776": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5777": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5778": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13229
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5780": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5782": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5783": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5784": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5785": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5787": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5788": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5789": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13243
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5790": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13250
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5792": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13250
      ],
      "op": "ADD",
      "path": "5"
    },
    "5793": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13282
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5794": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13282
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5797": {
      "op": "NOT"
    },
    "5798": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13282
      ],
      "op": "AND",
      "path": "5"
    },
    "5799": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13282
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5800": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13282
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5801": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13297
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5803": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5804": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13311
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5805": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13311
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5806": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5807": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13311
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5808": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13219,
        13282
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5810": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13326
      ],
      "op": "ADD",
      "path": "5"
    },
    "5811": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13289,
        13326
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5812": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13329,
        13332
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "5813": {
      "op": "LT"
    },
    "5814": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13286,
        13387
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5815": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13286,
        13387
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16D0"
    },
    "5818": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13286,
        13387
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5819": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 83,
      "value": "0x0"
    },
    "5821": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5822": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5823": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5824": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13347
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "5826": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5828": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5829": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5831": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5832": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13361
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5833": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13379,
        13382
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "5834": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13376
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5836": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5837": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13376
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5838": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13376
      ],
      "op": "ADD",
      "path": "5"
    },
    "5839": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13339,
        13382
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5840": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13286,
        13387
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5841": {
      "op": "POP"
    },
    "5842": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        13397,
        13401
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 84,
      "value": "0x1"
    },
    "5844": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5845": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5846": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "POP",
      "path": "5"
    },
    "5847": {
      "fn": "ERC1400.deconfinePartition",
      "offset": [
        12514,
        13405
      ],
      "op": "POP",
      "path": "5"
    },
    "5848": {
      "fn": "ERC1400.deconfinePartition",
      "jump": "o",
      "offset": [
        12514,
        13405
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5849": {
      "fn": "ERC1400.getUid",
      "offset": [
        1932,
        2047
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5856": {
      "op": "SHL"
    },
    "5857": {
      "op": "SUB"
    },
    "5858": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 85
    },
    "5859": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5860": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5861": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "AND",
      "path": "5"
    },
    "5862": {
      "fn": "ERC1400.getUid",
      "offset": [
        1995,
        2002
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5864": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5865": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5866": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5867": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5869": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5871": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5872": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5873": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5874": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5876": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5877": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5878": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2034
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5879": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "5880": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5881": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5882": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5883": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5884": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5885": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5886": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5887": {
      "fn": "ERC1400.getUid",
      "offset": [
        2024,
        2041
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5888": {
      "fn": "ERC1400.getUid",
      "jump": "o",
      "offset": [
        1932,
        2047
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5889": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5890": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8970,
        9000
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 86,
      "value": "0x1"
    },
    "5892": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8949,
        8958
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "5893": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5895": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5896": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5897": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5898": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8948
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5900": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5902": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5903": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5905": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5906": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8959
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5907": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8966
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5909": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8966
      ],
      "op": "ADD",
      "path": "5"
    },
    "5910": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8966
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5911": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8966
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5913": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        8966
      ],
      "op": "AND",
      "path": "5"
    },
    "5914": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5916": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5917": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "GT",
      "path": "5"
    },
    "5918": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5919": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1724"
    },
    "5922": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5923": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "INVALID",
      "path": "5"
    },
    "5924": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5925": {
      "branch": 155,
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8941,
        9000
      ],
      "op": "EQ",
      "path": "5"
    },
    "5926": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8933,
        9001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x172E"
    },
    "5929": {
      "branch": 155,
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8933,
        9001
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5930": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8933,
        9001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5932": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8933,
        9001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5933": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8933,
        9001
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5934": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8933,
        9001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5941": {
      "op": "SHL"
    },
    "5942": {
      "op": "SUB"
    },
    "5943": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 87
    },
    "5944": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "AND",
      "path": "5"
    },
    "5945": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9039,
        9065
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5947": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5948": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5949": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5950": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9020
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5952": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5954": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5955": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5957": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5958": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9028
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5959": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5961": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9035
      ],
      "op": "ADD",
      "path": "5"
    },
    "5962": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9035
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5963": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5965": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9035
      ],
      "op": "AND",
      "path": "5"
    },
    "5966": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5968": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5969": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "GT",
      "path": "5"
    },
    "5970": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5971": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1758"
    },
    "5974": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5975": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "INVALID",
      "path": "5"
    },
    "5976": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5977": {
      "branch": 156,
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9013,
        9065
      ],
      "op": "EQ",
      "path": "5"
    },
    "5978": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9005,
        9066
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1762"
    },
    "5981": {
      "branch": 156,
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9005,
        9066
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5982": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9005,
        9066
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5984": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9005,
        9066
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5985": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9005,
        9066
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5986": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9005,
        9066
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5987": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9071,
        9158
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 88,
      "value": "0x1784"
    },
    "5990": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9093,
        9105
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5991": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9107,
        9113
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5992": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9115,
        9124
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "5993": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9136
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5995": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5997": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9137,
        9149
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5998": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5999": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6000": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6002": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "ADD",
      "path": "5"
    },
    "6003": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6004": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6005": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6006": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6008": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "ADD",
      "path": "5"
    },
    "6009": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6011": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9150
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6012": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6014": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9157
      ],
      "op": "ADD",
      "path": "5"
    },
    "6015": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9126,
        9157
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6016": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9071,
        9092
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6C"
    },
    "6019": {
      "fn": "ERC1400.controllerRedeem",
      "jump": "i",
      "offset": [
        9071,
        9158
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6020": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9071,
        9158
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6021": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 89,
      "value": "0x0"
    },
    "6023": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6024": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6025": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6026": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6028": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6030": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6031": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6032": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6033": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6035": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6036": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6037": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6038": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9890
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6039": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9897
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6041": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9897
      ],
      "op": "ADD",
      "path": "5"
    },
    "6042": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9866,
        9897
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6043": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6044": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6045": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9847,
        9856
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "6046": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6047": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6048": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6049": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6050": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "ADD",
      "path": "5"
    },
    "6051": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6052": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6053": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6054": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "ADD",
      "path": "5"
    },
    "6055": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6056": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6057": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6058": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6059": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6066": {
      "op": "SHL"
    },
    "6067": {
      "op": "SUB"
    },
    "6068": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6069": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "AND",
      "path": "5"
    },
    "6070": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6071": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5CBE58C63D4E8D44ED895CB43CC52BBE40BCF56A6F32E215112961D9921AAA60"
    },
    "6104": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6105": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6106": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6107": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6108": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SUB",
      "path": "5"
    },
    "6109": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "6111": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "ADD",
      "path": "5"
    },
    "6112": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6113": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        9826,
        9912
      ],
      "op": "LOG2",
      "path": "5"
    },
    "6114": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "POP",
      "path": "5"
    },
    "6115": {
      "fn": "ERC1400.controllerRedeem",
      "offset": [
        8859,
        9916
      ],
      "op": "POP",
      "path": "5"
    },
    "6116": {
      "fn": "ERC1400.controllerRedeem",
      "jump": "o",
      "offset": [
        8859,
        9916
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6117": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14147,
        14825
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6118": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14216,
        14220
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6120": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14264,
        14290
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 90,
      "value": "0x2"
    },
    "6122": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14242,
        14252
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6123": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6125": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6126": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6127": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6128": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6130": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6132": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6133": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6135": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6136": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14253
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6137": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6139": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14260
      ],
      "op": "ADD",
      "path": "5"
    },
    "6140": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14260
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6141": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6143": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14260
      ],
      "op": "AND",
      "path": "5"
    },
    "6144": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6146": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6147": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "GT",
      "path": "5"
    },
    "6148": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6149": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x180A"
    },
    "6152": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6153": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6154": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6155": {
      "branch": 157,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14234,
        14290
      ],
      "op": "EQ",
      "path": "5"
    },
    "6156": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14226,
        14291
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1814"
    },
    "6159": {
      "branch": 157,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14226,
        14291
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6160": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14226,
        14291
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6162": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14226,
        14291
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6163": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14226,
        14291
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6164": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14226,
        14291
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6165": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14311,
        14320
      ],
      "op": "ORIGIN",
      "path": "5",
      "statement": 91
    },
    "6166": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14332,
        14358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6168": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6169": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6170": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6171": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14310
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6173": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6175": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6176": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6178": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6179": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14321
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6180": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14328
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6182": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14328
      ],
      "op": "ADD",
      "path": "5"
    },
    "6183": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14328
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6184": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14328
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6186": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14328
      ],
      "op": "AND",
      "path": "5"
    },
    "6187": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6189": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6190": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "GT",
      "path": "5"
    },
    "6191": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6192": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1835"
    },
    "6195": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6196": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6197": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6198": {
      "branch": 158,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14303,
        14358
      ],
      "op": "EQ",
      "path": "5"
    },
    "6199": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14295,
        14359
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x183F"
    },
    "6202": {
      "branch": 158,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14295,
        14359
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6203": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14295,
        14359
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6205": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14295,
        14359
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6206": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14295,
        14359
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6207": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14295,
        14359
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6208": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 92,
      "value": "0x0"
    },
    "6210": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6211": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6212": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6213": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14393
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6215": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6217": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6218": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6220": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6221": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14407
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6222": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14414
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6229": {
      "op": "SHL"
    },
    "6230": {
      "op": "SUB"
    },
    "6231": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14385,
        14414
      ],
      "op": "AND",
      "path": "5"
    },
    "6232": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14371,
        14381
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6233": {
      "branch": 159,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14371,
        14414
      ],
      "op": "EQ",
      "path": "5"
    },
    "6234": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14363,
        14415
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1862"
    },
    "6237": {
      "branch": 159,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14363,
        14415
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6238": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14363,
        14415
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6240": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14363,
        14415
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6241": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14363,
        14415
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6242": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14363,
        14415
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6243": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 93,
      "value": "0x0"
    },
    "6245": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6246": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6247": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6248": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14448
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6250": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6252": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6253": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6255": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6256": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14462
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6257": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14472
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6259": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14472
      ],
      "op": "ADD",
      "path": "5"
    },
    "6260": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14472
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6267": {
      "op": "SHL"
    },
    "6268": {
      "op": "SUB"
    },
    "6269": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14440,
        14472
      ],
      "op": "AND",
      "path": "5"
    },
    "6270": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14427,
        14436
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "6271": {
      "branch": 160,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14427,
        14472
      ],
      "op": "EQ",
      "path": "5"
    },
    "6272": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14419,
        14473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1888"
    },
    "6275": {
      "branch": 160,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14419,
        14473
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6276": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14419,
        14473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6278": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14419,
        14473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6279": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14419,
        14473
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6280": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14419,
        14473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6281": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14520,
        14551
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 94,
      "value": "0x1"
    },
    "6283": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6285": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6286": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6287": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6288": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14495
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6290": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6292": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6293": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6294": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6295": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6297": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6298": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6299": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14509
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6300": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6302": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14516
      ],
      "op": "ADD",
      "path": "5"
    },
    "6303": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14516
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6304": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14516
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6306": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14516
      ],
      "op": "AND",
      "path": "5"
    },
    "6307": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14516
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6308": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6309": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "GT",
      "path": "5"
    },
    "6310": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6311": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18AC"
    },
    "6314": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6315": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6316": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6317": {
      "branch": 161,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14485,
        14551
      ],
      "op": "EQ",
      "path": "5"
    },
    "6318": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14477,
        14552
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18B6"
    },
    "6321": {
      "branch": 161,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14477,
        14552
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6322": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14477,
        14552
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6324": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14477,
        14552
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6325": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14477,
        14552
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6326": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14477,
        14552
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6327": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14633,
        14634
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 95,
      "value": "0x0"
    },
    "6329": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6330": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6331": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6332": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6334": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6336": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6337": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6338": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6339": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6341": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6342": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6343": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14597
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6344": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14603
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6351": {
      "op": "SHL"
    },
    "6352": {
      "op": "SUB"
    },
    "6353": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14603
      ],
      "op": "AND",
      "path": "5"
    },
    "6354": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14604
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6355": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14604
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6356": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14572
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "6358": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14604
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6359": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14604
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6360": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14604
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6361": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14604
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6362": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14604
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6363": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14605,
        14615
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6364": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14616
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6365": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14616
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6366": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14616
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6367": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14616
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6368": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14616
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6369": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14616
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6370": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14616
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6371": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6372": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6373": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6374": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6375": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6376": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6377": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6378": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14630
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6379": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14634
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6380": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14634
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6381": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14556,
        14634
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6382": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14662
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 96,
      "value": "0x5"
    },
    "6384": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6385": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14676
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6386": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14676
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6387": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6388": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14676
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6389": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14573,
        14603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6391": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14691
      ],
      "op": "ADD",
      "path": "5"
    },
    "6392": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14654,
        14691
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6393": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14647,
        14650
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "6394": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14647,
        14691
      ],
      "op": "GT",
      "path": "5"
    },
    "6395": {
      "branch": 162,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14647,
        14691
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6396": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14639,
        14692
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1904"
    },
    "6399": {
      "branch": 162,
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14639,
        14692
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6400": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14639,
        14692
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6402": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14639,
        14692
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6403": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14639,
        14692
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6404": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14639,
        14692
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6405": {
      "op": "POP"
    },
    "6406": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14730,
        14759
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 97,
      "value": "0x0"
    },
    "6408": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6409": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6410": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6411": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6413": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6415": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6416": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6417": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6418": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6420": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6421": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6422": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14720
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6423": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6425": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14727
      ],
      "op": "ADD",
      "path": "5"
    },
    "6426": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14759
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6427": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14759
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6430": {
      "op": "NOT"
    },
    "6431": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14759
      ],
      "op": "AND",
      "path": "5"
    },
    "6432": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14759
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6433": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14759
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6434": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14771
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 98,
      "value": "0x5"
    },
    "6436": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6437": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6438": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6439": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6440": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14785
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6441": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14803,
        14806
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "6442": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14759
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6444": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14800
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6445": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14800
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6446": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14800
      ],
      "op": "ADD",
      "path": "5"
    },
    "6447": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14763,
        14806
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6448": {
      "fn": "ERC1400.stopOptionByRecipient",
      "offset": [
        14696,
        14759
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6449": {
      "fn": "ERC1400.stopOptionByRecipient",
      "jump": "o",
      "offset": [
        14147,
        14825
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6450": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13517,
        14144
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6451": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13585,
        13589
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6453": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13633,
        13659
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 99,
      "value": "0x2"
    },
    "6455": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13611,
        13621
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6456": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6458": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6459": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6460": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6461": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13610
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6463": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6465": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6466": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6468": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6469": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13622
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6470": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13629
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6472": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13629
      ],
      "op": "ADD",
      "path": "5"
    },
    "6473": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13629
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6474": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13629
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6476": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13629
      ],
      "op": "AND",
      "path": "5"
    },
    "6477": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6479": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6480": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "GT",
      "path": "5"
    },
    "6481": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6482": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1957"
    },
    "6485": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6486": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6487": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6488": {
      "branch": 163,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13603,
        13659
      ],
      "op": "EQ",
      "path": "5"
    },
    "6489": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13595,
        13660
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1961"
    },
    "6492": {
      "branch": 163,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13595,
        13660
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6493": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13595,
        13660
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6495": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13595,
        13660
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6496": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13595,
        13660
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6497": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13595,
        13660
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6498": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13680,
        13689
      ],
      "op": "ORIGIN",
      "path": "5",
      "statement": 100
    },
    "6499": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13701,
        13727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6501": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6502": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6503": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6504": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13679
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6506": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6508": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6509": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6511": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6512": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13690
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6513": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6515": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13697
      ],
      "op": "ADD",
      "path": "5"
    },
    "6516": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13697
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6517": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6519": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13697
      ],
      "op": "AND",
      "path": "5"
    },
    "6520": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6522": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6523": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "GT",
      "path": "5"
    },
    "6524": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6525": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1982"
    },
    "6528": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6529": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6530": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6531": {
      "branch": 164,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13672,
        13727
      ],
      "op": "EQ",
      "path": "5"
    },
    "6532": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13664,
        13728
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x198C"
    },
    "6535": {
      "branch": 164,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13664,
        13728
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6536": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13664,
        13728
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6538": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13664,
        13728
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6539": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13664,
        13728
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6540": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13664,
        13728
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6541": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 101,
      "value": "0x0"
    },
    "6543": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6544": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6545": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6546": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "6548": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6550": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6551": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6553": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6554": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13776
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6555": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13783
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "SUB"
    },
    "6564": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13754,
        13783
      ],
      "op": "AND",
      "path": "5"
    },
    "6565": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13740,
        13750
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6566": {
      "branch": 165,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13740,
        13783
      ],
      "op": "EQ",
      "path": "5"
    },
    "6567": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13732,
        13784
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19AF"
    },
    "6570": {
      "branch": 165,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13732,
        13784
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6571": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13732,
        13784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6573": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13732,
        13784
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6574": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13732,
        13784
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6575": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13732,
        13784
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6576": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 102,
      "value": "0x0"
    },
    "6578": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6579": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6580": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6581": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13819
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6583": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6585": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6586": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6588": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6589": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13833
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6590": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13839
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6597": {
      "op": "SHL"
    },
    "6598": {
      "op": "SUB"
    },
    "6599": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13809,
        13839
      ],
      "op": "AND",
      "path": "5"
    },
    "6600": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13796,
        13805
      ],
      "op": "ORIGIN",
      "path": "5"
    },
    "6601": {
      "branch": 166,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13796,
        13839
      ],
      "op": "EQ",
      "path": "5"
    },
    "6602": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13788,
        13840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19D2"
    },
    "6605": {
      "branch": 166,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13788,
        13840
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6606": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13788,
        13840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6608": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13788,
        13840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6609": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13788,
        13840
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6610": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13788,
        13840
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6611": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13887,
        13918
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 103,
      "value": "0x1"
    },
    "6613": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6615": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6616": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6617": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6618": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13862
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6620": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6622": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6623": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6624": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6625": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6627": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6628": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6629": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13876
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6630": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13883
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6632": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13883
      ],
      "op": "ADD",
      "path": "5"
    },
    "6633": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13883
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6634": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13883
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6636": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13883
      ],
      "op": "AND",
      "path": "5"
    },
    "6637": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13883
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6638": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6639": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "GT",
      "path": "5"
    },
    "6640": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6641": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19F6"
    },
    "6644": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6645": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "INVALID",
      "path": "5"
    },
    "6646": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6647": {
      "branch": 167,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13852,
        13918
      ],
      "op": "EQ",
      "path": "5"
    },
    "6648": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13844,
        13919
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A00"
    },
    "6651": {
      "branch": 167,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13844,
        13919
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6652": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13844,
        13919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6654": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13844,
        13919
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6655": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13844,
        13919
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6656": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13844,
        13919
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6657": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14000,
        14001
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 104,
      "value": "0x0"
    },
    "6659": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6660": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6661": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6662": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13950
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6664": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6666": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6667": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6668": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6669": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6671": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6672": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6673": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13964
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6674": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13970
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6681": {
      "op": "SHL"
    },
    "6682": {
      "op": "SUB"
    },
    "6683": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13970
      ],
      "op": "AND",
      "path": "5"
    },
    "6684": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13971
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6685": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13971
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6686": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "6688": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13971
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6689": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13971
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6690": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13971
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6691": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13971
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6692": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13971
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6693": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13972,
        13982
      ],
      "op": "CALLER",
      "path": "5"
    },
    "6694": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13983
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6695": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13983
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6696": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13983
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6697": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13983
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6698": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13983
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6699": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13983
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6700": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13983
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6701": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6702": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6703": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6704": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6705": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6706": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6707": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6708": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        13997
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6709": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        14001
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6710": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        14001
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6711": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13923,
        14001
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6712": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14028
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 105,
      "value": "0x5"
    },
    "6714": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14042
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6715": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14042
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6716": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14042
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6717": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14042
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6718": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14042
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6719": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        13940,
        13970
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6721": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14057
      ],
      "op": "ADD",
      "path": "5"
    },
    "6722": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14020,
        14057
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6723": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14014,
        14017
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "6724": {
      "branch": 168,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14014,
        14057
      ],
      "op": "GT",
      "path": "5"
    },
    "6725": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14006,
        14058
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A4D"
    },
    "6728": {
      "branch": 168,
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14006,
        14058
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6729": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14006,
        14058
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6731": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14006,
        14058
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6732": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14006,
        14058
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6733": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14006,
        14058
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6734": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14096,
        14125
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 106,
      "value": "0x0"
    },
    "6736": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6737": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6738": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6739": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14072
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6741": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6743": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6744": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6746": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6747": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14086
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6748": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14093
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "6750": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14093
      ],
      "op": "ADD",
      "path": "5"
    },
    "6751": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14125
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6752": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14125
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6755": {
      "op": "NOT"
    },
    "6756": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14125
      ],
      "op": "AND",
      "path": "5"
    },
    "6757": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14125
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6759": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14096,
        14125
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6760": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14125
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB65"
    },
    "6763": {
      "fn": "ERC1400.stopOptionByPromisor",
      "offset": [
        14062,
        14125
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6764": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5827,
        6507
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6765": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 107,
      "value": "0x1"
    },
    "6767": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6768": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6770": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6771": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6772": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6779": {
      "op": "SHL"
    },
    "6780": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6781": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6788": {
      "op": "SHL"
    },
    "6789": {
      "op": "SUB"
    },
    "6790": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6791": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6792": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "AND",
      "path": "5"
    },
    "6793": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6795": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6796": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ADD",
      "path": "5"
    },
    "6797": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6798": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6799": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6800": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5995,
        6000
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6801": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5995,
        6000
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6802": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6803": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6804": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6805": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "AND",
      "path": "5"
    },
    "6806": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6807": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5981
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "6812": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5981
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6813": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6815": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6816": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6817": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ADD",
      "path": "5"
    },
    "6818": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6819": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6821": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6822": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6823": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6824": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6825": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6826": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6827": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "SUB",
      "path": "5"
    },
    "6828": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ADD",
      "path": "5"
    },
    "6829": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6830": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5971
      ],
      "op": "DUP7",
      "path": "5"
    },
    "6831": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6832": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "6833": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6834": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6835": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6836": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1ABC"
    },
    "6839": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6840": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6842": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6843": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6844": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6845": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "POP",
      "path": "5"
    },
    "6846": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "GAS",
      "path": "5"
    },
    "6847": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "6848": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6849": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6850": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6851": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AD0"
    },
    "6854": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6855": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6856": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6858": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6859": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "6860": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6861": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6863": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6864": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6865": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "POP",
      "path": "5"
    },
    "6866": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "POP",
      "path": "5"
    },
    "6867": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "POP",
      "path": "5"
    },
    "6868": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "POP",
      "path": "5"
    },
    "6869": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6871": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6872": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "6873": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6875": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6876": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "LT",
      "path": "5"
    },
    "6877": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6878": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AE6"
    },
    "6881": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6882": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6884": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6885": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6886": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6887": {
      "op": "POP"
    },
    "6888": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        5991
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6889": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        6000
      ],
      "op": "LT",
      "path": "5"
    },
    "6890": {
      "branch": 169,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5958,
        6000
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6891": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5950,
        6001
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AF3"
    },
    "6894": {
      "branch": 169,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5950,
        6001
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6895": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5950,
        6001
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6897": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5950,
        6001
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6898": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5950,
        6001
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6899": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        5950,
        6001
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6900": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 108,
      "value": "0x0"
    },
    "6902": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6903": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6904": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6905": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6033
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6907": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6909": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6910": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6912": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6913": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6047
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6914": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6053
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6921": {
      "op": "SHL"
    },
    "6922": {
      "op": "SUB"
    },
    "6923": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6013,
        6053
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6924": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6013,
        6053
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6925": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6013,
        6053
      ],
      "op": "AND",
      "path": "5"
    },
    "6926": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6053
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6927": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6023,
        6053
      ],
      "op": "AND",
      "path": "5"
    },
    "6928": {
      "branch": 170,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6013,
        6053
      ],
      "op": "EQ",
      "path": "5"
    },
    "6929": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6005,
        6054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B19"
    },
    "6932": {
      "branch": 170,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6005,
        6054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6933": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6005,
        6054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6935": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6005,
        6054
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6936": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6005,
        6054
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6937": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6005,
        6054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6938": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 109,
      "value": "0x1"
    },
    "6940": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6941": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6943": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6944": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6945": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6952": {
      "op": "SHL"
    },
    "6953": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6954": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6961": {
      "op": "SHL"
    },
    "6962": {
      "op": "SUB"
    },
    "6963": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP6",
      "path": "5"
    },
    "6964": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6965": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "AND",
      "path": "5"
    },
    "6966": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6968": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6969": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ADD",
      "path": "5"
    },
    "6970": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6971": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6108,
        6112
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "6972": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "6974": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6975": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ADD",
      "path": "5"
    },
    "6976": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6977": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6978": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6979": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6118,
        6123
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6980": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6118,
        6123
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "6981": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6982": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6983": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6984": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "AND",
      "path": "5"
    },
    "6985": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6986": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6089
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDD62ED3E"
    },
    "6991": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6089
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6992": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "6994": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6995": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6996": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ADD",
      "path": "5"
    },
    "6997": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6998": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7000": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7001": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7002": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7003": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7004": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7005": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7006": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "SUB",
      "path": "5"
    },
    "7007": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ADD",
      "path": "5"
    },
    "7008": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7009": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6079
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7010": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7011": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "7012": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7013": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7014": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7015": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B6F"
    },
    "7018": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7019": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7021": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7022": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7023": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7024": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "POP",
      "path": "5"
    },
    "7025": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "GAS",
      "path": "5"
    },
    "7026": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "7027": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7028": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7029": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7030": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B83"
    },
    "7033": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7034": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7035": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7037": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7038": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "7039": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7040": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7042": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7043": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7044": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "POP",
      "path": "5"
    },
    "7045": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "POP",
      "path": "5"
    },
    "7046": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "POP",
      "path": "5"
    },
    "7047": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "POP",
      "path": "5"
    },
    "7048": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7050": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7051": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7052": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7054": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7055": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "LT",
      "path": "5"
    },
    "7056": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7057": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B99"
    },
    "7060": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7061": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7063": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7064": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7065": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7066": {
      "op": "POP"
    },
    "7067": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6114
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7068": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6123
      ],
      "op": "LT",
      "path": "5"
    },
    "7069": {
      "branch": 171,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6066,
        6123
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7070": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6058,
        6124
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BA6"
    },
    "7073": {
      "branch": 171,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6058,
        6124
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7074": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6058,
        6124
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7076": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6058,
        6124
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7077": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6058,
        6124
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7078": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6058,
        6124
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7079": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 110,
      "value": "0x1"
    },
    "7081": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7082": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7084": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7085": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7086": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "7091": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7093": {
      "op": "SHL"
    },
    "7094": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7095": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7102": {
      "op": "SHL"
    },
    "7103": {
      "op": "SUB"
    },
    "7104": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7105": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7106": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "AND",
      "path": "5"
    },
    "7107": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7109": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7110": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ADD",
      "path": "5"
    },
    "7111": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7112": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7113": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7114": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "AND",
      "path": "5"
    },
    "7115": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "7117": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7118": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ADD",
      "path": "5"
    },
    "7119": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7120": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "7122": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7123": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ADD",
      "path": "5"
    },
    "7124": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7125": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7126": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7127": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7128": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7129": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7130": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7131": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7132": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "AND",
      "path": "5"
    },
    "7133": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7134": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6162
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "7139": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6162
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7140": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "7142": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7143": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7144": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ADD",
      "path": "5"
    },
    "7145": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7146": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7148": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7149": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7150": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7151": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7152": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7153": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "SUB",
      "path": "5"
    },
    "7154": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ADD",
      "path": "5"
    },
    "7155": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7156": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7158": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6149
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7159": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7160": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "7161": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7162": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7163": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7164": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C04"
    },
    "7167": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7168": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7170": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7171": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7172": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7173": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "POP",
      "path": "5"
    },
    "7174": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "GAS",
      "path": "5"
    },
    "7175": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "CALL",
      "path": "5"
    },
    "7176": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7177": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7178": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7179": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C18"
    },
    "7182": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7183": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7184": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7186": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7187": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "7188": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7189": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7191": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7192": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7193": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "POP",
      "path": "5"
    },
    "7194": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "POP",
      "path": "5"
    },
    "7195": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "POP",
      "path": "5"
    },
    "7196": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "POP",
      "path": "5"
    },
    "7197": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7199": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7200": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "7201": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7203": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7204": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "LT",
      "path": "5"
    },
    "7205": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7206": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C2E"
    },
    "7209": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7210": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7212": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7213": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7214": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7215": {
      "op": "POP"
    },
    "7216": {
      "branch": 172,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6136,
        6187
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7217": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6128,
        6188
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C39"
    },
    "7220": {
      "branch": 172,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6128,
        6188
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7221": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6128,
        6188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7223": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6128,
        6188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7224": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6128,
        6188
      ],
      "op": "REVERT",
      "path": "5"
    },
    "7225": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6128,
        6188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7226": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 111,
      "value": "0x0"
    },
    "7228": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7229": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7230": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7231": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6203
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "7233": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7235": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7236": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7237": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7238": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7240": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7241": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7242": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7243": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7244": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7251": {
      "op": "SHL"
    },
    "7252": {
      "op": "SUB"
    },
    "7253": {
      "op": "NOT"
    },
    "7254": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "AND",
      "path": "5"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7261": {
      "op": "SHL"
    },
    "7262": {
      "op": "SUB"
    },
    "7263": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "DUP8",
      "path": "5"
    },
    "7264": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "AND",
      "path": "5"
    },
    "7265": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7266": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7267": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "OR",
      "path": "5"
    },
    "7268": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7269": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7270": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6234
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7271": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6255
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 112
    },
    "7272": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7273": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6245
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7275": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6255
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7276": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7277": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6255
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7278": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6255
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7279": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6255
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7280": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7281": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6263
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7284": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6263
      ],
      "op": "ADD",
      "path": "5"
    },
    "7285": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7286": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6263
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7287": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6263
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7288": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6238,
        6263
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7289": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6271
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 113,
      "value": "0x3"
    },
    "7291": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6281
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7292": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6281
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7293": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6281
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7294": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6281
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7295": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6281
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7296": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7297": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7298": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7299": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7300": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7301": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7302": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7303": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6306
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7304": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6321
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7305": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6321
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7306": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6267,
        6321
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7307": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6193,
        6217
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7308": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6336,
        6479
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7315": {
      "op": "SHL"
    },
    "7316": {
      "op": "SUB"
    },
    "7317": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7318": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "AND",
      "path": "5"
    },
    "7319": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7321": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7322": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7323": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7324": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6363
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7326": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7328": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7329": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7331": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7332": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6371
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7333": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6356,
        6377
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7334": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6352,
        6377
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7335": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6352,
        6377
      ],
      "op": "LT",
      "path": "5"
    },
    "7336": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6336,
        6479
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7337": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6336,
        6479
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CFF"
    },
    "7340": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6336,
        6479
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7347": {
      "op": "SHL"
    },
    "7348": {
      "op": "SUB"
    },
    "7349": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7350": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "AND",
      "path": "5"
    },
    "7351": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7353": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7354": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7355": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7356": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6396
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7358": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7360": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7361": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7362": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7363": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7365": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7366": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7367": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6404
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7368": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6407,
        6408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7370": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6405,
        6408
      ],
      "op": "DUP6",
      "path": "5"
    },
    "7371": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6405,
        6408
      ],
      "op": "ADD",
      "path": "5"
    },
    "7372": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7373": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7374": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7375": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7376": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7377": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7378": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7379": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6409
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7380": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6425
      ],
      "op": "DUP7",
      "path": "5"
    },
    "7381": {
      "branch": 173,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6392,
        6425
      ],
      "op": "EQ",
      "path": "5"
    },
    "7382": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6389,
        6475
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "7383": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6389,
        6475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CF7"
    },
    "7386": {
      "branch": 173,
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6389,
        6475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7393": {
      "op": "SHL"
    },
    "7394": {
      "op": "SUB"
    },
    "7395": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 114
    },
    "7396": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "AND",
      "path": "5"
    },
    "7397": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7399": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7400": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7401": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7402": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6455
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7404": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7406": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7407": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7409": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7410": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6463
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7411": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6448,
        6469
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7412": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6437,
        6438
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 115
    },
    "7413": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6437,
        6438
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7414": {
      "op": "POP"
    },
    "7415": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6389,
        6475
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7416": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6379,
        6382
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 116,
      "value": "0x1"
    },
    "7418": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6379,
        6382
      ],
      "op": "ADD",
      "path": "5"
    },
    "7419": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6336,
        6479
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8C"
    },
    "7422": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6336,
        6479
      ],
      "op": "JUMP",
      "path": "5"
    },
    "7423": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6336,
        6479
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7424": {
      "op": "POP"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7431": {
      "op": "SHL"
    },
    "7432": {
      "op": "SUB"
    },
    "7433": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 117
    },
    "7434": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "7435": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "AND",
      "path": "5"
    },
    "7436": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6502,
        6503
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "7438": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7439": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7440": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7441": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "7443": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7445": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7446": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7447": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7448": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7450": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7451": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7452": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6494
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7453": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6497,
        6498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "7455": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6495,
        6498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7456": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6495,
        6498
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "7457": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6495,
        6498
      ],
      "op": "ADD",
      "path": "5"
    },
    "7458": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7459": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7460": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "7461": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7462": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7463": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7464": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "DUP4",
      "path": "5"
    },
    "7465": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6499
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7466": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6503
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7467": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6503
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7468": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6503
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "7469": {
      "fn": "ERC1400._transfertByPartition",
      "offset": [
        6482,
        6503
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "7470": {
      "op": "POP"
    },
    "7471": {
      "op": "POP"
    },
    "7472": {
      "op": "POP"
    },
    "7473": {
      "fn": "ERC1400._transfertByPartition",
      "jump": "o",
      "offset": [
        5827,
        6507
      ],
      "op": "JUMP",
      "path": "5"
    }
  },
  "sha1": "22c2e54445f1f9e79f5d812da5f8e3c1b919ead0",
  "source": "pragma solidity ^0.6.0;\n\nimport \"interfaces/my_IERC20.sol\";\n\ncontract ERC1400 {\n\n  address creator; // Developper account\n\tbool isControl;\n\tIERC20 tokenContract; // TokenContract managing payment\n\n\tenum partitionStates {\n\t\tSTATUS_ACTIVE,\n\t\tSTATUS_CONFINED,\n\t\tSTATUS_SOLD\n\t}\n\n\tenum holderStates {\n\t\tSTATUS_HOLDER,\n\t\tSTATUS_CONTROLLER,\n\t\tSTATUS_ESCROW\n\t}\n\n  // Represents a partially fungible tokens.\n  struct Partition {\n\t\taddress owner;\n    uint256 amount;\n\t\tuint256 creation; // date de cr\u00c3\u00a9ation\n\t\tpartitionStates status;\n  }\n\n\t// Represents a holder of Partition\n\tstruct Holder {\n\t\tuint256 nbUid;\n\t\tholderStates status;\n\t}\n\n\t// Represents an escrow\n\tstruct ConfinedPartition {\n\t\taddress escrow;\n\t\tuint256 expirationDate;\n\t\tuint256 priceExercise;\n\t\taddress recipient;\n\t}\n\n  // Mapping from partition UID\n  mapping (uint256 => Partition) public partitions;\n\n  // Mapping from investor to their partitions\n  mapping (address => mapping (uint256 => uint256)) public uids;\n\n  // Mapping from investor (holder) to the number of partitions they own\n  mapping (address => Holder) public holders;\n\n\t// Mapping from partition UID to escrow status\n\tmapping (uint256 => ConfinedPartition) public confined;\n\n\n\tconstructor(address _tokenContractAddress, bool _isControl) public {\n\t  creator = msg.sender;\n\t\tisControl = _isControl;\n\t\ttokenContract = IERC20(_tokenContractAddress);\n\t}\n\n\t//-------\n\t// getter\n\t//-------\n\n  function getPartitionOwner(uint256 partitionUid) public view returns (address) {\n      return partitions[partitionUid].owner;\n  }\n\n  function getPartitionStatus(uint256 partitionUid) public view returns (uint) {\n      return uint(partitions[partitionUid].status);\n  }\n\n\tfunction getPartitionAmount(uint256 partitionUid) public view returns (uint) {\n      return uint(partitions[partitionUid].amount);\n  }\n\n\tfunction getHolderNbuid(address user) public view returns (uint) {\n      return uint(holders[user].nbUid);\n  }\n\n  function getUid(address user, uint index) public view returns (uint256) {\n      return uint(uids[user][index]);\n  }\n\n\t//---------------------------------------------------------\n\t// specifications ERC1410 - Partially Fungible Token events\n\t//---------------------------------------------------------\n\n\tevent TransferByPartition( uint256 partitionUid, address sender, address receiver, uint256 price );\n\n\t//------------------------------------------------------------\n\t// specifications ERC1410 - Partially Fungible Token functions\n\t//------------------------------------------------------------\n\n  function partitionsOf(address owner) external view returns ( uint256[] memory ) {\n\t\tuint256[] memory uidList = new uint256[](holders[owner].nbUid);\n\t\tfor(uint i = 0; i < holders[owner].nbUid; i++) {\n\t\t\tuidList[i] = uids[owner][i+1];\n\t\t}\n\n    return uidList;\n  }\n\n\tfunction balanceByPartition(uint256 partitionUid) external view returns ( uint256 ){\n\t\treturn partitions[partitionUid].amount;\n\t}\n\n\tfunction balanceOf(address owner) external view returns ( uint256 ){\n\t\tuint256 total = 0;\n\t\tfor(uint i = 0; i < holders[owner].nbUid; i++) {\n\t\t\tif(uids[owner][i+1] != 0) {\n\t\t\t\ttotal += partitions[uids[owner][i+1]].amount;\n\t\t\t}\n\t\t}\n\n\t\treturn total;\n\t}\n\n\t/**\n\t* Register an account\n\t**/\n\tfunction registerAccount() public{\n\t\trequire(tokenContract.balanceOf(msg.sender) >= 0);\n\t\tholders[msg.sender].nbUid = 0;\n\t\tholders[msg.sender].status = holderStates.STATUS_HOLDER;\n\t}\n\n\t/**\n\t* Buy a partition through TokenContract payment.\n\t* Used in ERC20 standard\n\t* @param partitionUid, amount\n\t*\n\t*/\n\tfunction buyPartition( uint256 partitionUid, uint256 amount ) public{\n\t\trequire(partitionUid != 0);\n\t\trequire(holders[msg.sender].status == holderStates.STATUS_HOLDER);\n\t\trequire(tokenContract.balanceOf(msg.sender) >= amount);\n\t\trequire(tokenContract.burnFrom(msg.sender, amount));\n\n\t\tpartitions[partitionUid].owner = msg.sender;\n\t\tpartitions[partitionUid].amount = amount;\n\t\tpartitions[partitionUid].creation = now;\n\t\tpartitions[partitionUid].status = partitionStates.STATUS_ACTIVE;\n\n\t\tholders[msg.sender].nbUid++;\n\t\tuids[msg.sender][holders[msg.sender].nbUid] = partitionUid;\n\t}\n\n\t/**\n\t* Sell a partition through TokenContract payment.\n\t* Used in ERC20 standard\n\t* @param partitionUid, amount\n\t*\n\t*/\n\tfunction sellPartition( uint256 partitionUid ) public{\n\t\trequire(msg.sender == partitions[partitionUid].owner);\n\t\trequire(tokenContract.mintFrom(msg.sender, partitions[partitionUid].amount));\n\n\t\tpartitions[partitionUid].amount = 0;\n\t\tpartitions[partitionUid].status = partitionStates.STATUS_SOLD;\n\n\t\tuint j;\n\t\tfor(uint i = 0; i < holders[msg.sender].nbUid; i++) {\n\t\t\tif(uids[msg.sender][i+1] == partitionUid) {\n\t\t\t\tj = i;\n\t\t\t\ti = holders[msg.sender].nbUid;\n\t\t\t}\n\t\t}\n\t\tuids[msg.sender][j+1] = 0;\n\t}\n\n\t/**\n\t* Transfer a partition through TokenContract payment.\n\t* Used in ERC20 standard\n\t* @param partitionUid, receiver account\n\t*\n\t*/\n\tfunction transferByPartition(uint256 partitionUid, address receiver, uint256 price) public{\n\t\trequire(holders[receiver].status == holderStates.STATUS_HOLDER);\n\n\t\t_transfertByPartition(partitionUid, msg.sender, receiver, price);\n\n\t\t//require(tokenContract.balanceOf(receiver) >= price);\n\t\t//require(msg.sender == partitions[partitionUid].owner);\n\t\t//require(tokenContract.allowance(receiver, address(this)) >= price);\n\t\t//require(tokenContract.transferFrom(receiver, msg.sender, price));  // price should be partitionIndex[partitionuid].amount\n\n\t\t//partitions[partitionUid].owner = receiver;\n\t\t//holders[receiver].nbUid++;\n\t\t//uids[receiver][holders[receiver].nbUid] = partitionUid;\n\n\t\t//uint j;\n\t\t//for(uint i = 0; i < holders[msg.sender].nbUid; i++) {\n\t\t//\tif(uids[msg.sender][i+1] == partitionUid) {\n\t\t//\t\tj = i;\n\t\t//\t\ti = holders[msg.sender].nbUid;\n\t\t//\t}\n\t\t//}\n\t\t//uids[msg.sender][j+1] = 0;\n\n\t\temit TransferByPartition(partitionUid, msg.sender, receiver, price);\n\t}\n\n\n\tfunction _transfertByPartition(uint256 partitionUid, address sender, address receiver, uint256 price) internal virtual {\n\t\trequire(tokenContract.balanceOf(receiver) >= price);\n\t\trequire(sender == partitions[partitionUid].owner);\n\t\trequire(tokenContract.allowance(receiver, address(this)) >= price);\n\t\trequire(tokenContract.transferFrom(receiver, sender, price));\n\n\t\tpartitions[partitionUid].owner = receiver;\n\t\tholders[receiver].nbUid++;\n\t\tuids[receiver][holders[receiver].nbUid] = partitionUid;\n\n\t\tuint j;\n\t\tfor(uint i = 0; i < holders[sender].nbUid; i++) {\n\t\t\tif(uids[sender][i+1] == partitionUid) {\n\t\t\t\tj = i;\n\t\t\t\ti = holders[sender].nbUid;\n\t\t\t}\n\t\t}\n\t\tuids[sender][j+1] = 0;\n\t}\n\n\n\t//-------------------------------------------\n\t// specifications ERC1644 - Controller Events\n\t//-------------------------------------------\n\n    event ControllerTransfer(address controller, address indexed seller, address indexed receiver, uint256 price, uint256 partitionUid);\n\n    event ControllerRedemption(address controller, address indexed seller, uint256 price, uint256 partitionUid);\n\n\n\t//----------------------------------------------\n\t// specifications ERC1644 - Controller functions\n\t//----------------------------------------------\n\n\t/**\n\t* Register a controller\n\t**/\n\tfunction registerController( address controller) public{\n\t\trequire(msg.sender == creator);\n\t\trequire(tokenContract.balanceOf(controller) >= 0);\n\t\trequire(holders[controller].status == holderStates.STATUS_HOLDER);\n\n\t\tholders[controller].status = holderStates.STATUS_CONTROLLER;\n\t}\n\n\t/**\n\t* Revoke a controller\n\t**/\n\tfunction revokeController( address controller) public{\n\t\trequire(msg.sender == creator);\n\t\trequire(holders[controller].status == holderStates.STATUS_CONTROLLER);\n\n\t\tholders[controller].status = holderStates.STATUS_HOLDER;\n\t}\n\n\tfunction isControllable() external view returns (bool){\n\t\treturn isControl;\n\t}\n\n\n\tfunction controllerTransfer(address seller, address receiver, uint256 partitionUid) public{\n\t\trequire(holders[tx.origin].status == holderStates.STATUS_CONTROLLER);\n\t\trequire(holders[seller].status == holderStates.STATUS_HOLDER);\n\t\trequire(holders[receiver].status == holderStates.STATUS_HOLDER);\n\n\t\t_transfertByPartition(partitionUid, seller, receiver, partitions[partitionUid].amount);\n\n\t\t//require(tokenContract.balanceOf(receiver) >= price);\n\t\t//require(seller == partitions[partitionUid].owner);\n\t\t////require(tokenContract.allowance(receiver, address(this)) >= price);\n\t\t//require(tokenContract.transferFrom(receiver, seller, price));  // price should be partitionIndex[partitionuid].amount\n\n\t\t//partitions[partitionUid].owner = receiver;\n\t\t//holders[receiver].nbUid++;\n\t\t//uids[receiver][holders[receiver].nbUid] = partitionUid;\n\n\t\t//uint j;\n\t\t//for(uint i = 0; i < holders[seller].nbUid; i++) {\n\t\t//\tif(uids[seller][i+1] == partitionUid) {\n\t\t//\t\tj = i;\n\t\t//\t\ti = holders[seller].nbUid;\n\t\t//\t}\n\t\t//}\n\t\t//uids[seller][j+1] = 0;\n\n\t\temit ControllerTransfer(tx.origin, seller, receiver, partitions[partitionUid].amount, partitionUid);\n\t}\n\n  function controllerRedeem(address seller, uint256 partitionUid) public{\n\t\trequire(holders[tx.origin].status == holderStates.STATUS_CONTROLLER);\n\t\trequire(holders[seller].status == holderStates.STATUS_HOLDER);\n\n\t\t_transfertByPartition(partitionUid, seller, tx.origin, partitions[partitionUid].amount);\n\n\t\t//require(tokenContract.balanceOf(msg.sender) >= price);\n\t\t//require(seller == partitions[partitionUid].owner);\n\t\t////require(tokenContract.allowance(receiver, address(this)) >= price);\n\t\t//require(tokenContract.transferFrom(msg.sender, seller, price));  // price should be partitionIndex[partitionuid].amount\n\n\t\t//partitions[partitionUid].owner = msg.sender;\n\t\t//holders[msg.sender].nbUid++;\n\t\t//uids[msg.sender][holders[msg.sender].nbUid] = partitionUid;\n\n\t\t//uint j;\n\t\t//for(uint i = 0; i < holders[seller].nbUid; i++) {\n\t\t//\tif(uids[seller][i+1] == partitionUid) {\n\t\t//\t\tj = i;\n\t\t//\t\ti = holders[seller].nbUid;\n\t\t//\t}\n\t\t//}\n\t\t//uids[seller][j+1] = 0;\n\n\t\temit ControllerRedemption(tx.origin, seller, partitions[partitionUid].amount, partitionUid);\n\t}\n\n\t//------------------------------------\n\t// addition to ERC1400 - Escrow events\n\t//------------------------------------\n\n\tevent ApprovalEscrow(address owner, address escrow, uint256 partitionUid, uint256 price);\n\tevent EscrowTransfer(address escrow, address seller, address receiver, uint256 price, uint256 partitionUid);\n\tevent EscrowExplicitTransfer(address escrow, address seller, address recipient, uint256 price, uint256 partitionUid);\n\n\t//---------------------------------------\n\t// addition to ERC1400 - Escrow functions\n\t//---------------------------------------\n\n\tmapping (address => mapping (address => mapping (uint256 => uint256))) private _allowanceEscrow;\n\n\t/**\n\t* Register an escrow address (this should be the caller smart contract address)\n\t**/\n\tfunction registerEscrow(address escrow) public returns (bool){\n\t\tholders[escrow].nbUid = 0;\n\t\tholders[escrow].status = holderStates.STATUS_ESCROW;\n\t\treturn true;\n\t}\n\n\t/**\n\t* Approve an escrow address for the transfer of a partition\n\t**/\n\tfunction approveEscrow(address escrow, uint256 partitionUid, uint256 price) public returns (bool){\n    require(escrow != address(0));\n\t\trequire(price >= partitions[partitionUid].amount);\n\t\trequire(msg.sender == partitions[partitionUid].owner);\n\n    _allowanceEscrow[msg.sender][escrow][partitionUid] = price;\n    emit ApprovalEscrow(msg.sender, escrow, partitionUid, price);\n\t\treturn true;\n\t}\n\n\t/**\n\t* Allowance given to an escrow address on a partition\n\t**/\n\tfunction allowanceEscrow(address owner, address escrow, uint256 partitionUid) public returns (uint256){\n\t\treturn _allowanceEscrow[owner][escrow][partitionUid];\n\t}\n\n\t/**\n\t* Get the message sender (help to debug)\n\t**/\n\tfunction whoIsOrigin() public returns (address){\n\t\treturn tx.origin;\n\t}\n\n\t/**\n\t* Confinement of a Partition for a given duration\n\t**/\n\n\tfunction confinePartition(address recipient, uint256 partitionUid, uint256 expirationDate, uint256 priceExercise) public returns (bool){\n\t\trequire(tx.origin == partitions[partitionUid].owner);\n\t\trequire(holders[msg.sender].status == holderStates.STATUS_ESCROW);\n\t\trequire(_allowanceEscrow[tx.origin][msg.sender][partitionUid] >= priceExercise, \"le contract de s\u00c3\u00a9questre doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition\");\n\n\t\tpartitions[partitionUid].status = partitionStates.STATUS_CONFINED;\n\t\tconfined[partitionUid].escrow = msg.sender;\n\t\tconfined[partitionUid].expirationDate = expirationDate;\n\t\tconfined[partitionUid].priceExercise = priceExercise;\n\t\tconfined[partitionUid].recipient = recipient;\n\t\treturn true;\n\t}\n\n\t/**\n\t* Deconfinement of a Partition\n\t**/\n\n\tfunction deconfinePartition(address recipient, uint256 partitionUid) public returns (bool){\n    // TODO : decomment the requirements\n    require(partitions[partitionUid].owner == recipient, \"le recipient est le propri\u00c3\u00a9taire de la partition\");\n\t\t//require(partitions[partitionUid].status == partitionStates.STATUS_CONFINED, \"la partition doit \u00c3\u00aatre confin\u00c3\u00a9e\");\n\t\trequire(holders[msg.sender].status == holderStates.STATUS_ESCROW, \"la transaction doit \u00c3\u00aatre \u00c3\u00a9mise depuis un compte de s\u00c3\u00a9questre\");\n    //require(_allowanceEscrow[recipient][msg.sender][partitionUid] >= partitions[partitionUid].amount, \"le contract Escrow doit \u00c3\u00aatre autoris\u00c3\u00a9 \u00c3\u00a0 modifier le status de la partition\");\n\n\t\tpartitions[partitionUid].status = partitionStates.STATUS_ACTIVE;\n\t\tif(confined[partitionUid].expirationDate > now) {\n\t\t\tconfined[partitionUid].expirationDate = now;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\t/**\n\t* stop the Option Exercise on a Partition by escrow account or after expiration of the exercise\n\t**/\n\n\tfunction stopOptionByPromisor(uint256 partitionUid) public returns (bool) {\n\t\trequire(holders[msg.sender].status == holderStates.STATUS_ESCROW);\n\t\trequire(holders[tx.origin].status == holderStates.STATUS_HOLDER);\n\t\trequire(msg.sender == confined[partitionUid].escrow);\n\t\trequire(tx.origin == partitions[partitionUid].owner);\n\t\trequire(partitions[partitionUid].status == partitionStates.STATUS_CONFINED);\n\t\t_allowanceEscrow[partitions[partitionUid].owner][msg.sender][partitionUid] = 0;\n\n\t\trequire(now > confined[partitionUid].expirationDate);\n\t\tpartitions[partitionUid].status = partitionStates.STATUS_ACTIVE;\n\t\treturn true;\n\t}\n\n\tfunction stopOptionByRecipient(uint256 partitionUid) public returns (bool) {\n\t\trequire(holders[msg.sender].status == holderStates.STATUS_ESCROW);\n\t\trequire(holders[tx.origin].status == holderStates.STATUS_HOLDER);\n\t\trequire(msg.sender == confined[partitionUid].escrow);\n\t\trequire(tx.origin == confined[partitionUid].recipient);\n\t\trequire(partitions[partitionUid].status == partitionStates.STATUS_CONFINED);\n\t\t_allowanceEscrow[partitions[partitionUid].owner][msg.sender][partitionUid] = 0;\n\n\t\trequire(now <= confined[partitionUid].expirationDate);\n\t\tpartitions[partitionUid].status = partitionStates.STATUS_ACTIVE;\n\t\tconfined[partitionUid].expirationDate = now;\n\t\treturn true;\n\t}\n\n\t/**\n\t* transfer partition from escrow\n\t**/\n\n\tfunction escrowTransfer(address seller, uint256 price, uint256 partitionUid) public{\n\t\trequire(tx.origin == confined[partitionUid].recipient);\n\n\t\trequire(holders[msg.sender].status == holderStates.STATUS_ESCROW);\n\t\trequire(holders[seller].status == holderStates.STATUS_HOLDER);\n\t\trequire(holders[tx.origin].status == holderStates.STATUS_HOLDER);\n\t\trequire(msg.sender == confined[partitionUid].escrow);\n\t\trequire(seller == partitions[partitionUid].owner);\n\t\trequire(now <= confined[partitionUid].expirationDate);\n\n\t\t_transfertByPartition(partitionUid, seller, tx.origin, price);\n\n\t\temit EscrowTransfer(msg.sender, seller, tx.origin, price, partitionUid);\n\t}\n\n\n\tfunction escrowExplicitTransfer(address seller, address recipient, uint256 price, uint256 partitionUid) public{\n\t\trequire(holders[msg.sender].status == holderStates.STATUS_ESCROW);\n\t\trequire(holders[seller].status == holderStates.STATUS_HOLDER);\n\t\trequire(holders[recipient].status == holderStates.STATUS_HOLDER);\n\t\trequire(seller == partitions[partitionUid].owner);\n\n\t\t_transfertByPartition(partitionUid, seller, recipient, price);\n\n\t\temit EscrowExplicitTransfer(msg.sender, seller, recipient, price, partitionUid);\n\t}\n}\n",
  "sourceMap": "61:15993:5:-:0;;;1202:171;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1202:171:5;;;;;;;1274:7;:20;;1298:22;;;-1:-1:-1;;;1298:22:5;-1:-1:-1;;;;;;;;;;1274:20:5;;;1284:10;1274:20;1298:22;;;;1274:20;1324:45;;-1:-1:-1;;;;;1324:45:5;;;;;;;;;;;;;61:15993;;;;;;",
  "sourcePath": "contracts/my_ERC1400.sol",
  "type": "contract"
}