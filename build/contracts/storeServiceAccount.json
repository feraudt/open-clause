{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dataBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payload",
          "type": "uint256"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_data",
          "type": "uint256"
        }
      ],
      "name": "storeData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_payload",
          "type": "uint256"
        }
      ],
      "name": "tokenFallback",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "interfaces/my_IERC20.sol",
    "8": "contracts/storeService_to_account.sol"
  },
  "ast": {
    "absolutePath": "contracts/storeService_to_account.sol",
    "exportedSymbols": {
      "storeServiceAccount": [
        4164
      ]
    },
    "id": 4165,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4036,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "interfaces/my_IERC20.sol",
        "file": "interfaces/my_IERC20.sol",
        "id": 4037,
        "nodeType": "ImportDirective",
        "scope": 4165,
        "sourceUnit": 4601,
        "src": "25:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4164,
        "linearizedBaseContracts": [
          4164
        ],
        "name": "storeServiceAccount",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4039,
            "mutability": "mutable",
            "name": "creator",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4164,
            "src": "100:15:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4038,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "100:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4041,
            "mutability": "mutable",
            "name": "receiver",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4164,
            "src": "155:16:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4040,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "155:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4043,
            "mutability": "mutable",
            "name": "tokenContract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4164,
            "src": "209:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4600",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 4042,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4600,
              "src": "209:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4600",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "12f56410",
            "id": 4047,
            "mutability": "mutable",
            "name": "dataBase",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4164,
            "src": "268:44:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4046,
              "keyType": {
                "id": 4044,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "277:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "268:28:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4045,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "288:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4069,
              "nodeType": "Block",
              "src": "415:104:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4054,
                      "name": "creator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4039,
                      "src": "422:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4055,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "432:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "432:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "422:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4058,
                  "nodeType": "ExpressionStatement",
                  "src": "422:20:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4059,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4041,
                      "src": "446:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4060,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4051,
                      "src": "457:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "446:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4062,
                  "nodeType": "ExpressionStatement",
                  "src": "446:20:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4063,
                      "name": "tokenContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4043,
                      "src": "470:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4065,
                          "name": "_tokenContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4049,
                          "src": "493:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4064,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4600,
                        "src": "486:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4600_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 4066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "486:29:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4600",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "470:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4600",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 4068,
                  "nodeType": "ExpressionStatement",
                  "src": "470:45:8"
                }
              ]
            },
            "documentation": null,
            "id": 4070,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "mutability": "mutable",
                  "name": "_tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4070,
                  "src": "350:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4051,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4070,
                  "src": "381:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "349:50:8"
            },
            "returnParameters": {
              "id": 4053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:0:8"
            },
            "scope": 4164,
            "src": "337:182:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4103,
              "nodeType": "Block",
              "src": "737:293:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$4600",
                          "typeString": "contract IERC20"
                        },
                        "id": 4085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4081,
                          "name": "tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4043,
                          "src": "756:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4600",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4083,
                              "name": "_tokenContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4075,
                              "src": "780:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4082,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4600,
                            "src": "773:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$4600_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 4084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "773:29:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4600",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "756:46:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "748:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4087,
                  "nodeType": "ExpressionStatement",
                  "src": "748:55:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4091,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4073,
                            "src": "941:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4092,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4041,
                            "src": "950:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 4093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "960:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4089,
                            "name": "tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4043,
                            "src": "914:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4600",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 4090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4563,
                          "src": "914:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 4094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:48:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "906:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4096,
                  "nodeType": "ExpressionStatement",
                  "src": "906:57:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4097,
                        "name": "dataBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4047,
                        "src": "999:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4099,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4098,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4073,
                        "src": "1008:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "999:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4100,
                      "name": "payload",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4077,
                      "src": "1019:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "999:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4102,
                  "nodeType": "ExpressionStatement",
                  "src": "999:27:8"
                }
              ]
            },
            "documentation": {
              "id": 4071,
              "nodeType": "StructuredDocumentation",
              "src": "523:93:8",
              "text": "  Function \n  Check the caller and obtain the required tokens then store data "
            },
            "functionSelector": "da9b14bc",
            "id": 4104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4073,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4104,
                  "src": "644:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4075,
                  "mutability": "mutable",
                  "name": "_tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4104,
                  "src": "682:29:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4077,
                  "mutability": "mutable",
                  "name": "payload",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4104,
                  "src": "713:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "713:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "643:86:8"
            },
            "returnParameters": {
              "id": 4079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:8"
            },
            "scope": 4164,
            "src": "618:412:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4138,
              "nodeType": "Block",
              "src": "1134:126:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$4600",
                          "typeString": "contract IERC20"
                        },
                        "id": 4121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4116,
                          "name": "tokenContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4043,
                          "src": "1146:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4600",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 4118,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1170:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1170:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 4117,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4600,
                            "src": "1163:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$4600_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 4120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1163:18:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4600",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "1146:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1138:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4123,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:44:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4125,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4108,
                          "src": "1194:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 4126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1204:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1194:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1186:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:20:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4129,
                  "nodeType": "ExpressionStatement",
                  "src": "1186:20:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4130,
                        "name": "dataBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4047,
                        "src": "1210:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4132,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4131,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4106,
                        "src": "1219:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1210:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4133,
                      "name": "_payload",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4110,
                      "src": "1230:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1210:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4135,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:28:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1249:4:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4114,
                  "id": 4137,
                  "nodeType": "Return",
                  "src": "1242:11:8"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4f4ee353",
            "id": 4139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFallback",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4106,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4139,
                  "src": "1060:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4108,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4139,
                  "src": "1077:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4110,
                  "mutability": "mutable",
                  "name": "_payload",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4139,
                  "src": "1093:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1059:52:8"
            },
            "returnParameters": {
              "id": 4114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4113,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4139,
                  "src": "1128:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4112,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1127:6:8"
            },
            "scope": 4164,
            "src": "1037:223:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4162,
              "nodeType": "Block",
              "src": "1422:100:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4148,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1461:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1461:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4150,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4041,
                            "src": "1473:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 4151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1483:1:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4146,
                            "name": "tokenContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4043,
                            "src": "1434:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4600",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 4147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4563,
                          "src": "1434:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 4152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1434:51:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1426:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:60:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4154,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:60:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4155,
                        "name": "dataBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4047,
                        "src": "1490:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4158,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4156,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1499:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1499:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1490:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4159,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4142,
                      "src": "1513:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1490:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4161,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:28:8"
                }
              ]
            },
            "documentation": {
              "id": 4140,
              "nodeType": "StructuredDocumentation",
              "src": "1263:115:8",
              "text": " Store a given data in dataBase at a given adress.\n Used in ERC20 standard \n @param _data to store"
            },
            "functionSelector": "16b95176",
            "id": 4163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4142,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4163,
                  "src": "1400:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1398:17:8"
            },
            "returnParameters": {
              "id": 4144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:0:8"
            },
            "scope": 4164,
            "src": "1380:142:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4165,
        "src": "62:1462:8"
      }
    ],
    "src": "0:1526:8"
  },
  "bytecode": "60806040526040516103a33803806103a38339818101604052604081101561002657600080fd5b508051602090910151600080546001600160a01b03199081163317909155600180546001600160a01b039384169083161790556002805492909316911617905561032e806100756000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312f564101461005157806316b95176146100895780634f4ee353146100a8578063da9b14bc146100ee575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610124565b60408051918252519081900360200190f35b6100a66004803603602081101561009f57600080fd5b5035610136565b005b6100da600480360360608110156100be57600080fd5b506001600160a01b0381351690602081013590604001356101dc565b604080519115158252519081900360200190f35b6100a66004803603606081101561010457600080fd5b506001600160a01b03813581169160208101359091169060400135610228565b60036020526000908152604090205481565b60025460018054604080516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810193909352519216916323b872dd916064808201926020929091908290030181600087803b15801561019557600080fd5b505af11580156101a9573d6000803e3d6000fd5b505050506040513d60208110156101bf57600080fd5b50516101ca57600080fd5b33600090815260036020526040902055565b6002546000906001600160a01b031633146101f657600080fd5b8260011461020357600080fd5b506001600160a01b038316600090815260036020526040902081905560019392505050565b6002546001600160a01b0383811691161461024257600080fd5b60025460018054604080516323b872dd60e01b81526001600160a01b03888116600483015292831660248201526044810193909352519216916323b872dd916064808201926020929091908290030181600087803b1580156102a357600080fd5b505af11580156102b7573d6000803e3d6000fd5b505050506040513d60208110156102cd57600080fd5b50516102d857600080fd5b6001600160a01b039092166000908152600360205260409020919091555056fea2646970667358221220dcfdf96f111be358c05ccd95223453649d5b31c4397552d5e1c97356231bb86364736f6c634300060c0033",
  "bytecodeSha1": "1ae6eef119a8c47fc494aa47978349941eb6ebf8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "storeServiceAccount",
  "coverageMap": {
    "branches": {
      "11": {},
      "8": {
        "storeServiceAccount.receiveApproval": {
          "12": [
            756,
            802,
            true
          ],
          "13": [
            914,
            962,
            true
          ]
        },
        "storeServiceAccount.storeData": {
          "9": [
            1434,
            1485,
            true
          ]
        },
        "storeServiceAccount.tokenFallback": {
          "10": [
            1146,
            1181,
            true
          ],
          "11": [
            1194,
            1205,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "8": {
        "storeServiceAccount.receiveApproval": {
          "6": [
            748,
            803
          ],
          "7": [
            906,
            963
          ],
          "8": [
            999,
            1026
          ]
        },
        "storeServiceAccount.storeData": {
          "0": [
            1426,
            1486
          ],
          "1": [
            1490,
            1518
          ]
        },
        "storeServiceAccount.tokenFallback": {
          "2": [
            1138,
            1182
          ],
          "3": [
            1186,
            1206
          ],
          "4": [
            1210,
            1238
          ],
          "5": [
            1242,
            1253
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806312f564101461005157806316b95176146100895780634f4ee353146100a8578063da9b14bc146100ee575b600080fd5b6100776004803603602081101561006757600080fd5b50356001600160a01b0316610124565b60408051918252519081900360200190f35b6100a66004803603602081101561009f57600080fd5b5035610136565b005b6100da600480360360608110156100be57600080fd5b506001600160a01b0381351690602081013590604001356101dc565b604080519115158252519081900360200190f35b6100a66004803603606081101561010457600080fd5b506001600160a01b03813581169160208101359091169060400135610228565b60036020526000908152604090205481565b60025460018054604080516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810193909352519216916323b872dd916064808201926020929091908290030181600087803b15801561019557600080fd5b505af11580156101a9573d6000803e3d6000fd5b505050506040513d60208110156101bf57600080fd5b50516101ca57600080fd5b33600090815260036020526040902055565b6002546000906001600160a01b031633146101f657600080fd5b8260011461020357600080fd5b506001600160a01b038316600090815260036020526040902081905560019392505050565b6002546001600160a01b0383811691161461024257600080fd5b60025460018054604080516323b872dd60e01b81526001600160a01b03888116600483015292831660248201526044810193909352519216916323b872dd916064808201926020929091908290030181600087803b1580156102a357600080fd5b505af11580156102b7573d6000803e3d6000fd5b505050506040513d60208110156102cd57600080fd5b50516102d857600080fd5b6001600160a01b039092166000908152600360205260409020919091555056fea2646970667358221220dcfdf96f111be358c05ccd95223453649d5b31c4397552d5e1c97356231bb86364736f6c634300060c0033",
  "deployedSourceMap": "62:1462:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;268:44;;;;;;;;;;;;;;;;-1:-1:-1;268:44:8;-1:-1:-1;;;;;268:44:8;;:::i;:::-;;;;;;;;;;;;;;;;1380:142;;;;;;;;;;;;;;;;-1:-1:-1;1380:142:8;;:::i;:::-;;1037:223;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1037:223:8;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;618:412;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;618:412:8;;;;;;;;;;;;;;;;;:::i;268:44::-;;;;;;;;;;;;;:::o;1380:142::-;1434:13;;;1473:8;;1434:51;;;-1:-1:-1;;;1434:51:8;;1461:10;1434:51;;;;-1:-1:-1;;;;;1473:8:8;;;1434:51;;;;;;;;;;;;:13;;;:26;;:51;;;;;;;;;;;;;;;:13;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1434:51:8;1426:60;;;;;;1499:10;1490:20;;;;:8;:20;;;;;:28;1380:142::o;1037:223::-;1146:13;;1128:4;;-1:-1:-1;;;;;1146:13:8;1170:10;1146:35;1138:44;;;;;;1194:6;1204:1;1194:11;1186:20;;;;;;-1:-1:-1;;;;;;1210:17:8;;;;;;:8;:17;;;;;:28;;;1249:4;1037:223;;;;;:::o;618:412::-;756:13;;-1:-1:-1;;;;;756:46:8;;;:13;;:46;748:55;;;;;;914:13;;;950:8;;914:48;;;-1:-1:-1;;;914:48:8;;-1:-1:-1;;;;;914:48:8;;;;;;;950:8;;;914:48;;;;;;;;;;;;:13;;;:26;;:48;;;;;;;;;;;;;;;:13;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;914:48:8;906:57;;;;;;-1:-1:-1;;;;;999:17:8;;;;;;;:8;:17;;;;;:27;;;;-1:-1:-1;618:412:8:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "receiveApproval(address,address,uint256)": {
        "notice": "Function   Check the caller and obtain the required tokens then store data "
      },
      "storeData(uint256)": {
        "notice": "Store a given data in dataBase at a given adress. Used in ERC20 standard ",
        "params": {
          "_data": "to store"
        }
      }
    },
    "version": 1
  },
  "offset": [
    62,
    1524
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12F56410 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x16B95176 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x4F4EE353 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xDA9B14BC EQ PUSH2 0xEE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x124 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x136 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 EQ PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE MLOAD SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC REVERT 0xF9 PUSH16 0x111BE358C05CCD95223453649D5B31C4 CODECOPY PUSH22 0x52D5E1C97356231BB86364736F6C634300060C003300 ",
  "pcMap": {
    "0": {
      "offset": [
        62,
        1524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "5": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "6": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "7": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "8": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "12": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "REVERT",
      "path": "8"
    },
    "16": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "17": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "POP",
      "path": "8"
    },
    "18": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "21": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "LT",
      "path": "8"
    },
    "22": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "26": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "29": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "SHR",
      "path": "8"
    },
    "32": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "33": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x12F56410"
    },
    "38": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "EQ",
      "path": "8"
    },
    "39": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "43": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "44": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x16B95176"
    },
    "49": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "EQ",
      "path": "8"
    },
    "50": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x89"
    },
    "53": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "54": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "55": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x4F4EE353"
    },
    "60": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "EQ",
      "path": "8"
    },
    "61": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA8"
    },
    "64": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "65": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "66": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xDA9B14BC"
    },
    "71": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "EQ",
      "path": "8"
    },
    "72": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEE"
    },
    "75": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "76": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "77": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "DUP1",
      "path": "8"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        62,
        1524
      ],
      "op": "REVERT",
      "path": "8"
    },
    "81": {
      "offset": [
        268,
        312
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "82": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x77"
    },
    "85": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "87": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "DUP1",
      "path": "8"
    },
    "88": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "89": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "SUB",
      "path": "8"
    },
    "90": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "92": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "DUP2",
      "path": "8"
    },
    "93": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "LT",
      "path": "8"
    },
    "94": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "95": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x67"
    },
    "98": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "99": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "DUP1",
      "path": "8"
    },
    "102": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "REVERT",
      "path": "8"
    },
    "103": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "offset": [
        268,
        312
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "112": {
      "op": "SHL"
    },
    "113": {
      "op": "SUB"
    },
    "114": {
      "offset": [
        268,
        312
      ],
      "op": "AND",
      "path": "8"
    },
    "115": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x124"
    },
    "118": {
      "fn": null,
      "jump": "i",
      "offset": [
        268,
        312
      ],
      "op": "JUMP",
      "path": "8"
    },
    "119": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "120": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "122": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "DUP1",
      "path": "8"
    },
    "123": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "124": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "125": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "DUP3",
      "path": "8"
    },
    "126": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "127": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "128": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "129": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "DUP2",
      "path": "8"
    },
    "130": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "131": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "SUB",
      "path": "8"
    },
    "132": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "134": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "ADD",
      "path": "8"
    },
    "135": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "136": {
      "fn": null,
      "offset": [
        268,
        312
      ],
      "op": "RETURN",
      "path": "8"
    },
    "137": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "138": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA6"
    },
    "141": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "143": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "DUP1",
      "path": "8"
    },
    "144": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "145": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "SUB",
      "path": "8"
    },
    "146": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "148": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "DUP2",
      "path": "8"
    },
    "149": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "LT",
      "path": "8"
    },
    "150": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "151": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x9F"
    },
    "154": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "155": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "157": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "DUP1",
      "path": "8"
    },
    "158": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "REVERT",
      "path": "8"
    },
    "159": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "160": {
      "op": "POP"
    },
    "161": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "162": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x136"
    },
    "165": {
      "fn": "storeServiceAccount.storeData",
      "jump": "i",
      "offset": [
        1380,
        1522
      ],
      "op": "JUMP",
      "path": "8"
    },
    "166": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "167": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "STOP",
      "path": "8"
    },
    "168": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "169": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDA"
    },
    "172": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "174": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP1",
      "path": "8"
    },
    "175": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "176": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SUB",
      "path": "8"
    },
    "177": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "179": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP2",
      "path": "8"
    },
    "180": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "LT",
      "path": "8"
    },
    "181": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "182": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBE"
    },
    "185": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "186": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "188": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP1",
      "path": "8"
    },
    "189": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "REVERT",
      "path": "8"
    },
    "190": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "191": {
      "op": "POP"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "198": {
      "op": "SHL"
    },
    "199": {
      "op": "SUB"
    },
    "200": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP2",
      "path": "8"
    },
    "201": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "202": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "AND",
      "path": "8"
    },
    "203": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "204": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "206": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP2",
      "path": "8"
    },
    "207": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "ADD",
      "path": "8"
    },
    "208": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "209": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "210": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "212": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "ADD",
      "path": "8"
    },
    "213": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "214": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DC"
    },
    "217": {
      "fn": "storeServiceAccount.tokenFallback",
      "jump": "i",
      "offset": [
        1037,
        1260
      ],
      "op": "JUMP",
      "path": "8"
    },
    "218": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "219": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "221": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP1",
      "path": "8"
    },
    "222": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "223": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "224": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "225": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "226": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP3",
      "path": "8"
    },
    "227": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "228": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "229": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "230": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "DUP2",
      "path": "8"
    },
    "231": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "232": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SUB",
      "path": "8"
    },
    "233": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "235": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "ADD",
      "path": "8"
    },
    "236": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "237": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "RETURN",
      "path": "8"
    },
    "238": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "239": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA6"
    },
    "242": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "244": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "DUP1",
      "path": "8"
    },
    "245": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "246": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "SUB",
      "path": "8"
    },
    "247": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "249": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "DUP2",
      "path": "8"
    },
    "250": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "LT",
      "path": "8"
    },
    "251": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "252": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x104"
    },
    "255": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "256": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "258": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "DUP1",
      "path": "8"
    },
    "259": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "REVERT",
      "path": "8"
    },
    "260": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "261": {
      "op": "POP"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "268": {
      "op": "SHL"
    },
    "269": {
      "op": "SUB"
    },
    "270": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "DUP2",
      "path": "8"
    },
    "271": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "272": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "DUP2",
      "path": "8"
    },
    "273": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "AND",
      "path": "8"
    },
    "274": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "275": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "277": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "DUP2",
      "path": "8"
    },
    "278": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "ADD",
      "path": "8"
    },
    "279": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "280": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "281": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "282": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "AND",
      "path": "8"
    },
    "283": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "284": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "286": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "ADD",
      "path": "8"
    },
    "287": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "288": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x228"
    },
    "291": {
      "fn": "storeServiceAccount.receiveApproval",
      "jump": "i",
      "offset": [
        618,
        1030
      ],
      "op": "JUMP",
      "path": "8"
    },
    "292": {
      "offset": [
        268,
        312
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "293": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "295": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "297": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "298": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "300": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "301": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "DUP2",
      "path": "8"
    },
    "302": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "303": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "305": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "306": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "307": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "308": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        268,
        312
      ],
      "op": "DUP2",
      "path": "8"
    },
    "309": {
      "fn": "storeServiceAccount.receiveApproval",
      "jump": "o",
      "offset": [
        268,
        312
      ],
      "op": "JUMP",
      "path": "8"
    },
    "310": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1380,
        1522
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "311": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 0,
      "value": "0x2"
    },
    "313": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "314": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "316": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1473,
        1481
      ],
      "op": "DUP1",
      "path": "8"
    },
    "317": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1473,
        1481
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "318": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "320": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "321": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "322": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP2",
      "path": "8"
    },
    "331": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "332": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1461,
        1471
      ],
      "op": "CALLER",
      "path": "8"
    },
    "333": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "335": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP3",
      "path": "8"
    },
    "336": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ADD",
      "path": "8"
    },
    "337": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "344": {
      "op": "SHL"
    },
    "345": {
      "op": "SUB"
    },
    "346": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1473,
        1481
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "347": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1473,
        1481
      ],
      "op": "DUP4",
      "path": "8"
    },
    "348": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1473,
        1481
      ],
      "op": "AND",
      "path": "8"
    },
    "349": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "351": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP3",
      "path": "8"
    },
    "352": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ADD",
      "path": "8"
    },
    "353": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "354": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "356": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP2",
      "path": "8"
    },
    "357": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ADD",
      "path": "8"
    },
    "358": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "359": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "360": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "361": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "362": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "363": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "364": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "AND",
      "path": "8"
    },
    "365": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "366": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1460
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "371": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1460
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "372": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "374": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "375": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP3",
      "path": "8"
    },
    "376": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ADD",
      "path": "8"
    },
    "377": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "378": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "380": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "381": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "382": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "383": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "384": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP3",
      "path": "8"
    },
    "385": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "386": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "SUB",
      "path": "8"
    },
    "387": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ADD",
      "path": "8"
    },
    "388": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP2",
      "path": "8"
    },
    "389": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "391": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1447
      ],
      "op": "DUP8",
      "path": "8"
    },
    "392": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "393": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "394": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "395": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "396": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "397": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x195"
    },
    "400": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "401": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "403": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "404": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "REVERT",
      "path": "8"
    },
    "405": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "406": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "POP",
      "path": "8"
    },
    "407": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "GAS",
      "path": "8"
    },
    "408": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "CALL",
      "path": "8"
    },
    "409": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "410": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "411": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "412": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A9"
    },
    "415": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "416": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "417": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "419": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "420": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "421": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "422": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "424": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "REVERT",
      "path": "8"
    },
    "425": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "426": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "POP",
      "path": "8"
    },
    "427": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "POP",
      "path": "8"
    },
    "428": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "POP",
      "path": "8"
    },
    "429": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "POP",
      "path": "8"
    },
    "430": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "432": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "433": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "434": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "436": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP2",
      "path": "8"
    },
    "437": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "LT",
      "path": "8"
    },
    "438": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "439": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1BF"
    },
    "442": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "443": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "445": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "DUP1",
      "path": "8"
    },
    "446": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "REVERT",
      "path": "8"
    },
    "447": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "branch": 9,
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1434,
        1485
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "450": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1426,
        1486
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CA"
    },
    "453": {
      "branch": 9,
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1426,
        1486
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "454": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1426,
        1486
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "456": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1426,
        1486
      ],
      "op": "DUP1",
      "path": "8"
    },
    "457": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1426,
        1486
      ],
      "op": "REVERT",
      "path": "8"
    },
    "458": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1426,
        1486
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "459": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1499,
        1509
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 1
    },
    "460": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "462": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "463": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "DUP2",
      "path": "8"
    },
    "464": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "465": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1498
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "467": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "469": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "470": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "472": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "473": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1510
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "474": {
      "fn": "storeServiceAccount.storeData",
      "offset": [
        1490,
        1518
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "475": {
      "fn": "storeServiceAccount.storeData",
      "jump": "o",
      "offset": [
        1380,
        1522
      ],
      "op": "JUMP",
      "path": "8"
    },
    "476": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "477": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1146,
        1159
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0x2"
    },
    "479": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1146,
        1159
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "480": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1128,
        1132
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "482": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1128,
        1132
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "489": {
      "op": "SHL"
    },
    "490": {
      "op": "SUB"
    },
    "491": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1146,
        1159
      ],
      "op": "AND",
      "path": "8"
    },
    "492": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1170,
        1180
      ],
      "op": "CALLER",
      "path": "8"
    },
    "493": {
      "branch": 10,
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1146,
        1181
      ],
      "op": "EQ",
      "path": "8"
    },
    "494": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1138,
        1182
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1F6"
    },
    "497": {
      "branch": 10,
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1138,
        1182
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "498": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1138,
        1182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "500": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1138,
        1182
      ],
      "op": "DUP1",
      "path": "8"
    },
    "501": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1138,
        1182
      ],
      "op": "REVERT",
      "path": "8"
    },
    "502": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1138,
        1182
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "503": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1194,
        1200
      ],
      "op": "DUP3",
      "path": "8",
      "statement": 3
    },
    "504": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1204,
        1205
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "506": {
      "branch": 11,
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1194,
        1205
      ],
      "op": "EQ",
      "path": "8"
    },
    "507": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1186,
        1206
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x203"
    },
    "510": {
      "branch": 11,
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1186,
        1206
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "511": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1186,
        1206
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "513": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1186,
        1206
      ],
      "op": "DUP1",
      "path": "8"
    },
    "514": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1186,
        1206
      ],
      "op": "REVERT",
      "path": "8"
    },
    "515": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1186,
        1206
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "516": {
      "op": "POP"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "523": {
      "op": "SHL"
    },
    "524": {
      "op": "SUB"
    },
    "525": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 4
    },
    "526": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "AND",
      "path": "8"
    },
    "527": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "529": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "530": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP2",
      "path": "8"
    },
    "531": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "532": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1218
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "534": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "536": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "537": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "539": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "540": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1227
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "541": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1238
      ],
      "op": "DUP2",
      "path": "8"
    },
    "542": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1238
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "543": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1210,
        1238
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "544": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1249,
        1253
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 5,
      "value": "0x1"
    },
    "546": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "547": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "548": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "POP",
      "path": "8"
    },
    "549": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "POP",
      "path": "8"
    },
    "550": {
      "fn": "storeServiceAccount.tokenFallback",
      "offset": [
        1037,
        1260
      ],
      "op": "POP",
      "path": "8"
    },
    "551": {
      "fn": "storeServiceAccount.tokenFallback",
      "jump": "o",
      "offset": [
        1037,
        1260
      ],
      "op": "JUMP",
      "path": "8"
    },
    "552": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        618,
        1030
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "553": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        769
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 6,
      "value": "0x2"
    },
    "555": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        769
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "562": {
      "op": "SHL"
    },
    "563": {
      "op": "SUB"
    },
    "564": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        802
      ],
      "op": "DUP4",
      "path": "8"
    },
    "565": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        802
      ],
      "op": "DUP2",
      "path": "8"
    },
    "566": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        802
      ],
      "op": "AND",
      "path": "8"
    },
    "567": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        769
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "568": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        769
      ],
      "op": "AND",
      "path": "8"
    },
    "569": {
      "branch": 12,
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        756,
        802
      ],
      "op": "EQ",
      "path": "8"
    },
    "570": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        748,
        803
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x242"
    },
    "573": {
      "branch": 12,
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        748,
        803
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "574": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        748,
        803
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "576": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        748,
        803
      ],
      "op": "DUP1",
      "path": "8"
    },
    "577": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        748,
        803
      ],
      "op": "REVERT",
      "path": "8"
    },
    "578": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        748,
        803
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "579": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 7,
      "value": "0x2"
    },
    "581": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "582": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "584": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        950,
        958
      ],
      "op": "DUP1",
      "path": "8"
    },
    "585": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        950,
        958
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "586": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "588": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "589": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "590": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "599": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "606": {
      "op": "SHL"
    },
    "607": {
      "op": "SUB"
    },
    "608": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP9",
      "path": "8"
    },
    "609": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "610": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "AND",
      "path": "8"
    },
    "611": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "613": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP4",
      "path": "8"
    },
    "614": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ADD",
      "path": "8"
    },
    "615": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "616": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        950,
        958
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "617": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        950,
        958
      ],
      "op": "DUP4",
      "path": "8"
    },
    "618": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        950,
        958
      ],
      "op": "AND",
      "path": "8"
    },
    "619": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "621": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP3",
      "path": "8"
    },
    "622": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ADD",
      "path": "8"
    },
    "623": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "624": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "626": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "627": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ADD",
      "path": "8"
    },
    "628": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "629": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "630": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "631": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "632": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "633": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "634": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "AND",
      "path": "8"
    },
    "635": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "636": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        940
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0x23B872DD"
    },
    "641": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        940
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "642": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "644": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "645": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP3",
      "path": "8"
    },
    "646": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ADD",
      "path": "8"
    },
    "647": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "648": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "650": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "651": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "652": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "653": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "654": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP3",
      "path": "8"
    },
    "655": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "656": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "SUB",
      "path": "8"
    },
    "657": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ADD",
      "path": "8"
    },
    "658": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "659": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "661": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        927
      ],
      "op": "DUP8",
      "path": "8"
    },
    "662": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "663": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "EXTCODESIZE",
      "path": "8"
    },
    "664": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "665": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "666": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "667": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A3"
    },
    "670": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "671": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "673": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "674": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "REVERT",
      "path": "8"
    },
    "675": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "676": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "POP",
      "path": "8"
    },
    "677": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "GAS",
      "path": "8"
    },
    "678": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "CALL",
      "path": "8"
    },
    "679": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "680": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "681": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "682": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B7"
    },
    "685": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "686": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "687": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "689": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "690": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "RETURNDATACOPY",
      "path": "8"
    },
    "691": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "692": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "694": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "REVERT",
      "path": "8"
    },
    "695": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "696": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "POP",
      "path": "8"
    },
    "697": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "POP",
      "path": "8"
    },
    "698": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "POP",
      "path": "8"
    },
    "699": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "POP",
      "path": "8"
    },
    "700": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "702": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "703": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "RETURNDATASIZE",
      "path": "8"
    },
    "704": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "706": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP2",
      "path": "8"
    },
    "707": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "LT",
      "path": "8"
    },
    "708": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "709": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2CD"
    },
    "712": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "713": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "715": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "DUP1",
      "path": "8"
    },
    "716": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "REVERT",
      "path": "8"
    },
    "717": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "718": {
      "op": "POP"
    },
    "719": {
      "branch": 13,
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        914,
        962
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "720": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        906,
        963
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2D8"
    },
    "723": {
      "branch": 13,
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        906,
        963
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "724": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        906,
        963
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "726": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        906,
        963
      ],
      "op": "DUP1",
      "path": "8"
    },
    "727": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        906,
        963
      ],
      "op": "REVERT",
      "path": "8"
    },
    "728": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        906,
        963
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "op": "SUB"
    },
    "737": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 8
    },
    "738": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "739": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "AND",
      "path": "8"
    },
    "740": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "742": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "743": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "DUP2",
      "path": "8"
    },
    "744": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "745": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1007
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "747": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "749": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "750": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "752": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "753": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1016
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "754": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1026
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "755": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1026
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "756": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1026
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "757": {
      "fn": "storeServiceAccount.receiveApproval",
      "offset": [
        999,
        1026
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "758": {
      "op": "POP"
    },
    "759": {
      "fn": "storeServiceAccount.receiveApproval",
      "jump": "o",
      "offset": [
        618,
        1030
      ],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "2676521698ab7cf8fde5a2fa58b6509169795df1",
  "source": "pragma solidity ^0.6.0;\n\nimport \"interfaces/my_IERC20.sol\";\n\n\ncontract storeServiceAccount {\n  \n    address creator; // Developper who can receive tokens\n\taddress receiver; // Person who will receive tokens \n\tIERC20 tokenContract; // TokenContract managing payment \n\n\tmapping (address => uint256) public dataBase;\n\t\n\n\t/* Constructor */\n\tconstructor (address _tokenContractAddress, address _receiver) public payable {\n\t    creator = msg.sender;\n\t\treceiver = _receiver;\n\t\ttokenContract = IERC20(_tokenContractAddress);\n\t}\n\t\n\t/**\n\t *  Function \n\t *  Check the caller and obtain the required tokens then store data \n\t */\n\tfunction receiveApproval (address _sender, /*uint256 _value ,*/ address _tokenContractAddress, uint256 payload) public {    \n\t    require(tokenContract == IERC20(_tokenContractAddress));\n\t\t/* Obtain the required tokens. if not enough tokens sent then the service will not take place */\n\t\trequire(tokenContract.transferFrom(_sender, receiver, 1));\n\n\t\t/* Store data in dataBase */\n\t\tdataBase[_sender] = payload;\n\t}\n\n\n    function tokenFallback(address _sender, uint256 _value, uint256 _payload ) public returns (bool) {\n\t\trequire(tokenContract == IERC20(msg.sender));\n\t\trequire(_value == 1);\n\t\tdataBase[_sender] = _payload;\n\t\treturn true;\n    }\n\n\t/**\n\t* Store a given data in dataBase at a given adress.\n\t* Used in ERC20 standard \n\t* @param _data to store\n\t*\n\t*/\n\tfunction storeData( uint256 _data ) public{\n\t\trequire(tokenContract.transferFrom(msg.sender, receiver, 1));\n\t\tdataBase[msg.sender] = _data;\n\t}\n}\n\n",
  "sourceMap": "62:1462:8:-:0;;;337:182;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;337:182:8;;;;;;;422:7;:20;;-1:-1:-1;;;;;;422:20:8;;;432:10;422:20;;;;;446;;-1:-1:-1;;;;;446:20:8;;;;;;;;;470:13;:45;;;;;;;;;;;62:1462;;;;;;",
  "sourcePath": "contracts/storeService_to_account.sol",
  "type": "contract"
}